{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"expo/virtual/env","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"dgHc21cgR+buKc7O3/dChhD5JJk=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":102,"index":102}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"expo-location","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":104},"end":{"line":2,"column":42,"index":146}}],"key":"GNP7AGCKsBRUhlnTZ4lIPpbkT9E=","exportNames":["*"]}},{"name":"expo-task-manager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":148},"end":{"line":3,"column":49,"index":197}}],"key":"bYMruywqSxptqIFJf3NLT25O6Io=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":199},"end":{"line":4,"column":69,"index":268}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"./AuthContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":270},"end":{"line":5,"column":40,"index":310}}],"key":"YmpzODa+dVz64UAAYTI+RwJeEt0=","exportNames":["*"]}},{"name":"../firebase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":312},"end":{"line":6,"column":33,"index":345}}],"key":"+wmKgdsSWUSr7xrYhqzXqBvu5fU=","exportNames":["*"]}},{"name":"firebase/firestore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":347},"end":{"line":18,"column":28,"index":519}}],"key":"n8ZdwTgQb9oFW01pH/SKxYwC/nA=","exportNames":["*"]}},{"name":"../config/env","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":521},"end":{"line":19,"column":83,"index":604}}],"key":"RGB4LNLgNgEtjcVNHbEAgFn5Y3M=","exportNames":["*"]}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useLocation = exports.default = exports.LocationProvider = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _env2 = require(_dependencyMap[3], \"expo/virtual/env\");\n  var _react = _interopRequireWildcard(require(_dependencyMap[4], \"react\"));\n  var Location = _interopRequireWildcard(require(_dependencyMap[5], \"expo-location\"));\n  var TaskManager = _interopRequireWildcard(require(_dependencyMap[6], \"expo-task-manager\"));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[7], \"@react-native-async-storage/async-storage\"));\n  var _AuthContext = require(_dependencyMap[8], \"./AuthContext\");\n  var _firebase = require(_dependencyMap[9], \"../firebase\");\n  var _firestore = require(_dependencyMap[10], \"firebase/firestore\");\n  var _env3 = require(_dependencyMap[11], \"../config/env\");\n  var _jsxDevRuntime = require(_dependencyMap[12], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"C:\\\\WORK SPACE\\\\FIELDS\\\\src\\\\context\\\\LocationContext.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  var LOCATION_TASK_NAME = 'background-location-task';\n\n  // Helper function to calculate straight-line distance between two points (Haversine formula)\n  var calculateStraightLineDistance = (lat1, lon1, lat2, lon2) => {\n    var R = 6371; // Earth's radius in kilometers\n    var dLat = (lat2 - lat1) * Math.PI / 180;\n    var dLon = (lon2 - lon1) * Math.PI / 180;\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var distance = R * c;\n    return distance;\n  };\n  var resolveGoogleApiKey = () => {\n    var envKey = _env2.env.EXPO_PUBLIC_GOOGLE_MAPS_API_KEY?.trim();\n    if (envKey) {\n      return envKey;\n    }\n    var fallbackKey = _env3.GOOGLE_MAPS_API_KEY?.trim();\n    return fallbackKey || undefined;\n  };\n\n  // Google Distance Matrix API based distance calculation\n  var GOOGLE_API_KEY = resolveGoogleApiKey();\n  if (!GOOGLE_API_KEY) {\n    console.warn('Google Maps API key is not configured; distance tracking will be disabled.');\n  }\n  var DEFAULT_HISTORY_KEY = 'locationHistory';\n  var DEFAULT_TOTAL_KEY = 'totalDistance';\n  var HISTORY_LIMIT = 1000;\n  var getStoredUser = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var userStr = yield _asyncStorage.default.getItem('user');\n        return userStr ? JSON.parse(userStr) : null;\n      } catch (error) {\n        console.warn('Unable to read stored user for distance tracking:', error);\n        return null;\n      }\n    });\n    return function getStoredUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getStorageKeysForUser = userId => ({\n    history: userId ? `${DEFAULT_HISTORY_KEY}_${userId}` : DEFAULT_HISTORY_KEY,\n    total: userId ? `${DEFAULT_TOTAL_KEY}_${userId}` : DEFAULT_TOTAL_KEY\n  });\n  var getDrivingDistanceKm = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (originLat, originLng, destLat, destLng) {\n      if (!GOOGLE_API_KEY) {\n        console.warn('Google Distance API is not configured; skipping distance calculation.');\n        return null;\n      }\n      var url = `https://maps.googleapis.com/maps/api/distancematrix/json?units=metric&origins=${encodeURIComponent(`${originLat},${originLng}`)}&destinations=${encodeURIComponent(`${destLat},${destLng}`)}&mode=driving&key=${GOOGLE_API_KEY}`;\n      try {\n        var res = yield fetch(url);\n        if (!res.ok) {\n          console.warn(`Google Distance API request failed: ${res.status} ${res.statusText}`);\n          return null;\n        }\n        var data = yield res.json();\n        var el = data?.rows?.[0]?.elements?.[0];\n        if (el?.status === 'OK' && el?.distance?.value != null) {\n          var distanceKm = el.distance.value / 1000; // meters to km\n          console.log(`Distance calculated: ${distanceKm.toFixed(3)} km (Google API)`);\n          return distanceKm;\n        } else {\n          console.warn(`Google Distance API error: ${el?.status || 'Unknown error'}`);\n          return null;\n        }\n      } catch (error) {\n        console.warn('Google Distance API request failed:', error);\n        return null;\n      }\n    });\n    return function getDrivingDistanceKm(_x, _x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  // Helper function to get current date string (YYYY-MM-DD)\n  var getCurrentDateString = () => {\n    var now = new Date();\n    return now.toISOString().split('T')[0];\n  };\n\n  // Helper function to store travelled distance in Firebase\n  var storeTravelledDistance = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2.default)(function* (userId, distanceKm) {\n      var currentDate = getCurrentDateString();\n      var docId = `${currentDate}_${userId}`;\n      try {\n        var travelledRef = (0, _firestore.doc)(_firebase.db, 'travelled', docId);\n\n        // Try to get the existing document first\n        try {\n          var existingSnapshot = yield (0, _firestore.getDocs)((0, _firestore.query)((0, _firestore.collection)(_firebase.db, 'travelled'), (0, _firestore.where)('current_date', '==', currentDate), (0, _firestore.where)('user_id', '==', userId)));\n          if (!existingSnapshot.empty) {\n            // Update existing document\n            var existingData = existingSnapshot.docs[0].data();\n            var newTotalDistance = (existingData.travelled_distance_kms || 0) + distanceKm;\n            yield (0, _firestore.updateDoc)(existingSnapshot.docs[0].ref, {\n              travelled_distance_kms: newTotalDistance,\n              updated_at: (0, _firestore.serverTimestamp)()\n            });\n            console.log(`Updated daily distance for ${userId}: ${newTotalDistance.toFixed(2)} km`);\n          } else {\n            // Create new document\n            yield (0, _firestore.setDoc)(travelledRef, {\n              current_date: currentDate,\n              user_id: userId,\n              travelled_distance_kms: distanceKm,\n              created_at: (0, _firestore.serverTimestamp)(),\n              updated_at: (0, _firestore.serverTimestamp)()\n            });\n            console.log(`Created new daily distance record for ${userId}: ${distanceKm.toFixed(2)} km`);\n          }\n        } catch (queryError) {\n          console.log('Query failed, trying direct document creation:', queryError);\n          // Fallback: try to create/update the document directly\n          yield (0, _firestore.setDoc)(travelledRef, {\n            current_date: currentDate,\n            user_id: userId,\n            travelled_distance_kms: distanceKm,\n            created_at: (0, _firestore.serverTimestamp)(),\n            updated_at: (0, _firestore.serverTimestamp)()\n          }, {\n            merge: true\n          });\n          console.log(`Created/merged daily distance record for ${userId}: ${distanceKm.toFixed(2)} km`);\n        }\n      } catch (error) {\n        console.error('Error storing travelled distance:', error);\n      }\n    });\n    return function storeTravelledDistance(_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  // Helper function to store live tracking data\n  var storeLiveTrackingData = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* (userId, locationData) {\n      var currentDate = getCurrentDateString();\n      var docId = `${currentDate}_${userId}`;\n      try {\n        var liveTrackingRef = (0, _firestore.doc)(_firebase.db, 'live_tracking_daily', docId);\n        var timestamp = Date.now();\n        var locationPoint = {\n          lat: locationData.latitude,\n          lng: locationData.longitude,\n          timestamp: timestamp,\n          accuracy: locationData.accuracy || null\n        };\n\n        // Try to get the existing document first\n        try {\n          var existingSnapshot = yield (0, _firestore.getDocs)((0, _firestore.query)((0, _firestore.collection)(_firebase.db, 'live_tracking_daily'), (0, _firestore.where)('current_date', '==', currentDate), (0, _firestore.where)('user_id', '==', userId)));\n          if (!existingSnapshot.empty) {\n            // Update existing document - append to locations array\n            var existingData = existingSnapshot.docs[0].data();\n            var existingLocations = existingData.locations || [];\n            yield (0, _firestore.updateDoc)(existingSnapshot.docs[0].ref, {\n              locations: [...existingLocations, locationPoint],\n              last_updated: (0, _firestore.serverTimestamp)()\n            });\n            console.log(`Updated live tracking data for ${userId} on ${currentDate} (${existingLocations.length + 1} points)`);\n          } else {\n            // Create new document\n            yield (0, _firestore.setDoc)(liveTrackingRef, {\n              current_date: currentDate,\n              user_id: userId,\n              locations: [locationPoint],\n              created_at: (0, _firestore.serverTimestamp)(),\n              last_updated: (0, _firestore.serverTimestamp)()\n            });\n            console.log(`Created new live tracking record for ${userId} on ${currentDate}`);\n          }\n        } catch (queryError) {\n          console.log('Query failed, trying direct document creation:', queryError);\n          // Fallback: try to create/update the document directly using merge\n          yield (0, _firestore.setDoc)(liveTrackingRef, {\n            current_date: currentDate,\n            user_id: userId,\n            locations: [locationPoint],\n            created_at: (0, _firestore.serverTimestamp)(),\n            last_updated: (0, _firestore.serverTimestamp)()\n          }, {\n            merge: true\n          });\n          console.log(`Created/merged live tracking data for ${userId} on ${currentDate}`);\n        }\n      } catch (error) {\n        console.error('Error storing live tracking data:', error);\n      }\n    });\n    return function storeLiveTrackingData(_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var distanceUpdateListener = null;\n  var setDistanceUpdateListener = listener => {\n    distanceUpdateListener = listener;\n  };\n  var notifyDistanceUpdate = newTotal => {\n    try {\n      distanceUpdateListener?.(newTotal);\n    } catch (listenerError) {\n      console.error('Failed to notify distance update listener:', listenerError);\n    }\n  };\n  var processLocationForDistance = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2.default)(function* (locationData, userIdHint) {\n      try {\n        var storedUserId = userIdHint ?? (yield (0, _asyncToGenerator2.default)(function* () {\n          var storedUser = yield getStoredUser();\n          return storedUser?.id ?? null;\n        })());\n        var _getStorageKeysForUse = getStorageKeysForUser(storedUserId),\n          historyKey = _getStorageKeysForUse.history,\n          totalKey = _getStorageKeysForUse.total;\n        var existingData = yield _asyncStorage.default.getItem(historyKey);\n        var locationHistory = [];\n        if (existingData) {\n          try {\n            locationHistory = JSON.parse(existingData);\n          } catch (parseError) {\n            console.warn('Stored location history was corrupted; resetting history.', parseError);\n            locationHistory = [];\n          }\n        }\n        if (locationHistory.length > 0) {\n          var prevLocation = locationHistory[locationHistory.length - 1];\n          var hasMeaningfulMovement = Math.abs(prevLocation.latitude - locationData.latitude) > 1e-5 || Math.abs(prevLocation.longitude - locationData.longitude) > 1e-5;\n          if (hasMeaningfulMovement) {\n            var distanceKm = yield getDrivingDistanceKm(prevLocation.latitude, prevLocation.longitude, locationData.latitude, locationData.longitude);\n            if (distanceKm != null && Number.isFinite(distanceKm)) {\n              var currentTotalStr = yield _asyncStorage.default.getItem(totalKey);\n              var currentTotal = currentTotalStr ? parseFloat(currentTotalStr) : 0;\n              var _newTotal = currentTotal + distanceKm;\n              yield _asyncStorage.default.setItem(totalKey, _newTotal.toString());\n              notifyDistanceUpdate(_newTotal);\n            } else {\n              console.warn('Google Distance API failed or returned invalid data; distance not accumulated');\n            }\n          }\n        }\n        locationHistory.push(locationData);\n        if (locationHistory.length > HISTORY_LIMIT) {\n          locationHistory.splice(0, locationHistory.length - HISTORY_LIMIT);\n        }\n        yield _asyncStorage.default.setItem(historyKey, JSON.stringify(locationHistory));\n      } catch (error) {\n        console.error('Error processing location for distance:', error);\n      }\n    });\n    return function processLocationForDistance(_x9, _x0) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var LocationContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useLocation = () => {\n    _s();\n    var context = (0, _react.useContext)(LocationContext);\n    if (!context) {\n      throw new Error('useLocation must be used within a LocationProvider');\n    }\n    return context;\n  };\n  exports.useLocation = useLocation;\n  _s(useLocation, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n  TaskManager.defineTask(LOCATION_TASK_NAME, /*#__PURE__*/function () {\n    var _ref8 = (0, _asyncToGenerator2.default)(function* (_ref7) {\n      var data = _ref7.data,\n        error = _ref7.error;\n      if (error) {\n        console.error('Background location task error:', error);\n        return;\n      }\n      if (data) {\n        var _ref9 = data,\n          locations = _ref9.locations;\n        console.log('Received new locations', locations);\n        for (var location of locations) {\n          var locationData = {\n            latitude: location.coords.latitude,\n            longitude: location.coords.longitude,\n            timestamp: location.timestamp,\n            accuracy: location.coords.accuracy || undefined\n          };\n          try {\n            var storedUser = yield getStoredUser();\n            yield processLocationForDistance(locationData, storedUser?.id ?? null);\n            if (!storedUser?.id) {\n              continue;\n            }\n\n            // Persist to Firestore (locations history and optional live tracking doc)\n            try {\n              var historyDoc = {\n                user_id: storedUser.id,\n                latitude: locationData.latitude,\n                longitude: locationData.longitude,\n                timestamp: locationData.timestamp,\n                accuracy: locationData.accuracy ?? null,\n                created_at: (0, _firestore.serverTimestamp)(),\n                is_live_tracking: true\n              };\n              yield (0, _firestore.addDoc)((0, _firestore.collection)(_firebase.db, 'locations'), historyDoc);\n\n              // Update live tracking document if active\n              var liveStatus = yield _asyncStorage.default.getItem(`liveTracking_${storedUser.id}`);\n              if (liveStatus === 'true') {\n                yield (0, _firestore.setDoc)((0, _firestore.doc)(_firebase.db, 'live_tracking', storedUser.id), {\n                  user_id: storedUser.id,\n                  name: storedUser.name,\n                  latitude: locationData.latitude,\n                  longitude: locationData.longitude,\n                  accuracy: locationData.accuracy ?? null,\n                  last_update: (0, _firestore.serverTimestamp)(),\n                  timestamp: locationData.timestamp\n                }, {\n                  merge: true\n                });\n              }\n            } catch (persistErr) {\n              console.error('Failed to persist location to Firestore:', persistErr);\n            }\n          } catch (err) {\n            console.error('Error processing location:', err);\n          }\n        }\n      }\n    });\n    return function (_x1) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n  var LocationProvider = _ref0 => {\n    _s2();\n    var children = _ref0.children;\n    var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      currentLocation = _useState2[0],\n      setCurrentLocation = _useState2[1];\n    var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isTracking = _useState4[0],\n      setIsTracking = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      totalDistance = _useState6[0],\n      setTotalDistance = _useState6[1];\n    // Live tracking states\n    var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      isLiveTracking = _useState8[0],\n      setIsLiveTracking = _useState8[1];\n    var _useState9 = (0, _react.useState)([]),\n      _useState0 = (0, _slicedToArray2.default)(_useState9, 2),\n      liveUsers = _useState0[0],\n      setLiveUsers = _useState0[1];\n    var _useState1 = (0, _react.useState)(null),\n      _useState10 = (0, _slicedToArray2.default)(_useState1, 2),\n      liveTrackingInterval = _useState10[0],\n      setLiveTrackingInterval = _useState10[1];\n    var _useAuth = (0, _AuthContext.useAuth)(),\n      user = _useAuth.user;\n    (0, _react.useEffect)(() => {\n      var listener = newTotal => {\n        setTotalDistance(newTotal);\n      };\n      setDistanceUpdateListener(listener);\n      return () => setDistanceUpdateListener(null);\n    }, []);\n    (0, _react.useEffect)(() => {\n      checkTrackingStatus();\n      getCurrentLocation();\n      calculateTotalDistance();\n    }, [user]);\n    var checkTrackingStatus = /*#__PURE__*/function () {\n      var _ref1 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user) return;\n        try {\n          var trackingStatus = yield _asyncStorage.default.getItem(`tracking_${user.id}`);\n          if (trackingStatus === 'true') {\n            var isTaskRunning = yield Location.hasStartedLocationUpdatesAsync(LOCATION_TASK_NAME);\n            setIsTracking(isTaskRunning);\n\n            // Also check live tracking status\n            var liveStatus = yield _asyncStorage.default.getItem(`liveTracking_${user.id}`);\n            setIsLiveTracking(liveStatus === 'true' && isTaskRunning);\n          }\n        } catch (error) {\n          console.error('Error checking tracking status:', error);\n        }\n      });\n      return function checkTrackingStatus() {\n        return _ref1.apply(this, arguments);\n      };\n    }();\n    var getCurrentLocation = /*#__PURE__*/function () {\n      var _ref10 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n            status = _yield$Location$reque.status;\n          if (status !== 'granted') {\n            console.log('Location permission not granted');\n            return;\n          }\n          var location = yield Location.getCurrentPositionAsync({});\n          var locationData = {\n            latitude: location.coords.latitude,\n            longitude: location.coords.longitude,\n            timestamp: location.timestamp,\n            accuracy: location.coords.accuracy || undefined\n          };\n          setCurrentLocation(locationData);\n        } catch (error) {\n          console.error('Error getting current location:', error);\n        }\n      });\n      return function getCurrentLocation() {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n    var refreshTotalDistanceFromFirebase = /*#__PURE__*/function () {\n      var _ref11 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user?.id) return;\n        try {\n          var currentDate = getCurrentDateString();\n          var docId = `${currentDate}_${user.id}`;\n\n          // Use doc() to get a specific document by ID instead of query with where\n          var travelledDocRef = (0, _firestore.doc)(_firebase.db, 'travelled', docId);\n          var travelledSnapshot = yield (0, _firestore.getDocs)((0, _firestore.query)((0, _firestore.collection)(_firebase.db, 'travelled'), (0, _firestore.where)('current_date', '==', currentDate), (0, _firestore.where)('user_id', '==', user.id)));\n          if (!travelledSnapshot.empty) {\n            var data = travelledSnapshot.docs[0].data();\n            var firebaseDistance = data.travelled_distance_kms || 0;\n\n            // Update local storage and state\n            yield _asyncStorage.default.setItem('totalDistance', firebaseDistance.toString());\n            setTotalDistance(firebaseDistance);\n            console.log(`Synced total distance from Firebase: ${firebaseDistance.toFixed(2)} km`);\n          } else {\n            // If no document exists for today, set distance to 0\n            yield _asyncStorage.default.setItem('totalDistance', '0');\n            setTotalDistance(0);\n            console.log('No distance data found for today, reset to 0');\n          }\n        } catch (error) {\n          console.error('Error refreshing distance from Firebase:', error);\n          // Don't change the current value on error, just log it\n        }\n      });\n      return function refreshTotalDistanceFromFirebase() {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n    var calculateTotalDistance = /*#__PURE__*/function () {\n      var _ref12 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user?.id) {\n          setTotalDistance(0);\n          return;\n        }\n        try {\n          // Prefer per-user stored total, then app-wide default, then legacy key\n          var _getStorageKeysForUse2 = getStorageKeysForUser(user.id),\n            totalKey = _getStorageKeysForUse2.total;\n          var totalDistanceStr = (yield _asyncStorage.default.getItem(totalKey)) ?? (yield _asyncStorage.default.getItem(DEFAULT_TOTAL_KEY)) ?? (yield _asyncStorage.default.getItem('totalDistance'));\n          if (totalDistanceStr) {\n            var parsed = parseFloat(totalDistanceStr);\n            setTotalDistance(Number.isFinite(parsed) ? parsed : 0);\n\n            // Also try to sync with Firebase travelled data for today (best-effort)\n            yield refreshTotalDistanceFromFirebase();\n            return;\n          }\n\n          // If no local data, try to get from Firebase\n          yield refreshTotalDistanceFromFirebase();\n        } catch (error) {\n          console.error('Error calculating total distance:', error);\n          setTotalDistance(0);\n        }\n      });\n      return function calculateTotalDistance() {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n    var refreshTotalDistance = /*#__PURE__*/function () {\n      var _ref13 = (0, _asyncToGenerator2.default)(function* () {\n        yield refreshTotalDistanceFromFirebase();\n      });\n      return function refreshTotalDistance() {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n    var startTracking = /*#__PURE__*/function () {\n      var _ref14 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user) return;\n        try {\n          var _yield$Location$reque2 = yield Location.requestForegroundPermissionsAsync(),\n            foregroundStatus = _yield$Location$reque2.status;\n          if (foregroundStatus !== 'granted') {\n            throw new Error('Foreground location permission not granted');\n          }\n          var _yield$Location$reque3 = yield Location.requestBackgroundPermissionsAsync(),\n            backgroundStatus = _yield$Location$reque3.status;\n          if (backgroundStatus !== 'granted') {\n            console.warn('Background location permission not granted, tracking may be limited');\n          }\n          yield Location.startLocationUpdatesAsync(LOCATION_TASK_NAME, {\n            accuracy: Location.Accuracy.High,\n            timeInterval: 15000,\n            // 15 seconds (more frequent)\n            distanceInterval: 10,\n            // 10 meters (more sensitive)\n            foregroundService: {\n              notificationTitle: 'Location Tracking Active',\n              notificationBody: 'Tracking your location for distance calculation',\n              notificationColor: '#4CAF50'\n            }\n          });\n          yield _asyncStorage.default.setItem(`tracking_${user.id}`, 'true');\n          setIsTracking(true);\n        } catch (error) {\n          console.error('Error starting location tracking:', error);\n          throw error;\n        }\n      });\n      return function startTracking() {\n        return _ref14.apply(this, arguments);\n      };\n    }();\n    var stopTracking = /*#__PURE__*/function () {\n      var _ref15 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user) return;\n        try {\n          var hasStarted = yield Location.hasStartedLocationUpdatesAsync(LOCATION_TASK_NAME);\n          if (hasStarted) {\n            yield Location.stopLocationUpdatesAsync(LOCATION_TASK_NAME);\n          }\n          yield _asyncStorage.default.setItem(`tracking_${user.id}`, 'false');\n          setIsTracking(false);\n        } catch (error) {\n          console.error('Error stopping location tracking:', error);\n          throw error;\n        }\n      });\n      return function stopTracking() {\n        return _ref15.apply(this, arguments);\n      };\n    }();\n    var getLocationHistory = /*#__PURE__*/function () {\n      var _ref16 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user?.id) {\n          return [];\n        }\n        try {\n          var _getStorageKeysForUse3 = getStorageKeysForUser(user.id),\n            historyKey = _getStorageKeysForUse3.history;\n          var historyData = (yield _asyncStorage.default.getItem(historyKey)) ?? (yield _asyncStorage.default.getItem(DEFAULT_HISTORY_KEY));\n          return historyData ? JSON.parse(historyData) : [];\n        } catch (error) {\n          console.error('Error getting location history:', error);\n          return [];\n        }\n      });\n      return function getLocationHistory() {\n        return _ref16.apply(this, arguments);\n      };\n    }();\n\n    // Unified tracking function that combines both regular and live tracking\n    var startUnifiedTracking = /*#__PURE__*/function () {\n      var _ref17 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user) return;\n        try {\n          var _yield$Location$reque4 = yield Location.requestForegroundPermissionsAsync(),\n            status = _yield$Location$reque4.status;\n          if (status !== 'granted') {\n            throw new Error('Location permission not granted');\n          }\n          var _yield$Location$reque5 = yield Location.requestBackgroundPermissionsAsync(),\n            backgroundStatus = _yield$Location$reque5.status;\n          if (backgroundStatus !== 'granted') {\n            console.warn('Background location permission not granted, tracking may be limited');\n          }\n\n          // Start background location tracking for distance calculation\n          yield Location.startLocationUpdatesAsync(LOCATION_TASK_NAME, {\n            accuracy: Location.Accuracy.High,\n            // Use high accuracy for better distance calculation\n            timeInterval: 15000,\n            // 15 seconds (more frequent updates)\n            distanceInterval: 10,\n            // 10 meters (capture smaller movements)\n            foregroundService: {\n              notificationTitle: 'Location Tracking Active',\n              notificationBody: 'Your location is being tracked for distance calculation',\n              notificationColor: '#4CAF50'\n            }\n          });\n\n          // Mark live tracking active in Firestore for admin visibility\n          yield (0, _firestore.setDoc)((0, _firestore.doc)(_firebase.db, 'live_tracking', user.id), {\n            user_id: user.id,\n            name: user.name,\n            is_active: true,\n            started_at: (0, _firestore.serverTimestamp)(),\n            last_update: (0, _firestore.serverTimestamp)(),\n            latitude: null,\n            longitude: null,\n            accuracy: null\n          }, {\n            merge: true\n          });\n\n          // Start sending location updates every 60 seconds for live tracking\n          var interval = setInterval(/*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n            try {\n              var location = yield Location.getCurrentPositionAsync({\n                accuracy: Location.Accuracy.High\n              });\n              var locationData = {\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude,\n                timestamp: location.timestamp,\n                accuracy: location.coords.accuracy || undefined\n              };\n              yield processLocationForDistance(locationData, user?.id ?? null);\n              setCurrentLocation(locationData);\n\n              // Update live tracking doc and save to locations collection\n              try {\n                yield (0, _firestore.setDoc)((0, _firestore.doc)(_firebase.db, 'live_tracking', user.id), {\n                  latitude: locationData.latitude,\n                  longitude: locationData.longitude,\n                  accuracy: locationData.accuracy ?? null,\n                  last_update: (0, _firestore.serverTimestamp)(),\n                  timestamp: locationData.timestamp\n                }, {\n                  merge: true\n                });\n\n                // Store in new Firebase structure\n                if (user.id) {\n                  yield storeLiveTrackingData(user.id, locationData);\n                }\n\n                // Keep legacy collection for backward compatibility\n                yield (0, _firestore.addDoc)((0, _firestore.collection)(_firebase.db, 'locations'), {\n                  user_id: user.id,\n                  latitude: locationData.latitude,\n                  longitude: locationData.longitude,\n                  timestamp: locationData.timestamp,\n                  accuracy: locationData.accuracy ?? null,\n                  created_at: (0, _firestore.serverTimestamp)(),\n                  is_live_tracking: true\n                });\n              } catch (err) {\n                console.error('Failed to update Firestore live location:', err);\n              }\n            } catch (error) {\n              console.error('Error getting live location:', error);\n            }\n          }), 60000); // Update every 60 seconds (1 minute)\n\n          setLiveTrackingInterval(interval);\n          setIsTracking(true);\n          setIsLiveTracking(true);\n          yield _asyncStorage.default.setItem(`tracking_${user.id}`, 'true');\n          yield _asyncStorage.default.setItem(`liveTracking_${user.id}`, 'true');\n        } catch (error) {\n          console.error('Error starting unified tracking:', error);\n          throw error;\n        }\n      });\n      return function startUnifiedTracking() {\n        return _ref17.apply(this, arguments);\n      };\n    }();\n    var stopUnifiedTracking = /*#__PURE__*/function () {\n      var _ref19 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user) return;\n        try {\n          // Stop background location tracking\n          var hasStarted = yield Location.hasStartedLocationUpdatesAsync(LOCATION_TASK_NAME);\n          if (hasStarted) {\n            yield Location.stopLocationUpdatesAsync(LOCATION_TASK_NAME);\n          }\n\n          // Mark live tracking inactive in Firestore\n          yield (0, _firestore.setDoc)((0, _firestore.doc)(_firebase.db, 'live_tracking', user.id), {\n            is_active: false,\n            stopped_at: (0, _firestore.serverTimestamp)()\n          }, {\n            merge: true\n          });\n\n          // Clear interval\n          if (liveTrackingInterval) {\n            clearInterval(liveTrackingInterval);\n            setLiveTrackingInterval(null);\n          }\n          setIsTracking(false);\n          setIsLiveTracking(false);\n          yield _asyncStorage.default.setItem(`tracking_${user.id}`, 'false');\n          yield _asyncStorage.default.setItem(`liveTracking_${user.id}`, 'false');\n        } catch (error) {\n          console.error('Error stopping unified tracking:', error);\n          throw error;\n        }\n      });\n      return function stopUnifiedTracking() {\n        return _ref19.apply(this, arguments);\n      };\n    }();\n\n    // Legacy functions for backward compatibility\n    var startLiveTracking = /*#__PURE__*/function () {\n      var _ref20 = (0, _asyncToGenerator2.default)(function* () {\n        return startUnifiedTracking();\n      });\n      return function startLiveTracking() {\n        return _ref20.apply(this, arguments);\n      };\n    }();\n    var stopLiveTracking = /*#__PURE__*/function () {\n      var _ref21 = (0, _asyncToGenerator2.default)(function* () {\n        return stopUnifiedTracking();\n      });\n      return function stopLiveTracking() {\n        return _ref21.apply(this, arguments);\n      };\n    }();\n    var getLiveTrackingUsers = (0, _react.useCallback)(/*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n      if (!user || user.role !== 'admin') return;\n      try {\n        // Try to get all live tracking documents without complex queries first\n        var snap = yield (0, _firestore.getDocs)((0, _firestore.collection)(_firebase.db, 'live_tracking'));\n        var allUsers = snap.docs.map(d => d.data());\n\n        // Filter for active users with recent updates\n        var twoMinutesAgo = Date.now() - 2 * 60 * 1000;\n        var activeUsers = allUsers.filter(u => {\n          if (!u.is_active || !u.latitude || !u.longitude) return false;\n          var lastUpdate = u.last_update instanceof _firestore.Timestamp ? u.last_update.toMillis() : u.last_update ? new Date(u.last_update).getTime() : 0;\n          return lastUpdate > twoMinutesAgo;\n        });\n        var users = activeUsers.map(u => ({\n          userId: u.user_id,\n          name: u.name,\n          location: {\n            latitude: u.latitude,\n            longitude: u.longitude,\n            timestamp: u.timestamp,\n            accuracy: u.accuracy ?? undefined\n          },\n          lastUpdate: u.last_update instanceof _firestore.Timestamp ? u.last_update.toMillis() : u.last_update ? new Date(u.last_update).getTime() : Date.now()\n        }));\n        setLiveUsers(users);\n      } catch (error) {\n        console.error('Error getting live tracking users:', error);\n        // Set empty array on error to prevent UI issues\n        setLiveUsers([]);\n      }\n    }), [user]);\n\n    // Check live tracking status on app start\n    (0, _react.useEffect)(() => {\n      var checkLiveTrackingStatus = /*#__PURE__*/function () {\n        var _ref23 = (0, _asyncToGenerator2.default)(function* () {\n          if (!user) return;\n          try {\n            var liveTrackingStatus = yield _asyncStorage.default.getItem(`liveTracking_${user.id}`);\n            if (liveTrackingStatus === 'true') {\n              // Restart unified tracking if it was active\n              yield startUnifiedTracking();\n            }\n          } catch (error) {\n            console.error('Error checking live tracking status:', error);\n          }\n        });\n        return function checkLiveTrackingStatus() {\n          return _ref23.apply(this, arguments);\n        };\n      }();\n      checkLiveTrackingStatus();\n\n      // For admin, start polling for live users\n      if (user?.role === 'admin') {\n        getLiveTrackingUsers();\n        var adminInterval = setInterval(getLiveTrackingUsers, 15000); // Poll every 15 seconds\n        return () => clearInterval(adminInterval);\n      }\n    }, [user, getLiveTrackingUsers]);\n\n    // Cleanup on unmount\n    (0, _react.useEffect)(() => {\n      return () => {\n        if (liveTrackingInterval) {\n          clearInterval(liveTrackingInterval);\n        }\n      };\n    }, [liveTrackingInterval]);\n\n    // Refresh total distance periodically\n    (0, _react.useEffect)(() => {\n      if (!user) return;\n      var distanceRefreshInterval = setInterval(() => {\n        refreshTotalDistanceFromFirebase();\n      }, 60000); // Refresh every minute\n\n      return () => clearInterval(distanceRefreshInterval);\n    }, [user]);\n    return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(LocationContext.Provider, {\n      value: {\n        currentLocation,\n        isTracking,\n        totalDistance,\n        startTracking,\n        stopTracking,\n        getLocationHistory,\n        // Unified tracking (replaces both regular and live tracking)\n        startUnifiedTracking,\n        stopUnifiedTracking,\n        // Legacy live tracking (for backward compatibility)\n        startLiveTracking,\n        stopLiveTracking,\n        isLiveTracking,\n        liveUsers,\n        getLiveTrackingUsers,\n        refreshTotalDistance\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 5\n    }, this);\n  };\n  exports.LocationProvider = LocationProvider;\n  _s2(LocationProvider, \"R3bykkplpRr/pdXTEfORVQTSn4Q=\", false, function () {\n    return [_AuthContext.useAuth];\n  });\n  _c = LocationProvider;\n  var _default = exports.default = LocationProvider;\n  var _c;\n  $RefreshReg$(_c, \"LocationProvider\");\n});","lineCount":874,"map":[[10,2,1,0],[10,6,1,0,"_react"],[10,12,1,0],[10,15,1,0,"_interopRequireWildcard"],[10,38,1,0],[10,39,1,0,"require"],[10,46,1,0],[10,47,1,0,"_dependencyMap"],[10,61,1,0],[11,2,2,0],[11,6,2,0,"Location"],[11,14,2,0],[11,17,2,0,"_interopRequireWildcard"],[11,40,2,0],[11,41,2,0,"require"],[11,48,2,0],[11,49,2,0,"_dependencyMap"],[11,63,2,0],[12,2,3,0],[12,6,3,0,"TaskManager"],[12,17,3,0],[12,20,3,0,"_interopRequireWildcard"],[12,43,3,0],[12,44,3,0,"require"],[12,51,3,0],[12,52,3,0,"_dependencyMap"],[12,66,3,0],[13,2,4,0],[13,6,4,0,"_asyncStorage"],[13,19,4,0],[13,22,4,0,"_interopRequireDefault"],[13,44,4,0],[13,45,4,0,"require"],[13,52,4,0],[13,53,4,0,"_dependencyMap"],[13,67,4,0],[14,2,5,0],[14,6,5,0,"_AuthContext"],[14,18,5,0],[14,21,5,0,"require"],[14,28,5,0],[14,29,5,0,"_dependencyMap"],[14,43,5,0],[15,2,6,0],[15,6,6,0,"_firebase"],[15,15,6,0],[15,18,6,0,"require"],[15,25,6,0],[15,26,6,0,"_dependencyMap"],[15,40,6,0],[16,2,7,0],[16,6,7,0,"_firestore"],[16,16,7,0],[16,19,7,0,"require"],[16,26,7,0],[16,27,7,0,"_dependencyMap"],[16,41,7,0],[17,2,19,0],[17,6,19,0,"_env3"],[17,11,19,0],[17,14,19,0,"require"],[17,21,19,0],[17,22,19,0,"_dependencyMap"],[17,36,19,0],[18,2,19,83],[18,6,19,83,"_jsxDevRuntime"],[18,20,19,83],[18,23,19,83,"require"],[18,30,19,83],[18,31,19,83,"_dependencyMap"],[18,45,19,83],[19,2,19,83],[19,6,19,83,"_jsxFileName"],[19,18,19,83],[20,4,19,83,"_s"],[20,6,19,83],[20,9,19,83,"$RefreshSig$"],[20,21,19,83],[21,4,19,83,"_s2"],[21,7,19,83],[21,10,19,83,"$RefreshSig$"],[21,22,19,83],[22,2,19,83],[22,11,19,83,"_interopRequireWildcard"],[22,35,19,83,"e"],[22,36,19,83],[22,38,19,83,"t"],[22,39,19,83],[22,68,19,83,"WeakMap"],[22,75,19,83],[22,81,19,83,"r"],[22,82,19,83],[22,89,19,83,"WeakMap"],[22,96,19,83],[22,100,19,83,"n"],[22,101,19,83],[22,108,19,83,"WeakMap"],[22,115,19,83],[22,127,19,83,"_interopRequireWildcard"],[22,150,19,83],[22,162,19,83,"_interopRequireWildcard"],[22,163,19,83,"e"],[22,164,19,83],[22,166,19,83,"t"],[22,167,19,83],[22,176,19,83,"t"],[22,177,19,83],[22,181,19,83,"e"],[22,182,19,83],[22,186,19,83,"e"],[22,187,19,83],[22,188,19,83,"__esModule"],[22,198,19,83],[22,207,19,83,"e"],[22,208,19,83],[22,214,19,83,"o"],[22,215,19,83],[22,217,19,83,"i"],[22,218,19,83],[22,220,19,83,"f"],[22,221,19,83],[22,226,19,83,"__proto__"],[22,235,19,83],[22,243,19,83,"default"],[22,250,19,83],[22,252,19,83,"e"],[22,253,19,83],[22,270,19,83,"e"],[22,271,19,83],[22,294,19,83,"e"],[22,295,19,83],[22,320,19,83,"e"],[22,321,19,83],[22,330,19,83,"f"],[22,331,19,83],[22,337,19,83,"o"],[22,338,19,83],[22,341,19,83,"t"],[22,342,19,83],[22,345,19,83,"n"],[22,346,19,83],[22,349,19,83,"r"],[22,350,19,83],[22,358,19,83,"o"],[22,359,19,83],[22,360,19,83,"has"],[22,363,19,83],[22,364,19,83,"e"],[22,365,19,83],[22,375,19,83,"o"],[22,376,19,83],[22,377,19,83,"get"],[22,380,19,83],[22,381,19,83,"e"],[22,382,19,83],[22,385,19,83,"o"],[22,386,19,83],[22,387,19,83,"set"],[22,390,19,83],[22,391,19,83,"e"],[22,392,19,83],[22,394,19,83,"f"],[22,395,19,83],[22,409,19,83,"_t"],[22,411,19,83],[22,415,19,83,"e"],[22,416,19,83],[22,432,19,83,"_t"],[22,434,19,83],[22,441,19,83,"hasOwnProperty"],[22,455,19,83],[22,456,19,83,"call"],[22,460,19,83],[22,461,19,83,"e"],[22,462,19,83],[22,464,19,83,"_t"],[22,466,19,83],[22,473,19,83,"i"],[22,474,19,83],[22,478,19,83,"o"],[22,479,19,83],[22,482,19,83,"Object"],[22,488,19,83],[22,489,19,83,"defineProperty"],[22,503,19,83],[22,508,19,83,"Object"],[22,514,19,83],[22,515,19,83,"getOwnPropertyDescriptor"],[22,539,19,83],[22,540,19,83,"e"],[22,541,19,83],[22,543,19,83,"_t"],[22,545,19,83],[22,552,19,83,"i"],[22,553,19,83],[22,554,19,83,"get"],[22,557,19,83],[22,561,19,83,"i"],[22,562,19,83],[22,563,19,83,"set"],[22,566,19,83],[22,570,19,83,"o"],[22,571,19,83],[22,572,19,83,"f"],[22,573,19,83],[22,575,19,83,"_t"],[22,577,19,83],[22,579,19,83,"i"],[22,580,19,83],[22,584,19,83,"f"],[22,585,19,83],[22,586,19,83,"_t"],[22,588,19,83],[22,592,19,83,"e"],[22,593,19,83],[22,594,19,83,"_t"],[22,596,19,83],[22,607,19,83,"f"],[22,608,19,83],[22,613,19,83,"e"],[22,614,19,83],[22,616,19,83,"t"],[22,617,19,83],[23,2,21,0],[23,6,21,6,"LOCATION_TASK_NAME"],[23,24,21,24],[23,27,21,27],[23,53,21,53],[25,2,23,0],[26,2,24,0],[26,6,24,6,"calculateStraightLineDistance"],[26,35,24,35],[26,38,24,38,"calculateStraightLineDistance"],[26,39,24,39,"lat1"],[26,43,24,51],[26,45,24,53,"lon1"],[26,49,24,65],[26,51,24,67,"lat2"],[26,55,24,79],[26,57,24,81,"lon2"],[26,61,24,93],[26,66,24,106],[27,4,25,2],[27,8,25,8,"R"],[27,9,25,9],[27,12,25,12],[27,16,25,16],[27,17,25,17],[27,18,25,18],[28,4,26,2],[28,8,26,8,"dLat"],[28,12,26,12],[28,15,26,15],[28,16,26,16,"lat2"],[28,20,26,20],[28,23,26,23,"lat1"],[28,27,26,27],[28,31,26,31,"Math"],[28,35,26,35],[28,36,26,36,"PI"],[28,38,26,38],[28,41,26,41],[28,44,26,44],[29,4,27,2],[29,8,27,8,"dLon"],[29,12,27,12],[29,15,27,15],[29,16,27,16,"lon2"],[29,20,27,20],[29,23,27,23,"lon1"],[29,27,27,27],[29,31,27,31,"Math"],[29,35,27,35],[29,36,27,36,"PI"],[29,38,27,38],[29,41,27,41],[29,44,27,44],[30,4,28,2],[30,8,28,8,"a"],[30,9,28,9],[30,12,29,4,"Math"],[30,16,29,8],[30,17,29,9,"sin"],[30,20,29,12],[30,21,29,13,"dLat"],[30,25,29,17],[30,28,29,18],[30,29,29,19],[30,30,29,20],[30,33,29,23,"Math"],[30,37,29,27],[30,38,29,28,"sin"],[30,41,29,31],[30,42,29,32,"dLat"],[30,46,29,36],[30,49,29,37],[30,50,29,38],[30,51,29,39],[30,54,30,4,"Math"],[30,58,30,8],[30,59,30,9,"cos"],[30,62,30,12],[30,63,30,13,"lat1"],[30,67,30,17],[30,70,30,20,"Math"],[30,74,30,24],[30,75,30,25,"PI"],[30,77,30,27],[30,80,30,30],[30,83,30,33],[30,84,30,34],[30,87,30,37,"Math"],[30,91,30,41],[30,92,30,42,"cos"],[30,95,30,45],[30,96,30,46,"lat2"],[30,100,30,50],[30,103,30,53,"Math"],[30,107,30,57],[30,108,30,58,"PI"],[30,110,30,60],[30,113,30,63],[30,116,30,66],[30,117,30,67],[30,120,31,4,"Math"],[30,124,31,8],[30,125,31,9,"sin"],[30,128,31,12],[30,129,31,13,"dLon"],[30,133,31,17],[30,136,31,18],[30,137,31,19],[30,138,31,20],[30,141,31,23,"Math"],[30,145,31,27],[30,146,31,28,"sin"],[30,149,31,31],[30,150,31,32,"dLon"],[30,154,31,36],[30,157,31,37],[30,158,31,38],[30,159,31,39],[31,4,32,2],[31,8,32,8,"c"],[31,9,32,9],[31,12,32,12],[31,13,32,13],[31,16,32,16,"Math"],[31,20,32,20],[31,21,32,21,"atan2"],[31,26,32,26],[31,27,32,27,"Math"],[31,31,32,31],[31,32,32,32,"sqrt"],[31,36,32,36],[31,37,32,37,"a"],[31,38,32,38],[31,39,32,39],[31,41,32,41,"Math"],[31,45,32,45],[31,46,32,46,"sqrt"],[31,50,32,50],[31,51,32,51],[31,52,32,52],[31,55,32,53,"a"],[31,56,32,54],[31,57,32,55],[31,58,32,56],[32,4,33,2],[32,8,33,8,"distance"],[32,16,33,16],[32,19,33,19,"R"],[32,20,33,20],[32,23,33,23,"c"],[32,24,33,24],[33,4,34,2],[33,11,34,9,"distance"],[33,19,34,17],[34,2,35,0],[34,3,35,1],[35,2,37,0],[35,6,37,6,"resolveGoogleApiKey"],[35,25,37,25],[35,28,37,28,"resolveGoogleApiKey"],[35,29,37,28],[35,34,37,54],[36,4,38,2],[36,8,38,8,"envKey"],[36,14,38,14],[36,17,38,17,"_env2"],[36,22,38,17],[36,23,38,17,"env"],[36,26,38,17],[36,27,38,17,"EXPO_PUBLIC_GOOGLE_MAPS_API_KEY"],[36,58,38,17],[36,60,38,86,"trim"],[36,64,38,90],[36,65,38,91],[36,66,38,92],[37,4,39,2],[37,8,39,6,"envKey"],[37,14,39,12],[37,16,39,14],[38,6,40,4],[38,13,40,11,"envKey"],[38,19,40,17],[39,4,41,2],[40,4,43,2],[40,8,43,8,"fallbackKey"],[40,19,43,19],[40,22,43,22,"DEFAULT_GOOGLE_MAPS_API_KEY"],[40,47,43,49],[40,49,43,51,"trim"],[40,53,43,55],[40,54,43,56],[40,55,43,57],[41,4,44,2],[41,11,44,9,"fallbackKey"],[41,22,44,20],[41,26,44,24,"undefined"],[41,35,44,33],[42,2,45,0],[42,3,45,1],[44,2,47,0],[45,2,48,0],[45,6,48,6,"GOOGLE_API_KEY"],[45,20,48,20],[45,23,48,23,"resolveGoogleApiKey"],[45,42,48,42],[45,43,48,43],[45,44,48,44],[46,2,50,0],[46,6,50,4],[46,7,50,5,"GOOGLE_API_KEY"],[46,21,50,19],[46,23,50,21],[47,4,51,2,"console"],[47,11,51,9],[47,12,51,10,"warn"],[47,16,51,14],[47,17,51,15],[47,93,51,91],[47,94,51,92],[48,2,52,0],[49,2,54,0],[49,6,54,6,"DEFAULT_HISTORY_KEY"],[49,25,54,25],[49,28,54,28],[49,45,54,45],[50,2,55,0],[50,6,55,6,"DEFAULT_TOTAL_KEY"],[50,23,55,23],[50,26,55,26],[50,41,55,41],[51,2,56,0],[51,6,56,6,"HISTORY_LIMIT"],[51,19,56,19],[51,22,56,22],[51,26,56,26],[52,2,63,0],[52,6,63,6,"getStoredUser"],[52,19,63,19],[53,4,63,19],[53,8,63,19,"_ref"],[53,12,63,19],[53,19,63,19,"_asyncToGenerator2"],[53,37,63,19],[53,38,63,19,"default"],[53,45,63,19],[53,47,63,22],[53,60,63,62],[54,6,64,2],[54,10,64,6],[55,8,65,4],[55,12,65,10,"userStr"],[55,19,65,17],[55,28,65,26,"AsyncStorage"],[55,49,65,38],[55,50,65,39,"getItem"],[55,57,65,46],[55,58,65,47],[55,64,65,53],[55,65,65,54],[56,8,66,4],[56,15,66,11,"userStr"],[56,22,66,18],[56,25,66,22,"JSON"],[56,29,66,26],[56,30,66,27,"parse"],[56,35,66,32],[56,36,66,33,"userStr"],[56,43,66,40],[56,44,66,41],[56,47,66,59],[56,51,66,63],[57,6,67,2],[57,7,67,3],[57,8,67,4],[57,15,67,11,"error"],[57,20,67,16],[57,22,67,18],[58,8,68,4,"console"],[58,15,68,11],[58,16,68,12,"warn"],[58,20,68,16],[58,21,68,17],[58,72,68,68],[58,74,68,70,"error"],[58,79,68,75],[58,80,68,76],[59,8,69,4],[59,15,69,11],[59,19,69,15],[60,6,70,2],[61,4,71,0],[61,5,71,1],[62,4,71,1],[62,20,63,6,"getStoredUser"],[62,33,63,19,"getStoredUser"],[62,34,63,19],[63,6,63,19],[63,13,63,19,"_ref"],[63,17,63,19],[63,18,63,19,"apply"],[63,23,63,19],[63,30,63,19,"arguments"],[63,39,63,19],[64,4,63,19],[65,2,63,19],[65,5,71,1],[66,2,73,0],[66,6,73,6,"getStorageKeysForUser"],[66,27,73,27],[66,30,73,31,"userId"],[66,36,73,52],[66,41,73,58],[67,4,74,2,"history"],[67,11,74,9],[67,13,74,11,"userId"],[67,19,74,17],[67,22,74,20],[67,25,74,23,"DEFAULT_HISTORY_KEY"],[67,44,74,42],[67,48,74,46,"userId"],[67,54,74,52],[67,56,74,54],[67,59,74,57,"DEFAULT_HISTORY_KEY"],[67,78,74,76],[68,4,75,2,"total"],[68,9,75,7],[68,11,75,9,"userId"],[68,17,75,15],[68,20,75,18],[68,23,75,21,"DEFAULT_TOTAL_KEY"],[68,40,75,38],[68,44,75,42,"userId"],[68,50,75,48],[68,52,75,50],[68,55,75,53,"DEFAULT_TOTAL_KEY"],[69,2,76,0],[69,3,76,1],[69,4,76,2],[70,2,78,0],[70,6,78,6,"getDrivingDistanceKm"],[70,26,78,26],[71,4,78,26],[71,8,78,26,"_ref2"],[71,13,78,26],[71,20,78,26,"_asyncToGenerator2"],[71,38,78,26],[71,39,78,26,"default"],[71,46,78,26],[71,48,78,29],[71,59,79,2,"originLat"],[71,68,79,19],[71,70,80,2,"originLng"],[71,79,80,19],[71,81,81,2,"destLat"],[71,88,81,17],[71,90,82,2,"destLng"],[71,97,82,17],[71,99,83,29],[72,6,84,2],[72,10,84,6],[72,11,84,7,"GOOGLE_API_KEY"],[72,25,84,21],[72,27,84,23],[73,8,85,4,"console"],[73,15,85,11],[73,16,85,12,"warn"],[73,20,85,16],[73,21,85,17],[73,92,85,88],[73,93,85,89],[74,8,86,4],[74,15,86,11],[74,19,86,15],[75,6,87,2],[76,6,89,2],[76,10,89,8,"url"],[76,13,89,11],[76,16,89,14],[76,97,89,95,"encodeURIComponent"],[76,115,89,113],[76,116,90,4],[76,119,90,7,"originLat"],[76,128,90,16],[76,132,90,20,"originLng"],[76,141,90,29],[76,143,91,2],[76,144,91,3],[76,161,91,20,"encodeURIComponent"],[76,179,91,38],[76,180,91,39],[76,183,91,42,"destLat"],[76,190,91,49],[76,194,91,53,"destLng"],[76,201,91,60],[76,203,91,62],[76,204,91,63],[76,225,91,84,"GOOGLE_API_KEY"],[76,239,91,98],[76,241,91,100],[77,6,93,2],[77,10,93,6],[78,8,94,4],[78,12,94,10,"res"],[78,15,94,13],[78,24,94,22,"fetch"],[78,29,94,27],[78,30,94,28,"url"],[78,33,94,31],[78,34,94,32],[79,8,95,4],[79,12,95,8],[79,13,95,9,"res"],[79,16,95,12],[79,17,95,13,"ok"],[79,19,95,15],[79,21,95,17],[80,10,96,6,"console"],[80,17,96,13],[80,18,96,14,"warn"],[80,22,96,18],[80,23,96,19],[80,62,96,58,"res"],[80,65,96,61],[80,66,96,62,"status"],[80,72,96,68],[80,76,96,72,"res"],[80,79,96,75],[80,80,96,76,"statusText"],[80,90,96,86],[80,92,96,88],[80,93,96,89],[81,10,97,6],[81,17,97,13],[81,21,97,17],[82,8,98,4],[83,8,100,4],[83,12,100,10,"data"],[83,16,100,14],[83,25,100,23,"res"],[83,28,100,26],[83,29,100,27,"json"],[83,33,100,31],[83,34,100,32],[83,35,100,33],[84,8,101,4],[84,12,101,10,"el"],[84,14,101,12],[84,17,101,15,"data"],[84,21,101,19],[84,23,101,21,"rows"],[84,27,101,25],[84,30,101,28],[84,31,101,29],[84,32,101,30],[84,34,101,32,"elements"],[84,42,101,40],[84,45,101,43],[84,46,101,44],[84,47,101,45],[85,8,103,4],[85,12,103,8,"el"],[85,14,103,10],[85,16,103,12,"status"],[85,22,103,18],[85,27,103,23],[85,31,103,27],[85,35,103,31,"el"],[85,37,103,33],[85,39,103,35,"distance"],[85,47,103,43],[85,49,103,45,"value"],[85,54,103,50],[85,58,103,54],[85,62,103,58],[85,64,103,60],[86,10,104,6],[86,14,104,12,"distanceKm"],[86,24,104,22],[86,27,104,25,"el"],[86,29,104,27],[86,30,104,28,"distance"],[86,38,104,36],[86,39,104,37,"value"],[86,44,104,42],[86,47,104,45],[86,51,104,49],[86,52,104,50],[86,53,104,51],[87,10,105,6,"console"],[87,17,105,13],[87,18,105,14,"log"],[87,21,105,17],[87,22,105,18],[87,46,105,42,"distanceKm"],[87,56,105,52],[87,57,105,53,"toFixed"],[87,64,105,60],[87,65,105,61],[87,66,105,62],[87,67,105,63],[87,85,105,81],[87,86,105,82],[88,10,106,6],[88,17,106,13,"distanceKm"],[88,27,106,23],[89,8,107,4],[89,9,107,5],[89,15,107,11],[90,10,108,6,"console"],[90,17,108,13],[90,18,108,14,"warn"],[90,22,108,18],[90,23,108,19],[90,53,108,49,"el"],[90,55,108,51],[90,57,108,53,"status"],[90,63,108,59],[90,67,108,63],[90,82,108,78],[90,84,108,80],[90,85,108,81],[91,10,109,6],[91,17,109,13],[91,21,109,17],[92,8,110,4],[93,6,111,2],[93,7,111,3],[93,8,111,4],[93,15,111,11,"error"],[93,20,111,16],[93,22,111,18],[94,8,112,4,"console"],[94,15,112,11],[94,16,112,12,"warn"],[94,20,112,16],[94,21,112,17],[94,58,112,54],[94,60,112,56,"error"],[94,65,112,61],[94,66,112,62],[95,8,113,4],[95,15,113,11],[95,19,113,15],[96,6,114,2],[97,4,115,0],[97,5,115,1],[98,4,115,1],[98,20,78,6,"getDrivingDistanceKm"],[98,40,78,26,"getDrivingDistanceKm"],[98,41,78,26,"_x"],[98,43,78,26],[98,45,78,26,"_x2"],[98,48,78,26],[98,50,78,26,"_x3"],[98,53,78,26],[98,55,78,26,"_x4"],[98,58,78,26],[99,6,78,26],[99,13,78,26,"_ref2"],[99,18,78,26],[99,19,78,26,"apply"],[99,24,78,26],[99,31,78,26,"arguments"],[99,40,78,26],[100,4,78,26],[101,2,78,26],[101,5,115,1],[103,2,117,0],[104,2,118,0],[104,6,118,6,"getCurrentDateString"],[104,26,118,26],[104,29,118,29,"getCurrentDateString"],[104,30,118,29],[104,35,118,43],[105,4,119,2],[105,8,119,8,"now"],[105,11,119,11],[105,14,119,14],[105,18,119,18,"Date"],[105,22,119,22],[105,23,119,23],[105,24,119,24],[106,4,120,2],[106,11,120,9,"now"],[106,14,120,12],[106,15,120,13,"toISOString"],[106,26,120,24],[106,27,120,25],[106,28,120,26],[106,29,120,27,"split"],[106,34,120,32],[106,35,120,33],[106,38,120,36],[106,39,120,37],[106,40,120,38],[106,41,120,39],[106,42,120,40],[107,2,121,0],[107,3,121,1],[109,2,123,0],[110,2,124,0],[110,6,124,6,"storeTravelledDistance"],[110,28,124,28],[111,4,124,28],[111,8,124,28,"_ref3"],[111,13,124,28],[111,20,124,28,"_asyncToGenerator2"],[111,38,124,28],[111,39,124,28,"default"],[111,46,124,28],[111,48,124,31],[111,59,124,38,"userId"],[111,65,124,52],[111,67,124,54,"distanceKm"],[111,77,124,72],[111,79,124,77],[112,6,125,2],[112,10,125,8,"currentDate"],[112,21,125,19],[112,24,125,22,"getCurrentDateString"],[112,44,125,42],[112,45,125,43],[112,46,125,44],[113,6,126,2],[113,10,126,8,"docId"],[113,15,126,13],[113,18,126,16],[113,21,126,19,"currentDate"],[113,32,126,30],[113,36,126,34,"userId"],[113,42,126,40],[113,44,126,42],[114,6,128,2],[114,10,128,6],[115,8,129,4],[115,12,129,10,"travelledRef"],[115,24,129,22],[115,27,129,25],[115,31,129,25,"fsDoc"],[115,45,129,30],[115,47,129,31,"db"],[115,59,129,33],[115,61,129,35],[115,72,129,46],[115,74,129,48,"docId"],[115,79,129,53],[115,80,129,54],[117,8,131,4],[118,8,132,4],[118,12,132,8],[119,10,133,6],[119,14,133,12,"existingSnapshot"],[119,30,133,28],[119,39,133,37],[119,43,133,37,"getDocs"],[119,61,133,44],[119,63,133,45],[119,67,133,45,"query"],[119,83,133,50],[119,85,134,8],[119,89,134,8,"collection"],[119,110,134,18],[119,112,134,19,"db"],[119,124,134,21],[119,126,134,23],[119,137,134,34],[119,138,134,35],[119,140,135,8],[119,144,135,8,"where"],[119,160,135,13],[119,162,135,14],[119,176,135,28],[119,178,135,30],[119,182,135,34],[119,184,135,36,"currentDate"],[119,195,135,47],[119,196,135,48],[119,198,136,8],[119,202,136,8,"where"],[119,218,136,13],[119,220,136,14],[119,229,136,23],[119,231,136,25],[119,235,136,29],[119,237,136,31,"userId"],[119,243,136,37],[119,244,137,6],[119,245,137,7],[119,246,137,8],[120,10,139,6],[120,14,139,10],[120,15,139,11,"existingSnapshot"],[120,31,139,27],[120,32,139,28,"empty"],[120,37,139,33],[120,39,139,35],[121,12,140,8],[122,12,141,8],[122,16,141,14,"existingData"],[122,28,141,26],[122,31,141,29,"existingSnapshot"],[122,47,141,45],[122,48,141,46,"docs"],[122,52,141,50],[122,53,141,51],[122,54,141,52],[122,55,141,53],[122,56,141,54,"data"],[122,60,141,58],[122,61,141,59],[122,62,141,60],[123,12,142,8],[123,16,142,14,"newTotalDistance"],[123,32,142,30],[123,35,142,33],[123,36,142,34,"existingData"],[123,48,142,46],[123,49,142,47,"travelled_distance_kms"],[123,71,142,69],[123,75,142,73],[123,76,142,74],[123,80,142,78,"distanceKm"],[123,90,142,88],[124,12,144,8],[124,18,144,14],[124,22,144,14,"updateDoc"],[124,42,144,23],[124,44,144,24,"existingSnapshot"],[124,60,144,40],[124,61,144,41,"docs"],[124,65,144,45],[124,66,144,46],[124,67,144,47],[124,68,144,48],[124,69,144,49,"ref"],[124,72,144,52],[124,74,144,54],[125,14,145,10,"travelled_distance_kms"],[125,36,145,32],[125,38,145,34,"newTotalDistance"],[125,54,145,50],[126,14,146,10,"updated_at"],[126,24,146,20],[126,26,146,22],[126,30,146,22,"serverTimestamp"],[126,56,146,37],[126,58,146,38],[127,12,147,8],[127,13,147,9],[127,14,147,10],[128,12,149,8,"console"],[128,19,149,15],[128,20,149,16,"log"],[128,23,149,19],[128,24,149,20],[128,54,149,50,"userId"],[128,60,149,56],[128,65,149,61,"newTotalDistance"],[128,81,149,77],[128,82,149,78,"toFixed"],[128,89,149,85],[128,90,149,86],[128,91,149,87],[128,92,149,88],[128,97,149,93],[128,98,149,94],[129,10,150,6],[129,11,150,7],[129,17,150,13],[130,12,151,8],[131,12,152,8],[131,18,152,14],[131,22,152,14,"setDoc"],[131,39,152,20],[131,41,152,21,"travelledRef"],[131,53,152,33],[131,55,152,35],[132,14,153,10,"current_date"],[132,26,153,22],[132,28,153,24,"currentDate"],[132,39,153,35],[133,14,154,10,"user_id"],[133,21,154,17],[133,23,154,19,"userId"],[133,29,154,25],[134,14,155,10,"travelled_distance_kms"],[134,36,155,32],[134,38,155,34,"distanceKm"],[134,48,155,44],[135,14,156,10,"created_at"],[135,24,156,20],[135,26,156,22],[135,30,156,22,"serverTimestamp"],[135,56,156,37],[135,58,156,38],[135,59,156,39],[136,14,157,10,"updated_at"],[136,24,157,20],[136,26,157,22],[136,30,157,22,"serverTimestamp"],[136,56,157,37],[136,58,157,38],[137,12,158,8],[137,13,158,9],[137,14,158,10],[138,12,160,8,"console"],[138,19,160,15],[138,20,160,16,"log"],[138,23,160,19],[138,24,160,20],[138,65,160,61,"userId"],[138,71,160,67],[138,76,160,72,"distanceKm"],[138,86,160,82],[138,87,160,83,"toFixed"],[138,94,160,90],[138,95,160,91],[138,96,160,92],[138,97,160,93],[138,102,160,98],[138,103,160,99],[139,10,161,6],[140,8,162,4],[140,9,162,5],[140,10,162,6],[140,17,162,13,"queryError"],[140,27,162,23],[140,29,162,25],[141,10,163,6,"console"],[141,17,163,13],[141,18,163,14,"log"],[141,21,163,17],[141,22,163,18],[141,70,163,66],[141,72,163,68,"queryError"],[141,82,163,78],[141,83,163,79],[142,10,164,6],[143,10,165,6],[143,16,165,12],[143,20,165,12,"setDoc"],[143,37,165,18],[143,39,165,19,"travelledRef"],[143,51,165,31],[143,53,165,33],[144,12,166,8,"current_date"],[144,24,166,20],[144,26,166,22,"currentDate"],[144,37,166,33],[145,12,167,8,"user_id"],[145,19,167,15],[145,21,167,17,"userId"],[145,27,167,23],[146,12,168,8,"travelled_distance_kms"],[146,34,168,30],[146,36,168,32,"distanceKm"],[146,46,168,42],[147,12,169,8,"created_at"],[147,22,169,18],[147,24,169,20],[147,28,169,20,"serverTimestamp"],[147,54,169,35],[147,56,169,36],[147,57,169,37],[148,12,170,8,"updated_at"],[148,22,170,18],[148,24,170,20],[148,28,170,20,"serverTimestamp"],[148,54,170,35],[148,56,170,36],[149,10,171,6],[149,11,171,7],[149,13,171,9],[150,12,171,11,"merge"],[150,17,171,16],[150,19,171,18],[151,10,171,23],[151,11,171,24],[151,12,171,25],[152,10,173,6,"console"],[152,17,173,13],[152,18,173,14,"log"],[152,21,173,17],[152,22,173,18],[152,66,173,62,"userId"],[152,72,173,68],[152,77,173,73,"distanceKm"],[152,87,173,83],[152,88,173,84,"toFixed"],[152,95,173,91],[152,96,173,92],[152,97,173,93],[152,98,173,94],[152,103,173,99],[152,104,173,100],[153,8,174,4],[154,6,175,2],[154,7,175,3],[154,8,175,4],[154,15,175,11,"error"],[154,20,175,16],[154,22,175,18],[155,8,176,4,"console"],[155,15,176,11],[155,16,176,12,"error"],[155,21,176,17],[155,22,176,18],[155,57,176,53],[155,59,176,55,"error"],[155,64,176,60],[155,65,176,61],[156,6,177,2],[157,4,178,0],[157,5,178,1],[158,4,178,1],[158,20,124,6,"storeTravelledDistance"],[158,42,124,28,"storeTravelledDistance"],[158,43,124,28,"_x5"],[158,46,124,28],[158,48,124,28,"_x6"],[158,51,124,28],[159,6,124,28],[159,13,124,28,"_ref3"],[159,18,124,28],[159,19,124,28,"apply"],[159,24,124,28],[159,31,124,28,"arguments"],[159,40,124,28],[160,4,124,28],[161,2,124,28],[161,5,178,1],[163,2,180,0],[164,2,181,0],[164,6,181,6,"storeLiveTrackingData"],[164,27,181,27],[165,4,181,27],[165,8,181,27,"_ref4"],[165,13,181,27],[165,20,181,27,"_asyncToGenerator2"],[165,38,181,27],[165,39,181,27,"default"],[165,46,181,27],[165,48,181,30],[165,59,181,37,"userId"],[165,65,181,51],[165,67,181,53,"locationData"],[165,79,181,79],[165,81,181,84],[166,6,182,2],[166,10,182,8,"currentDate"],[166,21,182,19],[166,24,182,22,"getCurrentDateString"],[166,44,182,42],[166,45,182,43],[166,46,182,44],[167,6,183,2],[167,10,183,8,"docId"],[167,15,183,13],[167,18,183,16],[167,21,183,19,"currentDate"],[167,32,183,30],[167,36,183,34,"userId"],[167,42,183,40],[167,44,183,42],[168,6,185,2],[168,10,185,6],[169,8,186,4],[169,12,186,10,"liveTrackingRef"],[169,27,186,25],[169,30,186,28],[169,34,186,28,"fsDoc"],[169,48,186,33],[169,50,186,34,"db"],[169,62,186,36],[169,64,186,38],[169,85,186,59],[169,87,186,61,"docId"],[169,92,186,66],[169,93,186,67],[170,8,187,4],[170,12,187,10,"timestamp"],[170,21,187,19],[170,24,187,22,"Date"],[170,28,187,26],[170,29,187,27,"now"],[170,32,187,30],[170,33,187,31],[170,34,187,32],[171,8,189,4],[171,12,189,10,"locationPoint"],[171,25,189,23],[171,28,189,26],[172,10,190,6,"lat"],[172,13,190,9],[172,15,190,11,"locationData"],[172,27,190,23],[172,28,190,24,"latitude"],[172,36,190,32],[173,10,191,6,"lng"],[173,13,191,9],[173,15,191,11,"locationData"],[173,27,191,23],[173,28,191,24,"longitude"],[173,37,191,33],[174,10,192,6,"timestamp"],[174,19,192,15],[174,21,192,17,"timestamp"],[174,30,192,26],[175,10,193,6,"accuracy"],[175,18,193,14],[175,20,193,16,"locationData"],[175,32,193,28],[175,33,193,29,"accuracy"],[175,41,193,37],[175,45,193,41],[176,8,194,4],[176,9,194,5],[178,8,196,4],[179,8,197,4],[179,12,197,8],[180,10,198,6],[180,14,198,12,"existingSnapshot"],[180,30,198,28],[180,39,198,37],[180,43,198,37,"getDocs"],[180,61,198,44],[180,63,198,45],[180,67,198,45,"query"],[180,83,198,50],[180,85,199,8],[180,89,199,8,"collection"],[180,110,199,18],[180,112,199,19,"db"],[180,124,199,21],[180,126,199,23],[180,147,199,44],[180,148,199,45],[180,150,200,8],[180,154,200,8,"where"],[180,170,200,13],[180,172,200,14],[180,186,200,28],[180,188,200,30],[180,192,200,34],[180,194,200,36,"currentDate"],[180,205,200,47],[180,206,200,48],[180,208,201,8],[180,212,201,8,"where"],[180,228,201,13],[180,230,201,14],[180,239,201,23],[180,241,201,25],[180,245,201,29],[180,247,201,31,"userId"],[180,253,201,37],[180,254,202,6],[180,255,202,7],[180,256,202,8],[181,10,204,6],[181,14,204,10],[181,15,204,11,"existingSnapshot"],[181,31,204,27],[181,32,204,28,"empty"],[181,37,204,33],[181,39,204,35],[182,12,205,8],[183,12,206,8],[183,16,206,14,"existingData"],[183,28,206,26],[183,31,206,29,"existingSnapshot"],[183,47,206,45],[183,48,206,46,"docs"],[183,52,206,50],[183,53,206,51],[183,54,206,52],[183,55,206,53],[183,56,206,54,"data"],[183,60,206,58],[183,61,206,59],[183,62,206,60],[184,12,207,8],[184,16,207,14,"existingLocations"],[184,33,207,31],[184,36,207,34,"existingData"],[184,48,207,46],[184,49,207,47,"locations"],[184,58,207,56],[184,62,207,60],[184,64,207,62],[185,12,209,8],[185,18,209,14],[185,22,209,14,"updateDoc"],[185,42,209,23],[185,44,209,24,"existingSnapshot"],[185,60,209,40],[185,61,209,41,"docs"],[185,65,209,45],[185,66,209,46],[185,67,209,47],[185,68,209,48],[185,69,209,49,"ref"],[185,72,209,52],[185,74,209,54],[186,14,210,10,"locations"],[186,23,210,19],[186,25,210,21],[186,26,210,22],[186,29,210,25,"existingLocations"],[186,46,210,42],[186,48,210,44,"locationPoint"],[186,61,210,57],[186,62,210,58],[187,14,211,10,"last_updated"],[187,26,211,22],[187,28,211,24],[187,32,211,24,"serverTimestamp"],[187,58,211,39],[187,60,211,40],[188,12,212,8],[188,13,212,9],[188,14,212,10],[189,12,214,8,"console"],[189,19,214,15],[189,20,214,16,"log"],[189,23,214,19],[189,24,214,20],[189,58,214,54,"userId"],[189,64,214,60],[189,71,214,67,"currentDate"],[189,82,214,78],[189,87,214,83,"existingLocations"],[189,104,214,100],[189,105,214,101,"length"],[189,111,214,107],[189,114,214,110],[189,115,214,111],[189,125,214,121],[189,126,214,122],[190,10,215,6],[190,11,215,7],[190,17,215,13],[191,12,216,8],[192,12,217,8],[192,18,217,14],[192,22,217,14,"setDoc"],[192,39,217,20],[192,41,217,21,"liveTrackingRef"],[192,56,217,36],[192,58,217,38],[193,14,218,10,"current_date"],[193,26,218,22],[193,28,218,24,"currentDate"],[193,39,218,35],[194,14,219,10,"user_id"],[194,21,219,17],[194,23,219,19,"userId"],[194,29,219,25],[195,14,220,10,"locations"],[195,23,220,19],[195,25,220,21],[195,26,220,22,"locationPoint"],[195,39,220,35],[195,40,220,36],[196,14,221,10,"created_at"],[196,24,221,20],[196,26,221,22],[196,30,221,22,"serverTimestamp"],[196,56,221,37],[196,58,221,38],[196,59,221,39],[197,14,222,10,"last_updated"],[197,26,222,22],[197,28,222,24],[197,32,222,24,"serverTimestamp"],[197,58,222,39],[197,60,222,40],[198,12,223,8],[198,13,223,9],[198,14,223,10],[199,12,225,8,"console"],[199,19,225,15],[199,20,225,16,"log"],[199,23,225,19],[199,24,225,20],[199,64,225,60,"userId"],[199,70,225,66],[199,77,225,73,"currentDate"],[199,88,225,84],[199,90,225,86],[199,91,225,87],[200,10,226,6],[201,8,227,4],[201,9,227,5],[201,10,227,6],[201,17,227,13,"queryError"],[201,27,227,23],[201,29,227,25],[202,10,228,6,"console"],[202,17,228,13],[202,18,228,14,"log"],[202,21,228,17],[202,22,228,18],[202,70,228,66],[202,72,228,68,"queryError"],[202,82,228,78],[202,83,228,79],[203,10,229,6],[204,10,230,6],[204,16,230,12],[204,20,230,12,"setDoc"],[204,37,230,18],[204,39,230,19,"liveTrackingRef"],[204,54,230,34],[204,56,230,36],[205,12,231,8,"current_date"],[205,24,231,20],[205,26,231,22,"currentDate"],[205,37,231,33],[206,12,232,8,"user_id"],[206,19,232,15],[206,21,232,17,"userId"],[206,27,232,23],[207,12,233,8,"locations"],[207,21,233,17],[207,23,233,19],[207,24,233,20,"locationPoint"],[207,37,233,33],[207,38,233,34],[208,12,234,8,"created_at"],[208,22,234,18],[208,24,234,20],[208,28,234,20,"serverTimestamp"],[208,54,234,35],[208,56,234,36],[208,57,234,37],[209,12,235,8,"last_updated"],[209,24,235,20],[209,26,235,22],[209,30,235,22,"serverTimestamp"],[209,56,235,37],[209,58,235,38],[210,10,236,6],[210,11,236,7],[210,13,236,9],[211,12,236,11,"merge"],[211,17,236,16],[211,19,236,18],[212,10,236,23],[212,11,236,24],[212,12,236,25],[213,10,238,6,"console"],[213,17,238,13],[213,18,238,14,"log"],[213,21,238,17],[213,22,238,18],[213,63,238,59,"userId"],[213,69,238,65],[213,76,238,72,"currentDate"],[213,87,238,83],[213,89,238,85],[213,90,238,86],[214,8,239,4],[215,6,240,2],[215,7,240,3],[215,8,240,4],[215,15,240,11,"error"],[215,20,240,16],[215,22,240,18],[216,8,241,4,"console"],[216,15,241,11],[216,16,241,12,"error"],[216,21,241,17],[216,22,241,18],[216,57,241,53],[216,59,241,55,"error"],[216,64,241,60],[216,65,241,61],[217,6,242,2],[218,4,243,0],[218,5,243,1],[219,4,243,1],[219,20,181,6,"storeLiveTrackingData"],[219,41,181,27,"storeLiveTrackingData"],[219,42,181,27,"_x7"],[219,45,181,27],[219,47,181,27,"_x8"],[219,50,181,27],[220,6,181,27],[220,13,181,27,"_ref4"],[220,18,181,27],[220,19,181,27,"apply"],[220,24,181,27],[220,31,181,27,"arguments"],[220,40,181,27],[221,4,181,27],[222,2,181,27],[222,5,243,1],[223,2,254,0],[223,6,254,4,"distanceUpdateListener"],[223,28,254,57],[223,31,254,60],[223,35,254,64],[224,2,256,0],[224,6,256,6,"setDistanceUpdateListener"],[224,31,256,31],[224,34,256,35,"listener"],[224,42,256,74],[224,46,256,79],[225,4,257,2,"distanceUpdateListener"],[225,26,257,24],[225,29,257,27,"listener"],[225,37,257,35],[226,2,258,0],[226,3,258,1],[227,2,260,0],[227,6,260,6,"notifyDistanceUpdate"],[227,26,260,26],[227,29,260,30,"newTotal"],[227,37,260,46],[227,41,260,51],[228,4,261,2],[228,8,261,6],[229,6,262,4,"distanceUpdateListener"],[229,28,262,26],[229,31,262,29,"newTotal"],[229,39,262,37],[229,40,262,38],[230,4,263,2],[230,5,263,3],[230,6,263,4],[230,13,263,11,"listenerError"],[230,26,263,24],[230,28,263,26],[231,6,264,4,"console"],[231,13,264,11],[231,14,264,12,"error"],[231,19,264,17],[231,20,264,18],[231,64,264,62],[231,66,264,64,"listenerError"],[231,79,264,77],[231,80,264,78],[232,4,265,2],[233,2,266,0],[233,3,266,1],[234,2,268,0],[234,6,268,6,"processLocationForDistance"],[234,32,268,32],[235,4,268,32],[235,8,268,32,"_ref5"],[235,13,268,32],[235,20,268,32,"_asyncToGenerator2"],[235,38,268,32],[235,39,268,32,"default"],[235,46,268,32],[235,48,268,35],[235,59,269,2,"locationData"],[235,71,269,28],[235,73,270,2,"userIdHint"],[235,83,270,28],[235,85,271,20],[236,6,272,2],[236,10,272,6],[237,8,273,4],[237,12,273,10,"storedUserId"],[237,24,273,22],[237,27,273,25,"userIdHint"],[237,37,273,35],[237,48,273,46],[237,52,273,46,"_asyncToGenerator2"],[237,70,273,46],[237,71,273,46,"default"],[237,78,273,46],[237,80,273,47],[237,93,273,59],[238,10,274,6],[238,14,274,12,"storedUser"],[238,24,274,22],[238,33,274,31,"getStoredUser"],[238,46,274,44],[238,47,274,45],[238,48,274,46],[239,10,275,6],[239,17,275,13,"storedUser"],[239,27,275,23],[239,29,275,25,"id"],[239,31,275,27],[239,35,275,31],[239,39,275,35],[240,8,276,4],[240,9,276,5],[240,11,276,7],[240,12,276,8],[240,13,276,9],[241,8,278,4],[241,12,278,4,"_getStorageKeysForUse"],[241,33,278,4],[241,36,278,53,"getStorageKeysForUser"],[241,57,278,74],[241,58,278,75,"storedUserId"],[241,70,278,87],[241,71,278,88],[242,10,278,21,"historyKey"],[242,20,278,31],[242,23,278,31,"_getStorageKeysForUse"],[242,44,278,31],[242,45,278,12,"history"],[242,52,278,19],[243,10,278,40,"totalKey"],[243,18,278,48],[243,21,278,48,"_getStorageKeysForUse"],[243,42,278,48],[243,43,278,33,"total"],[243,48,278,38],[244,8,280,4],[244,12,280,10,"existingData"],[244,24,280,22],[244,33,280,31,"AsyncStorage"],[244,54,280,43],[244,55,280,44,"getItem"],[244,62,280,51],[244,63,280,52,"historyKey"],[244,73,280,62],[244,74,280,63],[245,8,281,4],[245,12,281,8,"locationHistory"],[245,27,281,39],[245,30,281,42],[245,32,281,44],[246,8,283,4],[246,12,283,8,"existingData"],[246,24,283,20],[246,26,283,22],[247,10,284,6],[247,14,284,10],[248,12,285,8,"locationHistory"],[248,27,285,23],[248,30,285,26,"JSON"],[248,34,285,30],[248,35,285,31,"parse"],[248,40,285,36],[248,41,285,37,"existingData"],[248,53,285,49],[248,54,285,68],[249,10,286,6],[249,11,286,7],[249,12,286,8],[249,19,286,15,"parseError"],[249,29,286,25],[249,31,286,27],[250,12,287,8,"console"],[250,19,287,15],[250,20,287,16,"warn"],[250,24,287,20],[250,25,287,21],[250,84,287,80],[250,86,287,82,"parseError"],[250,96,287,92],[250,97,287,93],[251,12,288,8,"locationHistory"],[251,27,288,23],[251,30,288,26],[251,32,288,28],[252,10,289,6],[253,8,290,4],[254,8,292,4],[254,12,292,8,"locationHistory"],[254,27,292,23],[254,28,292,24,"length"],[254,34,292,30],[254,37,292,33],[254,38,292,34],[254,40,292,36],[255,10,293,6],[255,14,293,12,"prevLocation"],[255,26,293,24],[255,29,293,27,"locationHistory"],[255,44,293,42],[255,45,293,43,"locationHistory"],[255,60,293,58],[255,61,293,59,"length"],[255,67,293,65],[255,70,293,68],[255,71,293,69],[255,72,293,70],[256,10,294,6],[256,14,294,12,"hasMeaningfulMovement"],[256,35,294,33],[256,38,295,8,"Math"],[256,42,295,12],[256,43,295,13,"abs"],[256,46,295,16],[256,47,295,17,"prevLocation"],[256,59,295,29],[256,60,295,30,"latitude"],[256,68,295,38],[256,71,295,41,"locationData"],[256,83,295,53],[256,84,295,54,"latitude"],[256,92,295,62],[256,93,295,63],[256,96,295,66],[256,100,295,70],[256,104,296,8,"Math"],[256,108,296,12],[256,109,296,13,"abs"],[256,112,296,16],[256,113,296,17,"prevLocation"],[256,125,296,29],[256,126,296,30,"longitude"],[256,135,296,39],[256,138,296,42,"locationData"],[256,150,296,54],[256,151,296,55,"longitude"],[256,160,296,64],[256,161,296,65],[256,164,296,68],[256,168,296,72],[257,10,298,6],[257,14,298,10,"hasMeaningfulMovement"],[257,35,298,31],[257,37,298,33],[258,12,299,8],[258,16,299,14,"distanceKm"],[258,26,299,24],[258,35,299,33,"getDrivingDistanceKm"],[258,55,299,53],[258,56,300,10,"prevLocation"],[258,68,300,22],[258,69,300,23,"latitude"],[258,77,300,31],[258,79,301,10,"prevLocation"],[258,91,301,22],[258,92,301,23,"longitude"],[258,101,301,32],[258,103,302,10,"locationData"],[258,115,302,22],[258,116,302,23,"latitude"],[258,124,302,31],[258,126,303,10,"locationData"],[258,138,303,22],[258,139,303,23,"longitude"],[258,148,304,8],[258,149,304,9],[259,12,306,8],[259,16,306,12,"distanceKm"],[259,26,306,22],[259,30,306,26],[259,34,306,30],[259,38,306,34,"Number"],[259,44,306,40],[259,45,306,41,"isFinite"],[259,53,306,49],[259,54,306,50,"distanceKm"],[259,64,306,60],[259,65,306,61],[259,67,306,63],[260,14,307,10],[260,18,307,16,"currentTotalStr"],[260,33,307,31],[260,42,307,40,"AsyncStorage"],[260,63,307,52],[260,64,307,53,"getItem"],[260,71,307,60],[260,72,307,61,"totalKey"],[260,80,307,69],[260,81,307,70],[261,14,308,10],[261,18,308,16,"currentTotal"],[261,30,308,28],[261,33,308,31,"currentTotalStr"],[261,48,308,46],[261,51,308,49,"parseFloat"],[261,61,308,59],[261,62,308,60,"currentTotalStr"],[261,77,308,75],[261,78,308,76],[261,81,308,79],[261,82,308,80],[262,14,309,10],[262,18,309,16,"newTotal"],[262,27,309,24],[262,30,309,27,"currentTotal"],[262,42,309,39],[262,45,309,42,"distanceKm"],[262,55,309,52],[263,14,310,10],[263,20,310,16,"AsyncStorage"],[263,41,310,28],[263,42,310,29,"setItem"],[263,49,310,36],[263,50,310,37,"totalKey"],[263,58,310,45],[263,60,310,47,"newTotal"],[263,69,310,55],[263,70,310,56,"toString"],[263,78,310,64],[263,79,310,65],[263,80,310,66],[263,81,310,67],[264,14,311,10,"notifyDistanceUpdate"],[264,34,311,30],[264,35,311,31,"newTotal"],[264,44,311,39],[264,45,311,40],[265,12,312,8],[265,13,312,9],[265,19,312,15],[266,14,313,10,"console"],[266,21,313,17],[266,22,313,18,"warn"],[266,26,313,22],[266,27,313,23],[266,106,313,102],[266,107,313,103],[267,12,314,8],[268,10,315,6],[269,8,316,4],[270,8,318,4,"locationHistory"],[270,23,318,19],[270,24,318,20,"push"],[270,28,318,24],[270,29,318,25,"locationData"],[270,41,318,37],[270,42,318,38],[271,8,320,4],[271,12,320,8,"locationHistory"],[271,27,320,23],[271,28,320,24,"length"],[271,34,320,30],[271,37,320,33,"HISTORY_LIMIT"],[271,50,320,46],[271,52,320,48],[272,10,321,6,"locationHistory"],[272,25,321,21],[272,26,321,22,"splice"],[272,32,321,28],[272,33,321,29],[272,34,321,30],[272,36,321,32,"locationHistory"],[272,51,321,47],[272,52,321,48,"length"],[272,58,321,54],[272,61,321,57,"HISTORY_LIMIT"],[272,74,321,70],[272,75,321,71],[273,8,322,4],[274,8,324,4],[274,14,324,10,"AsyncStorage"],[274,35,324,22],[274,36,324,23,"setItem"],[274,43,324,30],[274,44,324,31,"historyKey"],[274,54,324,41],[274,56,324,43,"JSON"],[274,60,324,47],[274,61,324,48,"stringify"],[274,70,324,57],[274,71,324,58,"locationHistory"],[274,86,324,73],[274,87,324,74],[274,88,324,75],[275,6,325,2],[275,7,325,3],[275,8,325,4],[275,15,325,11,"error"],[275,20,325,16],[275,22,325,18],[276,8,326,4,"console"],[276,15,326,11],[276,16,326,12,"error"],[276,21,326,17],[276,22,326,18],[276,63,326,59],[276,65,326,61,"error"],[276,70,326,66],[276,71,326,67],[277,6,327,2],[278,4,328,0],[278,5,328,1],[279,4,328,1],[279,20,268,6,"processLocationForDistance"],[279,46,268,32,"processLocationForDistance"],[279,47,268,32,"_x9"],[279,50,268,32],[279,52,268,32,"_x0"],[279,55,268,32],[280,6,268,32],[280,13,268,32,"_ref5"],[280,18,268,32],[280,19,268,32,"apply"],[280,24,268,32],[280,31,268,32,"arguments"],[280,40,268,32],[281,4,268,32],[282,2,268,32],[282,5,328,1],[283,2,356,0],[283,6,356,6,"LocationContext"],[283,21,356,21],[283,37,356,24],[283,41,356,24,"createContext"],[283,61,356,37],[283,63,356,71,"undefined"],[283,72,356,80],[283,73,356,81],[284,2,358,7],[284,6,358,13,"useLocation"],[284,17,358,24],[284,20,358,27,"useLocation"],[284,21,358,27],[284,26,358,33],[285,4,358,33,"_s"],[285,6,358,33],[286,4,359,2],[286,8,359,8,"context"],[286,15,359,15],[286,18,359,18],[286,22,359,18,"useContext"],[286,39,359,28],[286,41,359,29,"LocationContext"],[286,56,359,44],[286,57,359,45],[287,4,360,2],[287,8,360,6],[287,9,360,7,"context"],[287,16,360,14],[287,18,360,16],[288,6,361,4],[288,12,361,10],[288,16,361,14,"Error"],[288,21,361,19],[288,22,361,20],[288,74,361,72],[288,75,361,73],[289,4,362,2],[290,4,363,2],[290,11,363,9,"context"],[290,18,363,16],[291,2,364,0],[291,3,364,1],[292,2,364,2,"exports"],[292,9,364,2],[292,10,364,2,"useLocation"],[292,21,364,2],[292,24,364,2,"useLocation"],[292,35,364,2],[293,2,364,2,"_s"],[293,4,364,2],[293,5,358,13,"useLocation"],[293,16,358,24],[294,2,366,0,"TaskManager"],[294,13,366,11],[294,14,366,12,"defineTask"],[294,24,366,22],[294,25,366,23,"LOCATION_TASK_NAME"],[294,43,366,41],[295,4,366,41],[295,8,366,41,"_ref8"],[295,13,366,41],[295,20,366,41,"_asyncToGenerator2"],[295,38,366,41],[295,39,366,41,"default"],[295,46,366,41],[295,48,366,43],[295,59,366,43,"_ref7"],[295,64,366,43],[295,66,366,70],[296,6,366,70],[296,10,366,52,"data"],[296,14,366,56],[296,17,366,56,"_ref7"],[296,22,366,56],[296,23,366,52,"data"],[296,27,366,56],[297,8,366,58,"error"],[297,13,366,63],[297,16,366,63,"_ref7"],[297,21,366,63],[297,22,366,58,"error"],[297,27,366,63],[298,6,367,2],[298,10,367,6,"error"],[298,15,367,11],[298,17,367,13],[299,8,368,4,"console"],[299,15,368,11],[299,16,368,12,"error"],[299,21,368,17],[299,22,368,18],[299,55,368,51],[299,57,368,53,"error"],[299,62,368,58],[299,63,368,59],[300,8,369,4],[301,6,370,2],[302,6,372,2],[302,10,372,6,"data"],[302,14,372,10],[302,16,372,12],[303,8,373,4],[303,12,373,4,"_ref9"],[303,17,373,4],[303,20,373,26,"data"],[303,24,373,30],[304,10,373,12,"locations"],[304,19,373,21],[304,22,373,21,"_ref9"],[304,27,373,21],[304,28,373,12,"locations"],[304,37,373,21],[305,8,374,4,"console"],[305,15,374,11],[305,16,374,12,"log"],[305,19,374,15],[305,20,374,16],[305,44,374,40],[305,46,374,42,"locations"],[305,55,374,51],[305,56,374,52],[306,8,376,4],[306,13,376,9],[306,17,376,15,"location"],[306,25,376,23],[306,29,376,27,"locations"],[306,38,376,36],[306,40,376,38],[307,10,377,6],[307,14,377,12,"locationData"],[307,26,377,38],[307,29,377,41],[308,12,378,8,"latitude"],[308,20,378,16],[308,22,378,18,"location"],[308,30,378,26],[308,31,378,27,"coords"],[308,37,378,33],[308,38,378,34,"latitude"],[308,46,378,42],[309,12,379,8,"longitude"],[309,21,379,17],[309,23,379,19,"location"],[309,31,379,27],[309,32,379,28,"coords"],[309,38,379,34],[309,39,379,35,"longitude"],[309,48,379,44],[310,12,380,8,"timestamp"],[310,21,380,17],[310,23,380,19,"location"],[310,31,380,27],[310,32,380,28,"timestamp"],[310,41,380,37],[311,12,381,8,"accuracy"],[311,20,381,16],[311,22,381,18,"location"],[311,30,381,26],[311,31,381,27,"coords"],[311,37,381,33],[311,38,381,34,"accuracy"],[311,46,381,42],[311,50,381,46,"undefined"],[312,10,382,6],[312,11,382,7],[313,10,384,6],[313,14,384,10],[314,12,385,8],[314,16,385,14,"storedUser"],[314,26,385,24],[314,35,385,33,"getStoredUser"],[314,48,385,46],[314,49,385,47],[314,50,385,48],[315,12,386,8],[315,18,386,14,"processLocationForDistance"],[315,44,386,40],[315,45,386,41,"locationData"],[315,57,386,53],[315,59,386,55,"storedUser"],[315,69,386,65],[315,71,386,67,"id"],[315,73,386,69],[315,77,386,73],[315,81,386,77],[315,82,386,78],[316,12,388,8],[316,16,388,12],[316,17,388,13,"storedUser"],[316,27,388,23],[316,29,388,25,"id"],[316,31,388,27],[316,33,388,29],[317,14,389,10],[318,12,390,8],[320,12,392,8],[321,12,393,8],[321,16,393,12],[322,14,394,10],[322,18,394,16,"historyDoc"],[322,28,394,26],[322,31,394,29],[323,16,395,12,"user_id"],[323,23,395,19],[323,25,395,21,"storedUser"],[323,35,395,31],[323,36,395,32,"id"],[323,38,395,34],[324,16,396,12,"latitude"],[324,24,396,20],[324,26,396,22,"locationData"],[324,38,396,34],[324,39,396,35,"latitude"],[324,47,396,43],[325,16,397,12,"longitude"],[325,25,397,21],[325,27,397,23,"locationData"],[325,39,397,35],[325,40,397,36,"longitude"],[325,49,397,45],[326,16,398,12,"timestamp"],[326,25,398,21],[326,27,398,23,"locationData"],[326,39,398,35],[326,40,398,36,"timestamp"],[326,49,398,45],[327,16,399,12,"accuracy"],[327,24,399,20],[327,26,399,22,"locationData"],[327,38,399,34],[327,39,399,35,"accuracy"],[327,47,399,43],[327,51,399,47],[327,55,399,51],[328,16,400,12,"created_at"],[328,26,400,22],[328,28,400,24],[328,32,400,24,"serverTimestamp"],[328,58,400,39],[328,60,400,40],[328,61,400,41],[329,16,401,12,"is_live_tracking"],[329,32,401,28],[329,34,401,30],[330,14,402,10],[330,15,402,11],[331,14,404,10],[331,20,404,16],[331,24,404,16,"addDoc"],[331,41,404,22],[331,43,404,23],[331,47,404,23,"collection"],[331,68,404,33],[331,70,404,34,"db"],[331,82,404,36],[331,84,404,38],[331,95,404,49],[331,96,404,50],[331,98,404,52,"historyDoc"],[331,108,404,62],[331,109,404,63],[333,14,406,10],[334,14,407,10],[334,18,407,16,"liveStatus"],[334,28,407,26],[334,37,407,35,"AsyncStorage"],[334,58,407,47],[334,59,407,48,"getItem"],[334,66,407,55],[334,67,407,56],[334,83,407,72,"storedUser"],[334,93,407,82],[334,94,407,83,"id"],[334,96,407,85],[334,98,407,87],[334,99,407,88],[335,14,408,10],[335,18,408,14,"liveStatus"],[335,28,408,24],[335,33,408,29],[335,39,408,35],[335,41,408,37],[336,16,409,12],[336,22,409,18],[336,26,409,18,"setDoc"],[336,43,409,24],[336,45,410,14],[336,49,410,14,"fsDoc"],[336,63,410,19],[336,65,410,20,"db"],[336,77,410,22],[336,79,410,24],[336,94,410,39],[336,96,410,41,"storedUser"],[336,106,410,51],[336,107,410,52,"id"],[336,109,410,54],[336,110,410,55],[336,112,411,14],[337,18,412,16,"user_id"],[337,25,412,23],[337,27,412,25,"storedUser"],[337,37,412,35],[337,38,412,36,"id"],[337,40,412,38],[338,18,413,16,"name"],[338,22,413,20],[338,24,413,22,"storedUser"],[338,34,413,32],[338,35,413,33,"name"],[338,39,413,37],[339,18,414,16,"latitude"],[339,26,414,24],[339,28,414,26,"locationData"],[339,40,414,38],[339,41,414,39,"latitude"],[339,49,414,47],[340,18,415,16,"longitude"],[340,27,415,25],[340,29,415,27,"locationData"],[340,41,415,39],[340,42,415,40,"longitude"],[340,51,415,49],[341,18,416,16,"accuracy"],[341,26,416,24],[341,28,416,26,"locationData"],[341,40,416,38],[341,41,416,39,"accuracy"],[341,49,416,47],[341,53,416,51],[341,57,416,55],[342,18,417,16,"last_update"],[342,29,417,27],[342,31,417,29],[342,35,417,29,"serverTimestamp"],[342,61,417,44],[342,63,417,45],[342,64,417,46],[343,18,418,16,"timestamp"],[343,27,418,25],[343,29,418,27,"locationData"],[343,41,418,39],[343,42,418,40,"timestamp"],[344,16,419,14],[344,17,419,15],[344,19,420,14],[345,18,420,16,"merge"],[345,23,420,21],[345,25,420,23],[346,16,420,28],[346,17,421,12],[346,18,421,13],[347,14,422,10],[348,12,423,8],[348,13,423,9],[348,14,423,10],[348,21,423,17,"persistErr"],[348,31,423,27],[348,33,423,29],[349,14,424,10,"console"],[349,21,424,17],[349,22,424,18,"error"],[349,27,424,23],[349,28,424,24],[349,70,424,66],[349,72,424,68,"persistErr"],[349,82,424,78],[349,83,424,79],[350,12,425,8],[351,10,426,6],[351,11,426,7],[351,12,426,8],[351,19,426,15,"err"],[351,22,426,18],[351,24,426,20],[352,12,427,8,"console"],[352,19,427,15],[352,20,427,16,"error"],[352,25,427,21],[352,26,427,22],[352,54,427,50],[352,56,427,52,"err"],[352,59,427,55],[352,60,427,56],[353,10,428,6],[354,8,429,4],[355,6,430,2],[356,4,431,0],[356,5,431,1],[357,4,431,1],[357,21,431,1,"_x1"],[357,24,431,1],[358,6,431,1],[358,13,431,1,"_ref8"],[358,18,431,1],[358,19,431,1,"apply"],[358,24,431,1],[358,31,431,1,"arguments"],[358,40,431,1],[359,4,431,1],[360,2,431,1],[360,6,431,2],[361,2,438,7],[361,6,438,13,"LocationProvider"],[361,22,438,62],[361,25,438,65,"_ref0"],[361,30,438,65],[361,34,438,83],[362,4,438,83,"_s2"],[362,7,438,83],[363,4,438,83],[363,8,438,68,"children"],[363,16,438,76],[363,19,438,76,"_ref0"],[363,24,438,76],[363,25,438,68,"children"],[363,33,438,76],[364,4,439,2],[364,8,439,2,"_useState"],[364,17,439,2],[364,20,439,48],[364,24,439,48,"useState"],[364,39,439,56],[364,41,439,78],[364,45,439,82],[364,46,439,83],[365,6,439,83,"_useState2"],[365,16,439,83],[365,23,439,83,"_slicedToArray2"],[365,38,439,83],[365,39,439,83,"default"],[365,46,439,83],[365,48,439,83,"_useState"],[365,57,439,83],[366,6,439,9,"currentLocation"],[366,21,439,24],[366,24,439,24,"_useState2"],[366,34,439,24],[367,6,439,26,"setCurrentLocation"],[367,24,439,44],[367,27,439,44,"_useState2"],[367,37,439,44],[368,4,440,2],[368,8,440,2,"_useState3"],[368,18,440,2],[368,21,440,38],[368,25,440,38,"useState"],[368,40,440,46],[368,42,440,47],[368,47,440,52],[368,48,440,53],[369,6,440,53,"_useState4"],[369,16,440,53],[369,23,440,53,"_slicedToArray2"],[369,38,440,53],[369,39,440,53,"default"],[369,46,440,53],[369,48,440,53,"_useState3"],[369,58,440,53],[370,6,440,9,"isTracking"],[370,16,440,19],[370,19,440,19,"_useState4"],[370,29,440,19],[371,6,440,21,"setIsTracking"],[371,19,440,34],[371,22,440,34,"_useState4"],[371,32,440,34],[372,4,441,2],[372,8,441,2,"_useState5"],[372,18,441,2],[372,21,441,44],[372,25,441,44,"useState"],[372,40,441,52],[372,42,441,53],[372,43,441,54],[372,44,441,55],[373,6,441,55,"_useState6"],[373,16,441,55],[373,23,441,55,"_slicedToArray2"],[373,38,441,55],[373,39,441,55,"default"],[373,46,441,55],[373,48,441,55,"_useState5"],[373,58,441,55],[374,6,441,9,"totalDistance"],[374,19,441,22],[374,22,441,22,"_useState6"],[374,32,441,22],[375,6,441,24,"setTotalDistance"],[375,22,441,40],[375,25,441,40,"_useState6"],[375,35,441,40],[376,4,442,2],[377,4,443,2],[377,8,443,2,"_useState7"],[377,18,443,2],[377,21,443,46],[377,25,443,46,"useState"],[377,40,443,54],[377,42,443,55],[377,47,443,60],[377,48,443,61],[378,6,443,61,"_useState8"],[378,16,443,61],[378,23,443,61,"_slicedToArray2"],[378,38,443,61],[378,39,443,61,"default"],[378,46,443,61],[378,48,443,61,"_useState7"],[378,58,443,61],[379,6,443,9,"isLiveTracking"],[379,20,443,23],[379,23,443,23,"_useState8"],[379,33,443,23],[380,6,443,25,"setIsLiveTracking"],[380,23,443,42],[380,26,443,42,"_useState8"],[380,36,443,42],[381,4,444,2],[381,8,444,2,"_useState9"],[381,18,444,2],[381,21,444,36],[381,25,444,36,"useState"],[381,40,444,44],[381,42,449,6],[381,44,449,8],[381,45,449,9],[382,6,449,9,"_useState0"],[382,16,449,9],[382,23,449,9,"_slicedToArray2"],[382,38,449,9],[382,39,449,9,"default"],[382,46,449,9],[382,48,449,9,"_useState9"],[382,58,449,9],[383,6,444,9,"liveUsers"],[383,15,444,18],[383,18,444,18,"_useState0"],[383,28,444,18],[384,6,444,20,"setLiveUsers"],[384,18,444,32],[384,21,444,32,"_useState0"],[384,31,444,32],[385,4,450,2],[385,8,450,2,"_useState1"],[385,18,450,2],[385,21,450,58],[385,25,450,58,"useState"],[385,40,450,66],[385,42,450,106],[385,46,450,110],[385,47,450,111],[386,6,450,111,"_useState10"],[386,17,450,111],[386,24,450,111,"_slicedToArray2"],[386,39,450,111],[386,40,450,111,"default"],[386,47,450,111],[386,49,450,111,"_useState1"],[386,59,450,111],[387,6,450,9,"liveTrackingInterval"],[387,26,450,29],[387,29,450,29,"_useState10"],[387,40,450,29],[388,6,450,31,"setLiveTrackingInterval"],[388,29,450,54],[388,32,450,54,"_useState10"],[388,43,450,54],[389,4,452,2],[389,8,452,2,"_useAuth"],[389,16,452,2],[389,19,452,19],[389,23,452,19,"useAuth"],[389,43,452,26],[389,45,452,27],[389,46,452,28],[390,6,452,10,"user"],[390,10,452,14],[390,13,452,14,"_useAuth"],[390,21,452,14],[390,22,452,10,"user"],[390,26,452,14],[391,4,454,2],[391,8,454,2,"useEffect"],[391,24,454,11],[391,26,454,12],[391,32,454,18],[392,6,455,4],[392,10,455,10,"listener"],[392,18,455,42],[392,21,455,46,"newTotal"],[392,29,455,62],[392,33,455,67],[393,8,456,6,"setTotalDistance"],[393,24,456,22],[393,25,456,23,"newTotal"],[393,33,456,31],[393,34,456,32],[394,6,457,4],[394,7,457,5],[395,6,458,4,"setDistanceUpdateListener"],[395,31,458,29],[395,32,458,30,"listener"],[395,40,458,38],[395,41,458,39],[396,6,459,4],[396,13,459,11],[396,19,459,17,"setDistanceUpdateListener"],[396,44,459,42],[396,45,459,43],[396,49,459,47],[396,50,459,48],[397,4,460,2],[397,5,460,3],[397,7,460,5],[397,9,460,7],[397,10,460,8],[398,4,462,2],[398,8,462,2,"useEffect"],[398,24,462,11],[398,26,462,12],[398,32,462,18],[399,6,463,4,"checkTrackingStatus"],[399,25,463,23],[399,26,463,24],[399,27,463,25],[400,6,464,4,"getCurrentLocation"],[400,24,464,22],[400,25,464,23],[400,26,464,24],[401,6,465,4,"calculateTotalDistance"],[401,28,465,26],[401,29,465,27],[401,30,465,28],[402,4,466,2],[402,5,466,3],[402,7,466,5],[402,8,466,6,"user"],[402,12,466,10],[402,13,466,11],[402,14,466,12],[403,4,468,2],[403,8,468,8,"checkTrackingStatus"],[403,27,468,27],[404,6,468,27],[404,10,468,27,"_ref1"],[404,15,468,27],[404,22,468,27,"_asyncToGenerator2"],[404,40,468,27],[404,41,468,27,"default"],[404,48,468,27],[404,50,468,30],[404,63,468,42],[405,8,469,4],[405,12,469,8],[405,13,469,9,"user"],[405,17,469,13],[405,19,469,15],[406,8,471,4],[406,12,471,8],[407,10,472,6],[407,14,472,12,"trackingStatus"],[407,28,472,26],[407,37,472,35,"AsyncStorage"],[407,58,472,47],[407,59,472,48,"getItem"],[407,66,472,55],[407,67,472,56],[407,79,472,68,"user"],[407,83,472,72],[407,84,472,73,"id"],[407,86,472,75],[407,88,472,77],[407,89,472,78],[408,10,473,6],[408,14,473,10,"trackingStatus"],[408,28,473,24],[408,33,473,29],[408,39,473,35],[408,41,473,37],[409,12,474,8],[409,16,474,14,"isTaskRunning"],[409,29,474,27],[409,38,474,36,"Location"],[409,46,474,44],[409,47,474,45,"hasStartedLocationUpdatesAsync"],[409,77,474,75],[409,78,474,76,"LOCATION_TASK_NAME"],[409,96,474,94],[409,97,474,95],[410,12,475,8,"setIsTracking"],[410,25,475,21],[410,26,475,22,"isTaskRunning"],[410,39,475,35],[410,40,475,36],[412,12,477,8],[413,12,478,8],[413,16,478,14,"liveStatus"],[413,26,478,24],[413,35,478,33,"AsyncStorage"],[413,56,478,45],[413,57,478,46,"getItem"],[413,64,478,53],[413,65,478,54],[413,81,478,70,"user"],[413,85,478,74],[413,86,478,75,"id"],[413,88,478,77],[413,90,478,79],[413,91,478,80],[414,12,479,8,"setIsLiveTracking"],[414,29,479,25],[414,30,479,26,"liveStatus"],[414,40,479,36],[414,45,479,41],[414,51,479,47],[414,55,479,51,"isTaskRunning"],[414,68,479,64],[414,69,479,65],[415,10,480,6],[416,8,481,4],[416,9,481,5],[416,10,481,6],[416,17,481,13,"error"],[416,22,481,18],[416,24,481,20],[417,10,482,6,"console"],[417,17,482,13],[417,18,482,14,"error"],[417,23,482,19],[417,24,482,20],[417,57,482,53],[417,59,482,55,"error"],[417,64,482,60],[417,65,482,61],[418,8,483,4],[419,6,484,2],[419,7,484,3],[420,6,484,3],[420,22,468,8,"checkTrackingStatus"],[420,41,468,27,"checkTrackingStatus"],[420,42,468,27],[421,8,468,27],[421,15,468,27,"_ref1"],[421,20,468,27],[421,21,468,27,"apply"],[421,26,468,27],[421,33,468,27,"arguments"],[421,42,468,27],[422,6,468,27],[423,4,468,27],[423,7,484,3],[424,4,486,2],[424,8,486,8,"getCurrentLocation"],[424,26,486,26],[425,6,486,26],[425,10,486,26,"_ref10"],[425,16,486,26],[425,23,486,26,"_asyncToGenerator2"],[425,41,486,26],[425,42,486,26,"default"],[425,49,486,26],[425,51,486,29],[425,64,486,41],[426,8,487,4],[426,12,487,8],[427,10,488,6],[427,14,488,6,"_yield$Location$reque"],[427,35,488,6],[427,44,488,31,"Location"],[427,52,488,39],[427,53,488,40,"requestForegroundPermissionsAsync"],[427,86,488,73],[427,87,488,74],[427,88,488,75],[428,12,488,14,"status"],[428,18,488,20],[428,21,488,20,"_yield$Location$reque"],[428,42,488,20],[428,43,488,14,"status"],[428,49,488,20],[429,10,489,6],[429,14,489,10,"status"],[429,20,489,16],[429,25,489,21],[429,34,489,30],[429,36,489,32],[430,12,490,8,"console"],[430,19,490,15],[430,20,490,16,"log"],[430,23,490,19],[430,24,490,20],[430,57,490,53],[430,58,490,54],[431,12,491,8],[432,10,492,6],[433,10,494,6],[433,14,494,12,"location"],[433,22,494,20],[433,31,494,29,"Location"],[433,39,494,37],[433,40,494,38,"getCurrentPositionAsync"],[433,63,494,61],[433,64,494,62],[433,65,494,63],[433,66,494,64],[433,67,494,65],[434,10,495,6],[434,14,495,12,"locationData"],[434,26,495,38],[434,29,495,41],[435,12,496,8,"latitude"],[435,20,496,16],[435,22,496,18,"location"],[435,30,496,26],[435,31,496,27,"coords"],[435,37,496,33],[435,38,496,34,"latitude"],[435,46,496,42],[436,12,497,8,"longitude"],[436,21,497,17],[436,23,497,19,"location"],[436,31,497,27],[436,32,497,28,"coords"],[436,38,497,34],[436,39,497,35,"longitude"],[436,48,497,44],[437,12,498,8,"timestamp"],[437,21,498,17],[437,23,498,19,"location"],[437,31,498,27],[437,32,498,28,"timestamp"],[437,41,498,37],[438,12,499,8,"accuracy"],[438,20,499,16],[438,22,499,18,"location"],[438,30,499,26],[438,31,499,27,"coords"],[438,37,499,33],[438,38,499,34,"accuracy"],[438,46,499,42],[438,50,499,46,"undefined"],[439,10,500,6],[439,11,500,7],[440,10,502,6,"setCurrentLocation"],[440,28,502,24],[440,29,502,25,"locationData"],[440,41,502,37],[440,42,502,38],[441,8,503,4],[441,9,503,5],[441,10,503,6],[441,17,503,13,"error"],[441,22,503,18],[441,24,503,20],[442,10,504,6,"console"],[442,17,504,13],[442,18,504,14,"error"],[442,23,504,19],[442,24,504,20],[442,57,504,53],[442,59,504,55,"error"],[442,64,504,60],[442,65,504,61],[443,8,505,4],[444,6,506,2],[444,7,506,3],[445,6,506,3],[445,22,486,8,"getCurrentLocation"],[445,40,486,26,"getCurrentLocation"],[445,41,486,26],[446,8,486,26],[446,15,486,26,"_ref10"],[446,21,486,26],[446,22,486,26,"apply"],[446,27,486,26],[446,34,486,26,"arguments"],[446,43,486,26],[447,6,486,26],[448,4,486,26],[448,7,506,3],[449,4,508,2],[449,8,508,8,"refreshTotalDistanceFromFirebase"],[449,40,508,40],[450,6,508,40],[450,10,508,40,"_ref11"],[450,16,508,40],[450,23,508,40,"_asyncToGenerator2"],[450,41,508,40],[450,42,508,40,"default"],[450,49,508,40],[450,51,508,43],[450,64,508,55],[451,8,509,4],[451,12,509,8],[451,13,509,9,"user"],[451,17,509,13],[451,19,509,15,"id"],[451,21,509,17],[451,23,509,19],[452,8,511,4],[452,12,511,8],[453,10,512,6],[453,14,512,12,"currentDate"],[453,25,512,23],[453,28,512,26,"getCurrentDateString"],[453,48,512,46],[453,49,512,47],[453,50,512,48],[454,10,513,6],[454,14,513,12,"docId"],[454,19,513,17],[454,22,513,20],[454,25,513,23,"currentDate"],[454,36,513,34],[454,40,513,38,"user"],[454,44,513,42],[454,45,513,43,"id"],[454,47,513,45],[454,49,513,47],[456,10,515,6],[457,10,516,6],[457,14,516,12,"travelledDocRef"],[457,29,516,27],[457,32,516,30],[457,36,516,30,"fsDoc"],[457,50,516,35],[457,52,516,36,"db"],[457,64,516,38],[457,66,516,40],[457,77,516,51],[457,79,516,53,"docId"],[457,84,516,58],[457,85,516,59],[458,10,517,6],[458,14,517,12,"travelledSnapshot"],[458,31,517,29],[458,40,517,38],[458,44,517,38,"getDocs"],[458,62,517,45],[458,64,517,46],[458,68,517,46,"query"],[458,84,517,51],[458,86,517,52],[458,90,517,52,"collection"],[458,111,517,62],[458,113,517,63,"db"],[458,125,517,65],[458,127,517,67],[458,138,517,78],[458,139,517,79],[458,141,517,81],[458,145,517,81,"where"],[458,161,517,86],[458,163,517,87],[458,177,517,101],[458,179,517,103],[458,183,517,107],[458,185,517,109,"currentDate"],[458,196,517,120],[458,197,517,121],[458,199,517,123],[458,203,517,123,"where"],[458,219,517,128],[458,221,517,129],[458,230,517,138],[458,232,517,140],[458,236,517,144],[458,238,517,146,"user"],[458,242,517,150],[458,243,517,151,"id"],[458,245,517,153],[458,246,517,154],[458,247,517,155],[458,248,517,156],[459,10,519,6],[459,14,519,10],[459,15,519,11,"travelledSnapshot"],[459,32,519,28],[459,33,519,29,"empty"],[459,38,519,34],[459,40,519,36],[460,12,520,8],[460,16,520,14,"data"],[460,20,520,18],[460,23,520,21,"travelledSnapshot"],[460,40,520,38],[460,41,520,39,"docs"],[460,45,520,43],[460,46,520,44],[460,47,520,45],[460,48,520,46],[460,49,520,47,"data"],[460,53,520,51],[460,54,520,52],[460,55,520,53],[461,12,521,8],[461,16,521,14,"firebaseDistance"],[461,32,521,30],[461,35,521,33,"data"],[461,39,521,37],[461,40,521,38,"travelled_distance_kms"],[461,62,521,60],[461,66,521,64],[461,67,521,65],[463,12,523,8],[464,12,524,8],[464,18,524,14,"AsyncStorage"],[464,39,524,26],[464,40,524,27,"setItem"],[464,47,524,34],[464,48,524,35],[464,63,524,50],[464,65,524,52,"firebaseDistance"],[464,81,524,68],[464,82,524,69,"toString"],[464,90,524,77],[464,91,524,78],[464,92,524,79],[464,93,524,80],[465,12,525,8,"setTotalDistance"],[465,28,525,24],[465,29,525,25,"firebaseDistance"],[465,45,525,41],[465,46,525,42],[466,12,527,8,"console"],[466,19,527,15],[466,20,527,16,"log"],[466,23,527,19],[466,24,527,20],[466,64,527,60,"firebaseDistance"],[466,80,527,76],[466,81,527,77,"toFixed"],[466,88,527,84],[466,89,527,85],[466,90,527,86],[466,91,527,87],[466,96,527,92],[466,97,527,93],[467,10,528,6],[467,11,528,7],[467,17,528,13],[468,12,529,8],[469,12,530,8],[469,18,530,14,"AsyncStorage"],[469,39,530,26],[469,40,530,27,"setItem"],[469,47,530,34],[469,48,530,35],[469,63,530,50],[469,65,530,52],[469,68,530,55],[469,69,530,56],[470,12,531,8,"setTotalDistance"],[470,28,531,24],[470,29,531,25],[470,30,531,26],[470,31,531,27],[471,12,532,8,"console"],[471,19,532,15],[471,20,532,16,"log"],[471,23,532,19],[471,24,532,20],[471,70,532,66],[471,71,532,67],[472,10,533,6],[473,8,534,4],[473,9,534,5],[473,10,534,6],[473,17,534,13,"error"],[473,22,534,18],[473,24,534,20],[474,10,535,6,"console"],[474,17,535,13],[474,18,535,14,"error"],[474,23,535,19],[474,24,535,20],[474,66,535,62],[474,68,535,64,"error"],[474,73,535,69],[474,74,535,70],[475,10,536,6],[476,8,537,4],[477,6,538,2],[477,7,538,3],[478,6,538,3],[478,22,508,8,"refreshTotalDistanceFromFirebase"],[478,54,508,40,"refreshTotalDistanceFromFirebase"],[478,55,508,40],[479,8,508,40],[479,15,508,40,"_ref11"],[479,21,508,40],[479,22,508,40,"apply"],[479,27,508,40],[479,34,508,40,"arguments"],[479,43,508,40],[480,6,508,40],[481,4,508,40],[481,7,538,3],[482,4,540,2],[482,8,540,8,"calculateTotalDistance"],[482,30,540,30],[483,6,540,30],[483,10,540,30,"_ref12"],[483,16,540,30],[483,23,540,30,"_asyncToGenerator2"],[483,41,540,30],[483,42,540,30,"default"],[483,49,540,30],[483,51,540,33],[483,64,540,45],[484,8,541,4],[484,12,541,8],[484,13,541,9,"user"],[484,17,541,13],[484,19,541,15,"id"],[484,21,541,17],[484,23,541,19],[485,10,542,6,"setTotalDistance"],[485,26,542,22],[485,27,542,23],[485,28,542,24],[485,29,542,25],[486,10,543,6],[487,8,544,4],[488,8,546,4],[488,12,546,8],[489,10,547,6],[490,10,548,6],[490,14,548,6,"_getStorageKeysForUse2"],[490,36,548,6],[490,39,548,34,"getStorageKeysForUser"],[490,60,548,55],[490,61,548,56,"user"],[490,65,548,60],[490,66,548,61,"id"],[490,68,548,63],[490,69,548,64],[491,12,548,21,"totalKey"],[491,20,548,29],[491,23,548,29,"_getStorageKeysForUse2"],[491,45,548,29],[491,46,548,14,"total"],[491,51,548,19],[492,10,549,6],[492,14,549,12,"totalDistanceStr"],[492,30,549,28],[492,33,550,8],[492,40,550,15,"AsyncStorage"],[492,61,550,27],[492,62,550,28,"getItem"],[492,69,550,35],[492,70,550,36,"totalKey"],[492,78,550,44],[492,79,550,45],[492,91,551,15,"AsyncStorage"],[492,112,551,27],[492,113,551,28,"getItem"],[492,120,551,35],[492,121,551,36,"DEFAULT_TOTAL_KEY"],[492,138,551,53],[492,139,551,54],[492,140,551,55],[492,151,552,15,"AsyncStorage"],[492,172,552,27],[492,173,552,28,"getItem"],[492,180,552,35],[492,181,552,36],[492,196,552,51],[492,197,552,52],[492,198,552,53],[493,10,554,6],[493,14,554,10,"totalDistanceStr"],[493,30,554,26],[493,32,554,28],[494,12,555,8],[494,16,555,14,"parsed"],[494,22,555,20],[494,25,555,23,"parseFloat"],[494,35,555,33],[494,36,555,34,"totalDistanceStr"],[494,52,555,50],[494,53,555,51],[495,12,556,8,"setTotalDistance"],[495,28,556,24],[495,29,556,25,"Number"],[495,35,556,31],[495,36,556,32,"isFinite"],[495,44,556,40],[495,45,556,41,"parsed"],[495,51,556,47],[495,52,556,48],[495,55,556,51,"parsed"],[495,61,556,57],[495,64,556,60],[495,65,556,61],[495,66,556,62],[497,12,558,8],[498,12,559,8],[498,18,559,14,"refreshTotalDistanceFromFirebase"],[498,50,559,46],[498,51,559,47],[498,52,559,48],[499,12,560,8],[500,10,561,6],[502,10,563,6],[503,10,564,6],[503,16,564,12,"refreshTotalDistanceFromFirebase"],[503,48,564,44],[503,49,564,45],[503,50,564,46],[504,8,565,4],[504,9,565,5],[504,10,565,6],[504,17,565,13,"error"],[504,22,565,18],[504,24,565,20],[505,10,566,6,"console"],[505,17,566,13],[505,18,566,14,"error"],[505,23,566,19],[505,24,566,20],[505,59,566,55],[505,61,566,57,"error"],[505,66,566,62],[505,67,566,63],[506,10,567,6,"setTotalDistance"],[506,26,567,22],[506,27,567,23],[506,28,567,24],[506,29,567,25],[507,8,568,4],[508,6,569,2],[508,7,569,3],[509,6,569,3],[509,22,540,8,"calculateTotalDistance"],[509,44,540,30,"calculateTotalDistance"],[509,45,540,30],[510,8,540,30],[510,15,540,30,"_ref12"],[510,21,540,30],[510,22,540,30,"apply"],[510,27,540,30],[510,34,540,30,"arguments"],[510,43,540,30],[511,6,540,30],[512,4,540,30],[512,7,569,3],[513,4,571,2],[513,8,571,8,"refreshTotalDistance"],[513,28,571,28],[514,6,571,28],[514,10,571,28,"_ref13"],[514,16,571,28],[514,23,571,28,"_asyncToGenerator2"],[514,41,571,28],[514,42,571,28,"default"],[514,49,571,28],[514,51,571,31],[514,64,571,58],[515,8,572,4],[515,14,572,10,"refreshTotalDistanceFromFirebase"],[515,46,572,42],[515,47,572,43],[515,48,572,44],[516,6,573,2],[516,7,573,3],[517,6,573,3],[517,22,571,8,"refreshTotalDistance"],[517,42,571,28,"refreshTotalDistance"],[517,43,571,28],[518,8,571,28],[518,15,571,28,"_ref13"],[518,21,571,28],[518,22,571,28,"apply"],[518,27,571,28],[518,34,571,28,"arguments"],[518,43,571,28],[519,6,571,28],[520,4,571,28],[520,7,573,3],[521,4,575,2],[521,8,575,8,"startTracking"],[521,21,575,21],[522,6,575,21],[522,10,575,21,"_ref14"],[522,16,575,21],[522,23,575,21,"_asyncToGenerator2"],[522,41,575,21],[522,42,575,21,"default"],[522,49,575,21],[522,51,575,24],[522,64,575,51],[523,8,576,4],[523,12,576,8],[523,13,576,9,"user"],[523,17,576,13],[523,19,576,15],[524,8,578,4],[524,12,578,8],[525,10,579,6],[525,14,579,6,"_yield$Location$reque2"],[525,36,579,6],[525,45,579,49,"Location"],[525,53,579,57],[525,54,579,58,"requestForegroundPermissionsAsync"],[525,87,579,91],[525,88,579,92],[525,89,579,93],[526,12,579,22,"foregroundStatus"],[526,28,579,38],[526,31,579,38,"_yield$Location$reque2"],[526,53,579,38],[526,54,579,14,"status"],[526,60,579,20],[527,10,580,6],[527,14,580,10,"foregroundStatus"],[527,30,580,26],[527,35,580,31],[527,44,580,40],[527,46,580,42],[528,12,581,8],[528,18,581,14],[528,22,581,18,"Error"],[528,27,581,23],[528,28,581,24],[528,72,581,68],[528,73,581,69],[529,10,582,6],[530,10,584,6],[530,14,584,6,"_yield$Location$reque3"],[530,36,584,6],[530,45,584,49,"Location"],[530,53,584,57],[530,54,584,58,"requestBackgroundPermissionsAsync"],[530,87,584,91],[530,88,584,92],[530,89,584,93],[531,12,584,22,"backgroundStatus"],[531,28,584,38],[531,31,584,38,"_yield$Location$reque3"],[531,53,584,38],[531,54,584,14,"status"],[531,60,584,20],[532,10,585,6],[532,14,585,10,"backgroundStatus"],[532,30,585,26],[532,35,585,31],[532,44,585,40],[532,46,585,42],[533,12,586,8,"console"],[533,19,586,15],[533,20,586,16,"warn"],[533,24,586,20],[533,25,586,21],[533,94,586,90],[533,95,586,91],[534,10,587,6],[535,10,589,6],[535,16,589,12,"Location"],[535,24,589,20],[535,25,589,21,"startLocationUpdatesAsync"],[535,50,589,46],[535,51,589,47,"LOCATION_TASK_NAME"],[535,69,589,65],[535,71,589,67],[536,12,590,8,"accuracy"],[536,20,590,16],[536,22,590,18,"Location"],[536,30,590,26],[536,31,590,27,"Accuracy"],[536,39,590,35],[536,40,590,36,"High"],[536,44,590,40],[537,12,591,8,"timeInterval"],[537,24,591,20],[537,26,591,22],[537,31,591,27],[538,12,591,29],[539,12,592,8,"distanceInterval"],[539,28,592,24],[539,30,592,26],[539,32,592,28],[540,12,592,30],[541,12,593,8,"foregroundService"],[541,29,593,25],[541,31,593,27],[542,14,594,10,"notificationTitle"],[542,31,594,27],[542,33,594,29],[542,59,594,55],[543,14,595,10,"notificationBody"],[543,30,595,26],[543,32,595,28],[543,81,595,77],[544,14,596,10,"notificationColor"],[544,31,596,27],[544,33,596,29],[545,12,597,8],[546,10,598,6],[546,11,598,7],[546,12,598,8],[547,10,600,6],[547,16,600,12,"AsyncStorage"],[547,37,600,24],[547,38,600,25,"setItem"],[547,45,600,32],[547,46,600,33],[547,58,600,45,"user"],[547,62,600,49],[547,63,600,50,"id"],[547,65,600,52],[547,67,600,54],[547,69,600,56],[547,75,600,62],[547,76,600,63],[548,10,601,6,"setIsTracking"],[548,23,601,19],[548,24,601,20],[548,28,601,24],[548,29,601,25],[549,8,602,4],[549,9,602,5],[549,10,602,6],[549,17,602,13,"error"],[549,22,602,18],[549,24,602,20],[550,10,603,6,"console"],[550,17,603,13],[550,18,603,14,"error"],[550,23,603,19],[550,24,603,20],[550,59,603,55],[550,61,603,57,"error"],[550,66,603,62],[550,67,603,63],[551,10,604,6],[551,16,604,12,"error"],[551,21,604,17],[552,8,605,4],[553,6,606,2],[553,7,606,3],[554,6,606,3],[554,22,575,8,"startTracking"],[554,35,575,21,"startTracking"],[554,36,575,21],[555,8,575,21],[555,15,575,21,"_ref14"],[555,21,575,21],[555,22,575,21,"apply"],[555,27,575,21],[555,34,575,21,"arguments"],[555,43,575,21],[556,6,575,21],[557,4,575,21],[557,7,606,3],[558,4,608,2],[558,8,608,8,"stopTracking"],[558,20,608,20],[559,6,608,20],[559,10,608,20,"_ref15"],[559,16,608,20],[559,23,608,20,"_asyncToGenerator2"],[559,41,608,20],[559,42,608,20,"default"],[559,49,608,20],[559,51,608,23],[559,64,608,50],[560,8,609,4],[560,12,609,8],[560,13,609,9,"user"],[560,17,609,13],[560,19,609,15],[561,8,611,4],[561,12,611,8],[562,10,612,6],[562,14,612,12,"hasStarted"],[562,24,612,22],[562,33,612,31,"Location"],[562,41,612,39],[562,42,612,40,"hasStartedLocationUpdatesAsync"],[562,72,612,70],[562,73,612,71,"LOCATION_TASK_NAME"],[562,91,612,89],[562,92,612,90],[563,10,613,6],[563,14,613,10,"hasStarted"],[563,24,613,20],[563,26,613,22],[564,12,614,8],[564,18,614,14,"Location"],[564,26,614,22],[564,27,614,23,"stopLocationUpdatesAsync"],[564,51,614,47],[564,52,614,48,"LOCATION_TASK_NAME"],[564,70,614,66],[564,71,614,67],[565,10,615,6],[566,10,617,6],[566,16,617,12,"AsyncStorage"],[566,37,617,24],[566,38,617,25,"setItem"],[566,45,617,32],[566,46,617,33],[566,58,617,45,"user"],[566,62,617,49],[566,63,617,50,"id"],[566,65,617,52],[566,67,617,54],[566,69,617,56],[566,76,617,63],[566,77,617,64],[567,10,618,6,"setIsTracking"],[567,23,618,19],[567,24,618,20],[567,29,618,25],[567,30,618,26],[568,8,619,4],[568,9,619,5],[568,10,619,6],[568,17,619,13,"error"],[568,22,619,18],[568,24,619,20],[569,10,620,6,"console"],[569,17,620,13],[569,18,620,14,"error"],[569,23,620,19],[569,24,620,20],[569,59,620,55],[569,61,620,57,"error"],[569,66,620,62],[569,67,620,63],[570,10,621,6],[570,16,621,12,"error"],[570,21,621,17],[571,8,622,4],[572,6,623,2],[572,7,623,3],[573,6,623,3],[573,22,608,8,"stopTracking"],[573,34,608,20,"stopTracking"],[573,35,608,20],[574,8,608,20],[574,15,608,20,"_ref15"],[574,21,608,20],[574,22,608,20,"apply"],[574,27,608,20],[574,34,608,20,"arguments"],[574,43,608,20],[575,6,608,20],[576,4,608,20],[576,7,623,3],[577,4,625,2],[577,8,625,8,"getLocationHistory"],[577,26,625,26],[578,6,625,26],[578,10,625,26,"_ref16"],[578,16,625,26],[578,23,625,26,"_asyncToGenerator2"],[578,41,625,26],[578,42,625,26,"default"],[578,49,625,26],[578,51,625,29],[578,64,625,66],[579,8,626,4],[579,12,626,8],[579,13,626,9,"user"],[579,17,626,13],[579,19,626,15,"id"],[579,21,626,17],[579,23,626,19],[580,10,627,6],[580,17,627,13],[580,19,627,15],[581,8,628,4],[582,8,630,4],[582,12,630,8],[583,10,631,6],[583,14,631,6,"_getStorageKeysForUse3"],[583,36,631,6],[583,39,631,38,"getStorageKeysForUser"],[583,60,631,59],[583,61,631,60,"user"],[583,65,631,64],[583,66,631,65,"id"],[583,68,631,67],[583,69,631,68],[584,12,631,23,"historyKey"],[584,22,631,33],[584,25,631,33,"_getStorageKeysForUse3"],[584,47,631,33],[584,48,631,14,"history"],[584,55,631,21],[585,10,632,6],[585,14,632,12,"historyData"],[585,25,632,23],[585,28,633,8],[585,35,633,15,"AsyncStorage"],[585,56,633,27],[585,57,633,28,"getItem"],[585,64,633,35],[585,65,633,36,"historyKey"],[585,75,633,46],[585,76,633,47],[585,88,634,15,"AsyncStorage"],[585,109,634,27],[585,110,634,28,"getItem"],[585,117,634,35],[585,118,634,36,"DEFAULT_HISTORY_KEY"],[585,137,634,55],[585,138,634,56],[585,139,634,57],[586,10,635,6],[586,17,635,13,"historyData"],[586,28,635,24],[586,31,635,28,"JSON"],[586,35,635,32],[586,36,635,33,"parse"],[586,41,635,38],[586,42,635,39,"historyData"],[586,53,635,50],[586,54,635,51],[586,57,635,73],[586,59,635,75],[587,8,636,4],[587,9,636,5],[587,10,636,6],[587,17,636,13,"error"],[587,22,636,18],[587,24,636,20],[588,10,637,6,"console"],[588,17,637,13],[588,18,637,14,"error"],[588,23,637,19],[588,24,637,20],[588,57,637,53],[588,59,637,55,"error"],[588,64,637,60],[588,65,637,61],[589,10,638,6],[589,17,638,13],[589,19,638,15],[590,8,639,4],[591,6,640,2],[591,7,640,3],[592,6,640,3],[592,22,625,8,"getLocationHistory"],[592,40,625,26,"getLocationHistory"],[592,41,625,26],[593,8,625,26],[593,15,625,26,"_ref16"],[593,21,625,26],[593,22,625,26,"apply"],[593,27,625,26],[593,34,625,26,"arguments"],[593,43,625,26],[594,6,625,26],[595,4,625,26],[595,7,640,3],[597,4,642,2],[598,4,643,2],[598,8,643,8,"startUnifiedTracking"],[598,28,643,28],[599,6,643,28],[599,10,643,28,"_ref17"],[599,16,643,28],[599,23,643,28,"_asyncToGenerator2"],[599,41,643,28],[599,42,643,28,"default"],[599,49,643,28],[599,51,643,31],[599,64,643,58],[600,8,644,4],[600,12,644,8],[600,13,644,9,"user"],[600,17,644,13],[600,19,644,15],[601,8,646,4],[601,12,646,8],[602,10,647,6],[602,14,647,6,"_yield$Location$reque4"],[602,36,647,6],[602,45,647,31,"Location"],[602,53,647,39],[602,54,647,40,"requestForegroundPermissionsAsync"],[602,87,647,73],[602,88,647,74],[602,89,647,75],[603,12,647,14,"status"],[603,18,647,20],[603,21,647,20,"_yield$Location$reque4"],[603,43,647,20],[603,44,647,14,"status"],[603,50,647,20],[604,10,648,6],[604,14,648,10,"status"],[604,20,648,16],[604,25,648,21],[604,34,648,30],[604,36,648,32],[605,12,649,8],[605,18,649,14],[605,22,649,18,"Error"],[605,27,649,23],[605,28,649,24],[605,61,649,57],[605,62,649,58],[606,10,650,6],[607,10,652,6],[607,14,652,6,"_yield$Location$reque5"],[607,36,652,6],[607,45,652,49,"Location"],[607,53,652,57],[607,54,652,58,"requestBackgroundPermissionsAsync"],[607,87,652,91],[607,88,652,92],[607,89,652,93],[608,12,652,22,"backgroundStatus"],[608,28,652,38],[608,31,652,38,"_yield$Location$reque5"],[608,53,652,38],[608,54,652,14,"status"],[608,60,652,20],[609,10,653,6],[609,14,653,10,"backgroundStatus"],[609,30,653,26],[609,35,653,31],[609,44,653,40],[609,46,653,42],[610,12,654,8,"console"],[610,19,654,15],[610,20,654,16,"warn"],[610,24,654,20],[610,25,654,21],[610,94,654,90],[610,95,654,91],[611,10,655,6],[613,10,657,6],[614,10,658,6],[614,16,658,12,"Location"],[614,24,658,20],[614,25,658,21,"startLocationUpdatesAsync"],[614,50,658,46],[614,51,658,47,"LOCATION_TASK_NAME"],[614,69,658,65],[614,71,658,67],[615,12,659,8,"accuracy"],[615,20,659,16],[615,22,659,18,"Location"],[615,30,659,26],[615,31,659,27,"Accuracy"],[615,39,659,35],[615,40,659,36,"High"],[615,44,659,40],[616,12,659,42],[617,12,660,8,"timeInterval"],[617,24,660,20],[617,26,660,22],[617,31,660,27],[618,12,660,29],[619,12,661,8,"distanceInterval"],[619,28,661,24],[619,30,661,26],[619,32,661,28],[620,12,661,30],[621,12,662,8,"foregroundService"],[621,29,662,25],[621,31,662,27],[622,14,663,10,"notificationTitle"],[622,31,663,27],[622,33,663,29],[622,59,663,55],[623,14,664,10,"notificationBody"],[623,30,664,26],[623,32,664,28],[623,89,664,85],[624,14,665,10,"notificationColor"],[624,31,665,27],[624,33,665,29],[625,12,666,8],[626,10,667,6],[626,11,667,7],[626,12,667,8],[628,10,669,6],[629,10,670,6],[629,16,670,12],[629,20,670,12,"setDoc"],[629,37,670,18],[629,39,671,8],[629,43,671,8,"fsDoc"],[629,57,671,13],[629,59,671,14,"db"],[629,71,671,16],[629,73,671,18],[629,88,671,33],[629,90,671,35,"user"],[629,94,671,39],[629,95,671,40,"id"],[629,97,671,43],[629,98,671,44],[629,100,672,8],[630,12,673,10,"user_id"],[630,19,673,17],[630,21,673,19,"user"],[630,25,673,23],[630,26,673,24,"id"],[630,28,673,26],[631,12,674,10,"name"],[631,16,674,14],[631,18,674,16,"user"],[631,22,674,20],[631,23,674,21,"name"],[631,27,674,25],[632,12,675,10,"is_active"],[632,21,675,19],[632,23,675,21],[632,27,675,25],[633,12,676,10,"started_at"],[633,22,676,20],[633,24,676,22],[633,28,676,22,"serverTimestamp"],[633,54,676,37],[633,56,676,38],[633,57,676,39],[634,12,677,10,"last_update"],[634,23,677,21],[634,25,677,23],[634,29,677,23,"serverTimestamp"],[634,55,677,38],[634,57,677,39],[634,58,677,40],[635,12,678,10,"latitude"],[635,20,678,18],[635,22,678,20],[635,26,678,24],[636,12,679,10,"longitude"],[636,21,679,19],[636,23,679,21],[636,27,679,25],[637,12,680,10,"accuracy"],[637,20,680,18],[637,22,680,20],[638,10,681,8],[638,11,681,9],[638,13,682,8],[639,12,682,10,"merge"],[639,17,682,15],[639,19,682,17],[640,10,682,22],[640,11,683,6],[640,12,683,7],[642,10,685,6],[643,10,686,6],[643,14,686,12,"interval"],[643,22,686,20],[643,25,686,23,"setInterval"],[643,36,686,34],[643,54,686,34,"_asyncToGenerator2"],[643,72,686,34],[643,73,686,34,"default"],[643,80,686,34],[643,82,686,35],[643,95,686,47],[644,12,687,8],[644,16,687,12],[645,14,688,10],[645,18,688,16,"location"],[645,26,688,24],[645,35,688,33,"Location"],[645,43,688,41],[645,44,688,42,"getCurrentPositionAsync"],[645,67,688,65],[645,68,688,66],[646,16,689,12,"accuracy"],[646,24,689,20],[646,26,689,22,"Location"],[646,34,689,30],[646,35,689,31,"Accuracy"],[646,43,689,39],[646,44,689,40,"High"],[647,14,690,10],[647,15,690,11],[647,16,690,12],[648,14,692,10],[648,18,692,16,"locationData"],[648,30,692,42],[648,33,692,45],[649,16,693,12,"latitude"],[649,24,693,20],[649,26,693,22,"location"],[649,34,693,30],[649,35,693,31,"coords"],[649,41,693,37],[649,42,693,38,"latitude"],[649,50,693,46],[650,16,694,12,"longitude"],[650,25,694,21],[650,27,694,23,"location"],[650,35,694,31],[650,36,694,32,"coords"],[650,42,694,38],[650,43,694,39,"longitude"],[650,52,694,48],[651,16,695,12,"timestamp"],[651,25,695,21],[651,27,695,23,"location"],[651,35,695,31],[651,36,695,32,"timestamp"],[651,45,695,41],[652,16,696,12,"accuracy"],[652,24,696,20],[652,26,696,22,"location"],[652,34,696,30],[652,35,696,31,"coords"],[652,41,696,37],[652,42,696,38,"accuracy"],[652,50,696,46],[652,54,696,50,"undefined"],[653,14,697,10],[653,15,697,11],[654,14,699,10],[654,20,699,16,"processLocationForDistance"],[654,46,699,42],[654,47,699,43,"locationData"],[654,59,699,55],[654,61,699,57,"user"],[654,65,699,61],[654,67,699,63,"id"],[654,69,699,65],[654,73,699,69],[654,77,699,73],[654,78,699,74],[655,14,701,10,"setCurrentLocation"],[655,32,701,28],[655,33,701,29,"locationData"],[655,45,701,41],[655,46,701,42],[657,14,703,10],[658,14,704,10],[658,18,704,14],[659,16,706,12],[659,22,706,18],[659,26,706,18,"setDoc"],[659,43,706,24],[659,45,707,14],[659,49,707,14,"fsDoc"],[659,63,707,19],[659,65,707,20,"db"],[659,77,707,22],[659,79,707,24],[659,94,707,39],[659,96,707,41,"user"],[659,100,707,45],[659,101,707,46,"id"],[659,103,707,49],[659,104,707,50],[659,106,708,14],[660,18,709,16,"latitude"],[660,26,709,24],[660,28,709,26,"locationData"],[660,40,709,38],[660,41,709,39,"latitude"],[660,49,709,47],[661,18,710,16,"longitude"],[661,27,710,25],[661,29,710,27,"locationData"],[661,41,710,39],[661,42,710,40,"longitude"],[661,51,710,49],[662,18,711,16,"accuracy"],[662,26,711,24],[662,28,711,26,"locationData"],[662,40,711,38],[662,41,711,39,"accuracy"],[662,49,711,47],[662,53,711,51],[662,57,711,55],[663,18,712,16,"last_update"],[663,29,712,27],[663,31,712,29],[663,35,712,29,"serverTimestamp"],[663,61,712,44],[663,63,712,45],[663,64,712,46],[664,18,713,16,"timestamp"],[664,27,713,25],[664,29,713,27,"locationData"],[664,41,713,39],[664,42,713,40,"timestamp"],[665,16,714,14],[665,17,714,15],[665,19,715,14],[666,18,715,16,"merge"],[666,23,715,21],[666,25,715,23],[667,16,715,28],[667,17,716,12],[667,18,716,13],[669,16,718,12],[670,16,719,12],[670,20,719,16,"user"],[670,24,719,20],[670,25,719,21,"id"],[670,27,719,23],[670,29,719,25],[671,18,720,14],[671,24,720,20,"storeLiveTrackingData"],[671,45,720,41],[671,46,720,42,"user"],[671,50,720,46],[671,51,720,47,"id"],[671,53,720,49],[671,55,720,51,"locationData"],[671,67,720,63],[671,68,720,64],[672,16,721,12],[674,16,723,12],[675,16,724,12],[675,22,724,18],[675,26,724,18,"addDoc"],[675,43,724,24],[675,45,724,25],[675,49,724,25,"collection"],[675,70,724,35],[675,72,724,36,"db"],[675,84,724,38],[675,86,724,40],[675,97,724,51],[675,98,724,52],[675,100,724,54],[676,18,725,14,"user_id"],[676,25,725,21],[676,27,725,23,"user"],[676,31,725,27],[676,32,725,28,"id"],[676,34,725,30],[677,18,726,14,"latitude"],[677,26,726,22],[677,28,726,24,"locationData"],[677,40,726,36],[677,41,726,37,"latitude"],[677,49,726,45],[678,18,727,14,"longitude"],[678,27,727,23],[678,29,727,25,"locationData"],[678,41,727,37],[678,42,727,38,"longitude"],[678,51,727,47],[679,18,728,14,"timestamp"],[679,27,728,23],[679,29,728,25,"locationData"],[679,41,728,37],[679,42,728,38,"timestamp"],[679,51,728,47],[680,18,729,14,"accuracy"],[680,26,729,22],[680,28,729,24,"locationData"],[680,40,729,36],[680,41,729,37,"accuracy"],[680,49,729,45],[680,53,729,49],[680,57,729,53],[681,18,730,14,"created_at"],[681,28,730,24],[681,30,730,26],[681,34,730,26,"serverTimestamp"],[681,60,730,41],[681,62,730,42],[681,63,730,43],[682,18,731,14,"is_live_tracking"],[682,34,731,30],[682,36,731,32],[683,16,732,12],[683,17,732,13],[683,18,732,14],[684,14,733,10],[684,15,733,11],[684,16,733,12],[684,23,733,19,"err"],[684,26,733,22],[684,28,733,24],[685,16,734,12,"console"],[685,23,734,19],[685,24,734,20,"error"],[685,29,734,25],[685,30,734,26],[685,73,734,69],[685,75,734,71,"err"],[685,78,734,74],[685,79,734,75],[686,14,735,10],[687,12,737,8],[687,13,737,9],[687,14,737,10],[687,21,737,17,"error"],[687,26,737,22],[687,28,737,24],[688,14,738,10,"console"],[688,21,738,17],[688,22,738,18,"error"],[688,27,738,23],[688,28,738,24],[688,58,738,54],[688,60,738,56,"error"],[688,65,738,61],[688,66,738,62],[689,12,739,8],[690,10,740,6],[690,11,740,7],[690,14,740,9],[690,19,740,14],[690,20,740,15],[690,21,740,16],[690,22,740,17],[692,10,742,6,"setLiveTrackingInterval"],[692,33,742,29],[692,34,742,30,"interval"],[692,42,742,38],[692,43,742,39],[693,10,743,6,"setIsTracking"],[693,23,743,19],[693,24,743,20],[693,28,743,24],[693,29,743,25],[694,10,744,6,"setIsLiveTracking"],[694,27,744,23],[694,28,744,24],[694,32,744,28],[694,33,744,29],[695,10,745,6],[695,16,745,12,"AsyncStorage"],[695,37,745,24],[695,38,745,25,"setItem"],[695,45,745,32],[695,46,745,33],[695,58,745,45,"user"],[695,62,745,49],[695,63,745,50,"id"],[695,65,745,52],[695,67,745,54],[695,69,745,56],[695,75,745,62],[695,76,745,63],[696,10,746,6],[696,16,746,12,"AsyncStorage"],[696,37,746,24],[696,38,746,25,"setItem"],[696,45,746,32],[696,46,746,33],[696,62,746,49,"user"],[696,66,746,53],[696,67,746,54,"id"],[696,69,746,56],[696,71,746,58],[696,73,746,60],[696,79,746,66],[696,80,746,67],[697,8,748,4],[697,9,748,5],[697,10,748,6],[697,17,748,13,"error"],[697,22,748,18],[697,24,748,20],[698,10,749,6,"console"],[698,17,749,13],[698,18,749,14,"error"],[698,23,749,19],[698,24,749,20],[698,58,749,54],[698,60,749,56,"error"],[698,65,749,61],[698,66,749,62],[699,10,750,6],[699,16,750,12,"error"],[699,21,750,17],[700,8,751,4],[701,6,752,2],[701,7,752,3],[702,6,752,3],[702,22,643,8,"startUnifiedTracking"],[702,42,643,28,"startUnifiedTracking"],[702,43,643,28],[703,8,643,28],[703,15,643,28,"_ref17"],[703,21,643,28],[703,22,643,28,"apply"],[703,27,643,28],[703,34,643,28,"arguments"],[703,43,643,28],[704,6,643,28],[705,4,643,28],[705,7,752,3],[706,4,754,2],[706,8,754,8,"stopUnifiedTracking"],[706,27,754,27],[707,6,754,27],[707,10,754,27,"_ref19"],[707,16,754,27],[707,23,754,27,"_asyncToGenerator2"],[707,41,754,27],[707,42,754,27,"default"],[707,49,754,27],[707,51,754,30],[707,64,754,57],[708,8,755,4],[708,12,755,8],[708,13,755,9,"user"],[708,17,755,13],[708,19,755,15],[709,8,757,4],[709,12,757,8],[710,10,758,6],[711,10,759,6],[711,14,759,12,"hasStarted"],[711,24,759,22],[711,33,759,31,"Location"],[711,41,759,39],[711,42,759,40,"hasStartedLocationUpdatesAsync"],[711,72,759,70],[711,73,759,71,"LOCATION_TASK_NAME"],[711,91,759,89],[711,92,759,90],[712,10,760,6],[712,14,760,10,"hasStarted"],[712,24,760,20],[712,26,760,22],[713,12,761,8],[713,18,761,14,"Location"],[713,26,761,22],[713,27,761,23,"stopLocationUpdatesAsync"],[713,51,761,47],[713,52,761,48,"LOCATION_TASK_NAME"],[713,70,761,66],[713,71,761,67],[714,10,762,6],[716,10,764,6],[717,10,765,6],[717,16,765,12],[717,20,765,12,"setDoc"],[717,37,765,18],[717,39,766,8],[717,43,766,8,"fsDoc"],[717,57,766,13],[717,59,766,14,"db"],[717,71,766,16],[717,73,766,18],[717,88,766,33],[717,90,766,35,"user"],[717,94,766,39],[717,95,766,40,"id"],[717,97,766,43],[717,98,766,44],[717,100,767,8],[718,12,767,10,"is_active"],[718,21,767,19],[718,23,767,21],[718,28,767,26],[719,12,767,28,"stopped_at"],[719,22,767,38],[719,24,767,40],[719,28,767,40,"serverTimestamp"],[719,54,767,55],[719,56,767,56],[720,10,767,58],[720,11,767,59],[720,13,768,8],[721,12,768,10,"merge"],[721,17,768,15],[721,19,768,17],[722,10,768,22],[722,11,769,6],[722,12,769,7],[724,10,771,6],[725,10,772,6],[725,14,772,10,"liveTrackingInterval"],[725,34,772,30],[725,36,772,32],[726,12,773,8,"clearInterval"],[726,25,773,21],[726,26,773,22,"liveTrackingInterval"],[726,46,773,42],[726,47,773,43],[727,12,774,8,"setLiveTrackingInterval"],[727,35,774,31],[727,36,774,32],[727,40,774,36],[727,41,774,37],[728,10,775,6],[729,10,777,6,"setIsTracking"],[729,23,777,19],[729,24,777,20],[729,29,777,25],[729,30,777,26],[730,10,778,6,"setIsLiveTracking"],[730,27,778,23],[730,28,778,24],[730,33,778,29],[730,34,778,30],[731,10,779,6],[731,16,779,12,"AsyncStorage"],[731,37,779,24],[731,38,779,25,"setItem"],[731,45,779,32],[731,46,779,33],[731,58,779,45,"user"],[731,62,779,49],[731,63,779,50,"id"],[731,65,779,52],[731,67,779,54],[731,69,779,56],[731,76,779,63],[731,77,779,64],[732,10,780,6],[732,16,780,12,"AsyncStorage"],[732,37,780,24],[732,38,780,25,"setItem"],[732,45,780,32],[732,46,780,33],[732,62,780,49,"user"],[732,66,780,53],[732,67,780,54,"id"],[732,69,780,56],[732,71,780,58],[732,73,780,60],[732,80,780,67],[732,81,780,68],[733,8,782,4],[733,9,782,5],[733,10,782,6],[733,17,782,13,"error"],[733,22,782,18],[733,24,782,20],[734,10,783,6,"console"],[734,17,783,13],[734,18,783,14,"error"],[734,23,783,19],[734,24,783,20],[734,58,783,54],[734,60,783,56,"error"],[734,65,783,61],[734,66,783,62],[735,10,784,6],[735,16,784,12,"error"],[735,21,784,17],[736,8,785,4],[737,6,786,2],[737,7,786,3],[738,6,786,3],[738,22,754,8,"stopUnifiedTracking"],[738,41,754,27,"stopUnifiedTracking"],[738,42,754,27],[739,8,754,27],[739,15,754,27,"_ref19"],[739,21,754,27],[739,22,754,27,"apply"],[739,27,754,27],[739,34,754,27,"arguments"],[739,43,754,27],[740,6,754,27],[741,4,754,27],[741,7,786,3],[743,4,788,2],[744,4,789,2],[744,8,789,8,"startLiveTracking"],[744,25,789,25],[745,6,789,25],[745,10,789,25,"_ref20"],[745,16,789,25],[745,23,789,25,"_asyncToGenerator2"],[745,41,789,25],[745,42,789,25,"default"],[745,49,789,25],[745,51,789,28],[745,64,789,55],[746,8,790,4],[746,15,790,11,"startUnifiedTracking"],[746,35,790,31],[746,36,790,32],[746,37,790,33],[747,6,791,2],[747,7,791,3],[748,6,791,3],[748,22,789,8,"startLiveTracking"],[748,39,789,25,"startLiveTracking"],[748,40,789,25],[749,8,789,25],[749,15,789,25,"_ref20"],[749,21,789,25],[749,22,789,25,"apply"],[749,27,789,25],[749,34,789,25,"arguments"],[749,43,789,25],[750,6,789,25],[751,4,789,25],[751,7,791,3],[752,4,793,2],[752,8,793,8,"stopLiveTracking"],[752,24,793,24],[753,6,793,24],[753,10,793,24,"_ref21"],[753,16,793,24],[753,23,793,24,"_asyncToGenerator2"],[753,41,793,24],[753,42,793,24,"default"],[753,49,793,24],[753,51,793,27],[753,64,793,54],[754,8,794,4],[754,15,794,11,"stopUnifiedTracking"],[754,34,794,30],[754,35,794,31],[754,36,794,32],[755,6,795,2],[755,7,795,3],[756,6,795,3],[756,22,793,8,"stopLiveTracking"],[756,38,793,24,"stopLiveTracking"],[756,39,793,24],[757,8,793,24],[757,15,793,24,"_ref21"],[757,21,793,24],[757,22,793,24,"apply"],[757,27,793,24],[757,34,793,24,"arguments"],[757,43,793,24],[758,6,793,24],[759,4,793,24],[759,7,795,3],[760,4,797,2],[760,8,797,8,"getLiveTrackingUsers"],[760,28,797,28],[760,31,797,31],[760,35,797,31,"useCallback"],[760,53,797,42],[760,72,797,42,"_asyncToGenerator2"],[760,90,797,42],[760,91,797,42,"default"],[760,98,797,42],[760,100,797,43],[760,113,797,70],[761,6,798,4],[761,10,798,8],[761,11,798,9,"user"],[761,15,798,13],[761,19,798,17,"user"],[761,23,798,21],[761,24,798,22,"role"],[761,28,798,26],[761,33,798,31],[761,40,798,38],[761,42,798,40],[762,6,800,4],[762,10,800,8],[763,8,801,6],[764,8,802,6],[764,12,802,12,"snap"],[764,16,802,16],[764,25,802,25],[764,29,802,25,"getDocs"],[764,47,802,32],[764,49,802,33],[764,53,802,33,"collection"],[764,74,802,43],[764,76,802,44,"db"],[764,88,802,46],[764,90,802,48],[764,105,802,63],[764,106,802,64],[764,107,802,65],[765,8,803,6],[765,12,803,12,"allUsers"],[765,20,803,20],[765,23,803,23,"snap"],[765,27,803,27],[765,28,803,28,"docs"],[765,32,803,32],[765,33,803,33,"map"],[765,36,803,36],[765,37,803,37,"d"],[765,38,803,38],[765,42,803,42,"d"],[765,43,803,43],[765,44,803,44,"data"],[765,48,803,48],[765,49,803,49],[765,50,803,57],[765,51,803,58],[767,8,805,6],[768,8,806,6],[768,12,806,12,"twoMinutesAgo"],[768,25,806,25],[768,28,806,28,"Date"],[768,32,806,32],[768,33,806,33,"now"],[768,36,806,36],[768,37,806,37],[768,38,806,38],[768,41,806,41],[768,42,806,42],[768,45,806,45],[768,47,806,47],[768,50,806,50],[768,54,806,54],[769,8,807,6],[769,12,807,12,"activeUsers"],[769,23,807,23],[769,26,807,26,"allUsers"],[769,34,807,34],[769,35,807,35,"filter"],[769,41,807,41],[769,42,807,42,"u"],[769,43,807,43],[769,47,807,47],[770,10,808,8],[770,14,808,12],[770,15,808,13,"u"],[770,16,808,14],[770,17,808,15,"is_active"],[770,26,808,24],[770,30,808,28],[770,31,808,29,"u"],[770,32,808,30],[770,33,808,31,"latitude"],[770,41,808,39],[770,45,808,43],[770,46,808,44,"u"],[770,47,808,45],[770,48,808,46,"longitude"],[770,57,808,55],[770,59,808,57],[770,66,808,64],[770,71,808,69],[771,10,810,8],[771,14,810,14,"lastUpdate"],[771,24,810,24],[771,27,810,27,"u"],[771,28,810,28],[771,29,810,29,"last_update"],[771,40,810,40],[771,52,810,52,"Timestamp"],[771,72,810,61],[771,75,811,12,"u"],[771,76,811,13],[771,77,811,14,"last_update"],[771,88,811,25],[771,89,811,26,"toMillis"],[771,97,811,34],[771,98,811,35],[771,99,811,36],[771,102,812,13,"u"],[771,103,812,14],[771,104,812,15,"last_update"],[771,115,812,26],[771,118,812,29],[771,122,812,33,"Date"],[771,126,812,37],[771,127,812,38,"u"],[771,128,812,39],[771,129,812,40,"last_update"],[771,140,812,51],[771,141,812,52],[771,142,812,53,"getTime"],[771,149,812,60],[771,150,812,61],[771,151,812,62],[771,154,812,65],[771,155,812,67],[772,10,814,8],[772,17,814,15,"lastUpdate"],[772,27,814,25],[772,30,814,28,"twoMinutesAgo"],[772,43,814,41],[773,8,815,6],[773,9,815,7],[773,10,815,8],[774,8,817,6],[774,12,817,12,"users"],[774,17,817,17],[774,20,817,20,"activeUsers"],[774,31,817,31],[774,32,817,32,"map"],[774,35,817,35],[774,36,817,36,"u"],[774,37,817,37],[774,42,817,42],[775,10,818,8,"userId"],[775,16,818,14],[775,18,818,16,"u"],[775,19,818,17],[775,20,818,18,"user_id"],[775,27,818,25],[776,10,819,8,"name"],[776,14,819,12],[776,16,819,14,"u"],[776,17,819,15],[776,18,819,16,"name"],[776,22,819,20],[777,10,820,8,"location"],[777,18,820,16],[777,20,820,18],[778,12,821,10,"latitude"],[778,20,821,18],[778,22,821,20,"u"],[778,23,821,21],[778,24,821,22,"latitude"],[778,32,821,30],[779,12,822,10,"longitude"],[779,21,822,19],[779,23,822,21,"u"],[779,24,822,22],[779,25,822,23,"longitude"],[779,34,822,32],[780,12,823,10,"timestamp"],[780,21,823,19],[780,23,823,21,"u"],[780,24,823,22],[780,25,823,23,"timestamp"],[780,34,823,32],[781,12,824,10,"accuracy"],[781,20,824,18],[781,22,824,20,"u"],[781,23,824,21],[781,24,824,22,"accuracy"],[781,32,824,30],[781,36,824,34,"undefined"],[782,10,825,8],[782,11,825,9],[783,10,826,8,"lastUpdate"],[783,20,826,18],[783,22,826,20,"u"],[783,23,826,21],[783,24,826,22,"last_update"],[783,35,826,33],[783,47,826,45,"Timestamp"],[783,67,826,54],[783,70,827,12,"u"],[783,71,827,13],[783,72,827,14,"last_update"],[783,83,827,25],[783,84,827,26,"toMillis"],[783,92,827,34],[783,93,827,35],[783,94,827,36],[783,97,828,13,"u"],[783,98,828,14],[783,99,828,15,"last_update"],[783,110,828,26],[783,113,828,29],[783,117,828,33,"Date"],[783,121,828,37],[783,122,828,38,"u"],[783,123,828,39],[783,124,828,40,"last_update"],[783,135,828,51],[783,136,828,52],[783,137,828,53,"getTime"],[783,144,828,60],[783,145,828,61],[783,146,828,62],[783,149,828,65,"Date"],[783,153,828,69],[783,154,828,70,"now"],[783,157,828,73],[783,158,828,74],[784,8,829,6],[784,9,829,7],[784,10,829,8],[784,11,829,9],[785,8,831,6,"setLiveUsers"],[785,20,831,18],[785,21,831,19,"users"],[785,26,831,24],[785,27,831,25],[786,6,832,4],[786,7,832,5],[786,8,832,6],[786,15,832,13,"error"],[786,20,832,18],[786,22,832,20],[787,8,833,6,"console"],[787,15,833,13],[787,16,833,14,"error"],[787,21,833,19],[787,22,833,20],[787,58,833,56],[787,60,833,58,"error"],[787,65,833,63],[787,66,833,64],[788,8,834,6],[789,8,835,6,"setLiveUsers"],[789,20,835,18],[789,21,835,19],[789,23,835,21],[789,24,835,22],[790,6,836,4],[791,4,837,2],[791,5,837,3],[791,8,837,5],[791,9,837,6,"user"],[791,13,837,10],[791,14,837,11],[791,15,837,12],[793,4,839,2],[794,4,840,2],[794,8,840,2,"useEffect"],[794,24,840,11],[794,26,840,12],[794,32,840,18],[795,6,841,4],[795,10,841,10,"checkLiveTrackingStatus"],[795,33,841,33],[796,8,841,33],[796,12,841,33,"_ref23"],[796,18,841,33],[796,25,841,33,"_asyncToGenerator2"],[796,43,841,33],[796,44,841,33,"default"],[796,51,841,33],[796,53,841,36],[796,66,841,48],[797,10,842,6],[797,14,842,10],[797,15,842,11,"user"],[797,19,842,15],[797,21,842,17],[798,10,844,6],[798,14,844,10],[799,12,845,8],[799,16,845,14,"liveTrackingStatus"],[799,34,845,32],[799,43,845,41,"AsyncStorage"],[799,64,845,53],[799,65,845,54,"getItem"],[799,72,845,61],[799,73,845,62],[799,89,845,78,"user"],[799,93,845,82],[799,94,845,83,"id"],[799,96,845,85],[799,98,845,87],[799,99,845,88],[800,12,846,8],[800,16,846,12,"liveTrackingStatus"],[800,34,846,30],[800,39,846,35],[800,45,846,41],[800,47,846,43],[801,14,847,10],[802,14,848,10],[802,20,848,16,"startUnifiedTracking"],[802,40,848,36],[802,41,848,37],[802,42,848,38],[803,12,849,8],[804,10,850,6],[804,11,850,7],[804,12,850,8],[804,19,850,15,"error"],[804,24,850,20],[804,26,850,22],[805,12,851,8,"console"],[805,19,851,15],[805,20,851,16,"error"],[805,25,851,21],[805,26,851,22],[805,64,851,60],[805,66,851,62,"error"],[805,71,851,67],[805,72,851,68],[806,10,852,6],[807,8,853,4],[807,9,853,5],[808,8,853,5],[808,24,841,10,"checkLiveTrackingStatus"],[808,47,841,33,"checkLiveTrackingStatus"],[808,48,841,33],[809,10,841,33],[809,17,841,33,"_ref23"],[809,23,841,33],[809,24,841,33,"apply"],[809,29,841,33],[809,36,841,33,"arguments"],[809,45,841,33],[810,8,841,33],[811,6,841,33],[811,9,853,5],[812,6,855,4,"checkLiveTrackingStatus"],[812,29,855,27],[812,30,855,28],[812,31,855,29],[814,6,857,4],[815,6,858,4],[815,10,858,8,"user"],[815,14,858,12],[815,16,858,14,"role"],[815,20,858,18],[815,25,858,23],[815,32,858,30],[815,34,858,32],[816,8,859,6,"getLiveTrackingUsers"],[816,28,859,26],[816,29,859,27],[816,30,859,28],[817,8,860,6],[817,12,860,12,"adminInterval"],[817,25,860,25],[817,28,860,28,"setInterval"],[817,39,860,39],[817,40,860,40,"getLiveTrackingUsers"],[817,60,860,60],[817,62,860,62],[817,67,860,67],[817,68,860,68],[817,69,860,69],[817,70,860,70],[818,8,861,6],[818,15,861,13],[818,21,861,19,"clearInterval"],[818,34,861,32],[818,35,861,33,"adminInterval"],[818,48,861,46],[818,49,861,47],[819,6,862,4],[820,4,863,2],[820,5,863,3],[820,7,863,5],[820,8,863,6,"user"],[820,12,863,10],[820,14,863,12,"getLiveTrackingUsers"],[820,34,863,32],[820,35,863,33],[820,36,863,34],[822,4,865,2],[823,4,866,2],[823,8,866,2,"useEffect"],[823,24,866,11],[823,26,866,12],[823,32,866,18],[824,6,867,4],[824,13,867,11],[824,19,867,17],[825,8,868,6],[825,12,868,10,"liveTrackingInterval"],[825,32,868,30],[825,34,868,32],[826,10,869,8,"clearInterval"],[826,23,869,21],[826,24,869,22,"liveTrackingInterval"],[826,44,869,42],[826,45,869,43],[827,8,870,6],[828,6,871,4],[828,7,871,5],[829,4,872,2],[829,5,872,3],[829,7,872,5],[829,8,872,6,"liveTrackingInterval"],[829,28,872,26],[829,29,872,27],[829,30,872,28],[831,4,874,2],[832,4,875,2],[832,8,875,2,"useEffect"],[832,24,875,11],[832,26,875,12],[832,32,875,18],[833,6,876,4],[833,10,876,8],[833,11,876,9,"user"],[833,15,876,13],[833,17,876,15],[834,6,878,4],[834,10,878,10,"distanceRefreshInterval"],[834,33,878,33],[834,36,878,36,"setInterval"],[834,47,878,47],[834,48,878,48],[834,54,878,54],[835,8,879,6,"refreshTotalDistanceFromFirebase"],[835,40,879,38],[835,41,879,39],[835,42,879,40],[836,6,880,4],[836,7,880,5],[836,9,880,7],[836,14,880,12],[836,15,880,13],[836,16,880,14],[836,17,880,15],[838,6,882,4],[838,13,882,11],[838,19,882,17,"clearInterval"],[838,32,882,30],[838,33,882,31,"distanceRefreshInterval"],[838,56,882,54],[838,57,882,55],[839,4,883,2],[839,5,883,3],[839,7,883,5],[839,8,883,6,"user"],[839,12,883,10],[839,13,883,11],[839,14,883,12],[840,4,885,2],[840,24,886,4],[840,28,886,4,"_jsxDevRuntime"],[840,42,886,4],[840,43,886,4,"jsxDEV"],[840,49,886,4],[840,51,886,5,"LocationContext"],[840,66,886,20],[840,67,886,21,"Provider"],[840,75,886,29],[841,6,887,6,"value"],[841,11,887,11],[841,13,887,13],[842,8,888,8,"currentLocation"],[842,23,888,23],[843,8,889,8,"isTracking"],[843,18,889,18],[844,8,890,8,"totalDistance"],[844,21,890,21],[845,8,891,8,"startTracking"],[845,21,891,21],[846,8,892,8,"stopTracking"],[846,20,892,20],[847,8,893,8,"getLocationHistory"],[847,26,893,26],[848,8,894,8],[849,8,895,8,"startUnifiedTracking"],[849,28,895,28],[850,8,896,8,"stopUnifiedTracking"],[850,27,896,27],[851,8,897,8],[852,8,898,8,"startLiveTracking"],[852,25,898,25],[853,8,899,8,"stopLiveTracking"],[853,24,899,24],[854,8,900,8,"isLiveTracking"],[854,22,900,22],[855,8,901,8,"liveUsers"],[855,17,901,17],[856,8,902,8,"getLiveTrackingUsers"],[856,28,902,28],[857,8,903,8,"refreshTotalDistance"],[858,6,904,6],[858,7,904,8],[859,6,904,8,"children"],[859,14,904,8],[859,16,906,7,"children"],[860,4,906,15],[861,6,906,15,"fileName"],[861,14,906,15],[861,16,906,15,"_jsxFileName"],[861,28,906,15],[862,6,906,15,"lineNumber"],[862,16,906,15],[863,6,906,15,"columnNumber"],[863,18,906,15],[864,4,906,15],[864,11,907,30],[864,12,907,31],[865,2,909,0],[865,3,909,1],[866,2,909,2,"exports"],[866,9,909,2],[866,10,909,2,"LocationProvider"],[866,26,909,2],[866,29,909,2,"LocationProvider"],[866,45,909,2],[867,2,909,2,"_s2"],[867,5,909,2],[867,6,438,13,"LocationProvider"],[867,22,438,62],[868,4,438,62],[868,12,452,19,"useAuth"],[868,32,452,26],[869,2,452,26],[870,2,452,26,"_c"],[870,4,452,26],[870,7,438,13,"LocationProvider"],[870,23,438,62],[871,2,438,62],[871,6,438,62,"_default"],[871,14,438,62],[871,17,438,62,"exports"],[871,24,438,62],[871,25,438,62,"default"],[871,32,438,62],[871,35,910,15,"LocationProvider"],[871,51,910,31],[872,2,910,31],[872,6,910,31,"_c"],[872,8,910,31],[873,2,910,31,"$RefreshReg$"],[873,14,910,31],[873,15,910,31,"_c"],[873,17,910,31],[874,0,910,31],[874,3]],"functionMap":{"names":["<global>","calculateStraightLineDistance","resolveGoogleApiKey","getStoredUser","getStorageKeysForUser","getDrivingDistanceKm","getCurrentDateString","storeTravelledDistance","storeLiveTrackingData","setDistanceUpdateListener","notifyDistanceUpdate","processLocationForDistance","<anonymous>","useLocation","TaskManager.defineTask$argument_1","LocationProvider","useEffect$argument_0","listener","checkTrackingStatus","getCurrentLocation","refreshTotalDistanceFromFirebase","calculateTotalDistance","refreshTotalDistance","startTracking","stopTracking","getLocationHistory","startUnifiedTracking","setInterval$argument_0","stopUnifiedTracking","startLiveTracking","stopLiveTracking","getLiveTrackingUsers","snap.docs.map$argument_0","allUsers.filter$argument_0","activeUsers.map$argument_0","checkLiveTrackingStatus"],"mappings":"AAA;sCCuB;CDW;4BEE;CFQ;sBGkB;CHQ;8BIE;EJG;6BKE;CLqC;6BMG;CNG;+BOG;CPsD;8BQG;CR8D;kCSa;CTE;6BUE;CVM;mCWE;+CCK;KDG;CXoD;2Ba8B;CbM;2CcE;CdiE;iEeO;YCgB;6CCC;KDE;WJE,qCI;GDC;YCE;GDI;8BGE;GHgB;6BIE;GJoB;2CKE;GL8B;iCME;GN6B;+BOE;GPE;wBQE;GR+B;uBSE;GTe;6BUE;GVe;+BWG;mCC2C;ODsD;GXY;8BaE;GbgC;4BcG;GdE;2BeE;GfE;2CgBE;qCCM,oBD;0CEI;OFQ;oCGE;QHY;GhBQ;YCG;oCmBC;KnBY;aJQ,kCI;GDE;YCG;WJC;KII;GDC;YCG;gDWG;KXE;WJE,4CI;GDC;Cf0B"}},"type":"js/module"}]}