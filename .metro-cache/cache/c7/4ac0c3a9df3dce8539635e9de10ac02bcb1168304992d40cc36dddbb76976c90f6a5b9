{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"]}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"]}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":102,"index":102}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"]}},{"name":"expo-location","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":104},"end":{"line":2,"column":42,"index":146}}],"key":"GNP7AGCKsBRUhlnTZ4lIPpbkT9E=","exportNames":["*"]}},{"name":"expo-task-manager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":148},"end":{"line":3,"column":49,"index":197}}],"key":"bYMruywqSxptqIFJf3NLT25O6Io=","exportNames":["*"]}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":199},"end":{"line":4,"column":69,"index":268}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"]}},{"name":"./AuthContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":270},"end":{"line":5,"column":40,"index":310}}],"key":"YmpzODa+dVz64UAAYTI+RwJeEt0=","exportNames":["*"]}},{"name":"../firebase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":312},"end":{"line":6,"column":33,"index":345}}],"key":"+wmKgdsSWUSr7xrYhqzXqBvu5fU=","exportNames":["*"]}},{"name":"firebase/firestore","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":347},"end":{"line":18,"column":28,"index":519}}],"key":"n8ZdwTgQb9oFW01pH/SKxYwC/nA=","exportNames":["*"]}},{"name":"../config/env","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":521},"end":{"line":19,"column":83,"index":604}}],"key":"RGB4LNLgNgEtjcVNHbEAgFn5Y3M=","exportNames":["*"]}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0]);\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useLocation = exports.default = exports.LocationProvider = undefined;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1]));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2]));\n  var _react = _interopRequireWildcard(require(_dependencyMap[3]));\n  var Location = _interopRequireWildcard(require(_dependencyMap[4]));\n  var TaskManager = _interopRequireWildcard(require(_dependencyMap[5]));\n  var _asyncStorage = _interopRequireDefault(require(_dependencyMap[6]));\n  var _AuthContext = require(_dependencyMap[7]);\n  var _firebase = require(_dependencyMap[8]);\n  var _firestore = require(_dependencyMap[9]);\n  var _env = require(_dependencyMap[10]);\n  var _jsxRuntime = require(_dependencyMap[11]);\n  function _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\n  var LOCATION_TASK_NAME = 'background-location-task';\n\n  // Helper function to calculate straight-line distance between two points (Haversine formula)\n\n  var resolveGoogleApiKey = () => {\n    var envKey = undefined?.trim();\n    if (envKey) {\n      return envKey;\n    }\n    var fallbackKey = _env.GOOGLE_MAPS_API_KEY?.trim();\n    return fallbackKey || undefined;\n  };\n\n  // Google Distance Matrix API based distance calculation\n  var GOOGLE_API_KEY = resolveGoogleApiKey();\n  if (!GOOGLE_API_KEY) {\n    console.warn('Google Maps API key is not configured; distance tracking will be disabled.');\n  }\n  var DEFAULT_HISTORY_KEY = 'locationHistory';\n  var DEFAULT_TOTAL_KEY = 'totalDistance';\n  var HISTORY_LIMIT = 1000;\n  var getStoredUser = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var userStr = yield _asyncStorage.default.getItem('user');\n        return userStr ? JSON.parse(userStr) : null;\n      } catch (error) {\n        console.warn('Unable to read stored user for distance tracking:', error);\n        return null;\n      }\n    });\n    return function getStoredUser() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getStorageKeysForUser = userId => ({\n    history: userId ? `${DEFAULT_HISTORY_KEY}_${userId}` : DEFAULT_HISTORY_KEY,\n    total: userId ? `${DEFAULT_TOTAL_KEY}_${userId}` : DEFAULT_TOTAL_KEY\n  });\n  var getDrivingDistanceKm = /*#__PURE__*/function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* (originLat, originLng, destLat, destLng) {\n      if (!GOOGLE_API_KEY) {\n        console.warn('Google Distance API is not configured; skipping distance calculation.');\n        return null;\n      }\n      var url = `https://maps.googleapis.com/maps/api/distancematrix/json?units=metric&origins=${encodeURIComponent(`${originLat},${originLng}`)}&destinations=${encodeURIComponent(`${destLat},${destLng}`)}&mode=driving&key=${GOOGLE_API_KEY}`;\n      try {\n        var res = yield fetch(url);\n        if (!res.ok) {\n          console.warn(`Google Distance API request failed: ${res.status} ${res.statusText}`);\n          return null;\n        }\n        var data = yield res.json();\n        var el = data?.rows?.[0]?.elements?.[0];\n        if (el?.status === 'OK' && el?.distance?.value != null) {\n          var distanceKm = el.distance.value / 1000; // meters to km\n          console.log(`Distance calculated: ${distanceKm.toFixed(3)} km (Google API)`);\n          return distanceKm;\n        } else {\n          console.warn(`Google Distance API error: ${el?.status || 'Unknown error'}`);\n          return null;\n        }\n      } catch (error) {\n        console.warn('Google Distance API request failed:', error);\n        return null;\n      }\n    });\n    return function getDrivingDistanceKm(_x, _x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  // Helper function to get current date string (YYYY-MM-DD)\n  var getCurrentDateString = () => {\n    var now = new Date();\n    return now.toISOString().split('T')[0];\n  };\n\n  // Helper function to store travelled distance in Firebase\n  var storeTravelledDistance = /*#__PURE__*/function () {\n    var _ref3 = (0, _asyncToGenerator2.default)(function* (userId, distanceKm) {\n      var currentDate = getCurrentDateString();\n      var docId = `${currentDate}_${userId}`;\n      try {\n        var travelledRef = (0, _firestore.doc)(_firebase.db, 'travelled', docId);\n\n        // Try to get the existing document first\n        try {\n          var existingSnapshot = yield (0, _firestore.getDocs)((0, _firestore.query)((0, _firestore.collection)(_firebase.db, 'travelled'), (0, _firestore.where)('current_date', '==', currentDate), (0, _firestore.where)('user_id', '==', userId)));\n          if (!existingSnapshot.empty) {\n            // Update existing document\n            var existingData = existingSnapshot.docs[0].data();\n            var newTotalDistance = (existingData.travelled_distance_kms || 0) + distanceKm;\n            yield (0, _firestore.updateDoc)(existingSnapshot.docs[0].ref, {\n              travelled_distance_kms: newTotalDistance,\n              updated_at: (0, _firestore.serverTimestamp)()\n            });\n            console.log(`Updated daily distance for ${userId}: ${newTotalDistance.toFixed(2)} km`);\n          } else {\n            // Create new document\n            yield (0, _firestore.setDoc)(travelledRef, {\n              current_date: currentDate,\n              user_id: userId,\n              travelled_distance_kms: distanceKm,\n              created_at: (0, _firestore.serverTimestamp)(),\n              updated_at: (0, _firestore.serverTimestamp)()\n            });\n            console.log(`Created new daily distance record for ${userId}: ${distanceKm.toFixed(2)} km`);\n          }\n        } catch (queryError) {\n          console.log('Query failed, trying direct document creation:', queryError);\n          // Fallback: try to create/update the document directly\n          yield (0, _firestore.setDoc)(travelledRef, {\n            current_date: currentDate,\n            user_id: userId,\n            travelled_distance_kms: distanceKm,\n            created_at: (0, _firestore.serverTimestamp)(),\n            updated_at: (0, _firestore.serverTimestamp)()\n          }, {\n            merge: true\n          });\n          console.log(`Created/merged daily distance record for ${userId}: ${distanceKm.toFixed(2)} km`);\n        }\n      } catch (error) {\n        console.error('Error storing travelled distance:', error);\n      }\n    });\n    return function storeTravelledDistance(_x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  // Helper function to store live tracking data\n  var storeLiveTrackingData = /*#__PURE__*/function () {\n    var _ref4 = (0, _asyncToGenerator2.default)(function* (userId, locationData) {\n      var currentDate = getCurrentDateString();\n      var docId = `${currentDate}_${userId}`;\n      try {\n        var liveTrackingRef = (0, _firestore.doc)(_firebase.db, 'live_tracking_daily', docId);\n        var timestamp = Date.now();\n        var locationPoint = {\n          lat: locationData.latitude,\n          lng: locationData.longitude,\n          timestamp: timestamp,\n          accuracy: locationData.accuracy || null\n        };\n\n        // Try to get the existing document first\n        try {\n          var existingSnapshot = yield (0, _firestore.getDocs)((0, _firestore.query)((0, _firestore.collection)(_firebase.db, 'live_tracking_daily'), (0, _firestore.where)('current_date', '==', currentDate), (0, _firestore.where)('user_id', '==', userId)));\n          if (!existingSnapshot.empty) {\n            // Update existing document - append to locations array\n            var existingData = existingSnapshot.docs[0].data();\n            var existingLocations = existingData.locations || [];\n            yield (0, _firestore.updateDoc)(existingSnapshot.docs[0].ref, {\n              locations: [...existingLocations, locationPoint],\n              last_updated: (0, _firestore.serverTimestamp)()\n            });\n            console.log(`Updated live tracking data for ${userId} on ${currentDate} (${existingLocations.length + 1} points)`);\n          } else {\n            // Create new document\n            yield (0, _firestore.setDoc)(liveTrackingRef, {\n              current_date: currentDate,\n              user_id: userId,\n              locations: [locationPoint],\n              created_at: (0, _firestore.serverTimestamp)(),\n              last_updated: (0, _firestore.serverTimestamp)()\n            });\n            console.log(`Created new live tracking record for ${userId} on ${currentDate}`);\n          }\n        } catch (queryError) {\n          console.log('Query failed, trying direct document creation:', queryError);\n          // Fallback: try to create/update the document directly using merge\n          yield (0, _firestore.setDoc)(liveTrackingRef, {\n            current_date: currentDate,\n            user_id: userId,\n            locations: [locationPoint],\n            created_at: (0, _firestore.serverTimestamp)(),\n            last_updated: (0, _firestore.serverTimestamp)()\n          }, {\n            merge: true\n          });\n          console.log(`Created/merged live tracking data for ${userId} on ${currentDate}`);\n        }\n      } catch (error) {\n        console.error('Error storing live tracking data:', error);\n      }\n    });\n    return function storeLiveTrackingData(_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var distanceUpdateListener = null;\n  var setDistanceUpdateListener = listener => {\n    distanceUpdateListener = listener;\n  };\n  var notifyDistanceUpdate = newTotal => {\n    try {\n      distanceUpdateListener?.(newTotal);\n    } catch (listenerError) {\n      console.error('Failed to notify distance update listener:', listenerError);\n    }\n  };\n  var processLocationForDistance = /*#__PURE__*/function () {\n    var _ref5 = (0, _asyncToGenerator2.default)(function* (locationData, userIdHint) {\n      try {\n        var storedUserId = userIdHint ?? (yield (0, _asyncToGenerator2.default)(function* () {\n          var storedUser = yield getStoredUser();\n          return storedUser?.id ?? null;\n        })());\n        var _getStorageKeysForUse = getStorageKeysForUser(storedUserId),\n          historyKey = _getStorageKeysForUse.history,\n          totalKey = _getStorageKeysForUse.total;\n        var existingData = yield _asyncStorage.default.getItem(historyKey);\n        var locationHistory = [];\n        if (existingData) {\n          try {\n            locationHistory = JSON.parse(existingData);\n          } catch (parseError) {\n            console.warn('Stored location history was corrupted; resetting history.', parseError);\n            locationHistory = [];\n          }\n        }\n        if (locationHistory.length > 0) {\n          var prevLocation = locationHistory[locationHistory.length - 1];\n          var hasMeaningfulMovement = Math.abs(prevLocation.latitude - locationData.latitude) > 1e-5 || Math.abs(prevLocation.longitude - locationData.longitude) > 1e-5;\n          if (hasMeaningfulMovement) {\n            var distanceKm = yield getDrivingDistanceKm(prevLocation.latitude, prevLocation.longitude, locationData.latitude, locationData.longitude);\n            if (distanceKm != null && Number.isFinite(distanceKm)) {\n              var currentTotalStr = yield _asyncStorage.default.getItem(totalKey);\n              var currentTotal = currentTotalStr ? parseFloat(currentTotalStr) : 0;\n              var _newTotal = currentTotal + distanceKm;\n              yield _asyncStorage.default.setItem(totalKey, _newTotal.toString());\n              notifyDistanceUpdate(_newTotal);\n            } else {\n              console.warn('Google Distance API failed or returned invalid data; distance not accumulated');\n            }\n          }\n        }\n        locationHistory.push(locationData);\n        if (locationHistory.length > HISTORY_LIMIT) {\n          locationHistory.splice(0, locationHistory.length - HISTORY_LIMIT);\n        }\n        yield _asyncStorage.default.setItem(historyKey, JSON.stringify(locationHistory));\n      } catch (error) {\n        console.error('Error processing location for distance:', error);\n      }\n    });\n    return function processLocationForDistance(_x9, _x0) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var LocationContext = /*#__PURE__*/(0, _react.createContext)(undefined);\n  var useLocation = () => {\n    var context = (0, _react.useContext)(LocationContext);\n    if (!context) {\n      throw new Error('useLocation must be used within a LocationProvider');\n    }\n    return context;\n  };\n  exports.useLocation = useLocation;\n  TaskManager.defineTask(LOCATION_TASK_NAME, /*#__PURE__*/function () {\n    var _ref8 = (0, _asyncToGenerator2.default)(function* (_ref7) {\n      var data = _ref7.data,\n        error = _ref7.error;\n      if (error) {\n        console.error('Background location task error:', error);\n        return;\n      }\n      if (data) {\n        var _ref9 = data,\n          locations = _ref9.locations;\n        console.log('Received new locations', locations);\n        for (var location of locations) {\n          var locationData = {\n            latitude: location.coords.latitude,\n            longitude: location.coords.longitude,\n            timestamp: location.timestamp,\n            accuracy: location.coords.accuracy || undefined\n          };\n          try {\n            var storedUser = yield getStoredUser();\n            yield processLocationForDistance(locationData, storedUser?.id ?? null);\n            if (!storedUser?.id) {\n              continue;\n            }\n\n            // Persist to Firestore (locations history and optional live tracking doc)\n            try {\n              var historyDoc = {\n                user_id: storedUser.id,\n                latitude: locationData.latitude,\n                longitude: locationData.longitude,\n                timestamp: locationData.timestamp,\n                accuracy: locationData.accuracy ?? null,\n                created_at: (0, _firestore.serverTimestamp)(),\n                is_live_tracking: true\n              };\n              yield (0, _firestore.addDoc)((0, _firestore.collection)(_firebase.db, 'locations'), historyDoc);\n\n              // Update live tracking document if active\n              var liveStatus = yield _asyncStorage.default.getItem(`liveTracking_${storedUser.id}`);\n              if (liveStatus === 'true') {\n                yield (0, _firestore.setDoc)((0, _firestore.doc)(_firebase.db, 'live_tracking', storedUser.id), {\n                  user_id: storedUser.id,\n                  name: storedUser.name,\n                  latitude: locationData.latitude,\n                  longitude: locationData.longitude,\n                  accuracy: locationData.accuracy ?? null,\n                  last_update: (0, _firestore.serverTimestamp)(),\n                  timestamp: locationData.timestamp\n                }, {\n                  merge: true\n                });\n              }\n            } catch (persistErr) {\n              console.error('Failed to persist location to Firestore:', persistErr);\n            }\n          } catch (err) {\n            console.error('Error processing location:', err);\n          }\n        }\n      }\n    });\n    return function (_x1) {\n      return _ref8.apply(this, arguments);\n    };\n  }());\n  var LocationProvider = _ref0 => {\n    var children = _ref0.children;\n    var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      currentLocation = _useState2[0],\n      setCurrentLocation = _useState2[1];\n    var _useState3 = (0, _react.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      isTracking = _useState4[0],\n      setIsTracking = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      totalDistance = _useState6[0],\n      setTotalDistance = _useState6[1];\n    // Live tracking states\n    var _useState7 = (0, _react.useState)(false),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      isLiveTracking = _useState8[0],\n      setIsLiveTracking = _useState8[1];\n    var _useState9 = (0, _react.useState)([]),\n      _useState0 = (0, _slicedToArray2.default)(_useState9, 2),\n      liveUsers = _useState0[0],\n      setLiveUsers = _useState0[1];\n    var _useState1 = (0, _react.useState)(null),\n      _useState10 = (0, _slicedToArray2.default)(_useState1, 2),\n      liveTrackingInterval = _useState10[0],\n      setLiveTrackingInterval = _useState10[1];\n    var _useAuth = (0, _AuthContext.useAuth)(),\n      user = _useAuth.user;\n    (0, _react.useEffect)(() => {\n      var listener = newTotal => {\n        setTotalDistance(newTotal);\n      };\n      setDistanceUpdateListener(listener);\n      return () => setDistanceUpdateListener(null);\n    }, []);\n    (0, _react.useEffect)(() => {\n      checkTrackingStatus();\n      getCurrentLocation();\n      calculateTotalDistance();\n    }, [user]);\n    var checkTrackingStatus = /*#__PURE__*/function () {\n      var _ref1 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user) return;\n        try {\n          var trackingStatus = yield _asyncStorage.default.getItem(`tracking_${user.id}`);\n          if (trackingStatus === 'true') {\n            var isTaskRunning = yield Location.hasStartedLocationUpdatesAsync(LOCATION_TASK_NAME);\n            setIsTracking(isTaskRunning);\n\n            // Also check live tracking status\n            var liveStatus = yield _asyncStorage.default.getItem(`liveTracking_${user.id}`);\n            setIsLiveTracking(liveStatus === 'true' && isTaskRunning);\n          }\n        } catch (error) {\n          console.error('Error checking tracking status:', error);\n        }\n      });\n      return function checkTrackingStatus() {\n        return _ref1.apply(this, arguments);\n      };\n    }();\n    var getCurrentLocation = /*#__PURE__*/function () {\n      var _ref10 = (0, _asyncToGenerator2.default)(function* () {\n        try {\n          var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n            status = _yield$Location$reque.status;\n          if (status !== 'granted') {\n            console.log('Location permission not granted');\n            return;\n          }\n          var location = yield Location.getCurrentPositionAsync({});\n          var locationData = {\n            latitude: location.coords.latitude,\n            longitude: location.coords.longitude,\n            timestamp: location.timestamp,\n            accuracy: location.coords.accuracy || undefined\n          };\n          setCurrentLocation(locationData);\n        } catch (error) {\n          console.error('Error getting current location:', error);\n        }\n      });\n      return function getCurrentLocation() {\n        return _ref10.apply(this, arguments);\n      };\n    }();\n    var refreshTotalDistanceFromFirebase = /*#__PURE__*/function () {\n      var _ref11 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user?.id) return;\n        try {\n          var currentDate = getCurrentDateString();\n          var docId = `${currentDate}_${user.id}`;\n\n          // Use doc() to get a specific document by ID instead of query with where\n          var travelledDocRef = (0, _firestore.doc)(_firebase.db, 'travelled', docId);\n          var travelledSnapshot = yield (0, _firestore.getDocs)((0, _firestore.query)((0, _firestore.collection)(_firebase.db, 'travelled'), (0, _firestore.where)('current_date', '==', currentDate), (0, _firestore.where)('user_id', '==', user.id)));\n          if (!travelledSnapshot.empty) {\n            var data = travelledSnapshot.docs[0].data();\n            var firebaseDistance = data.travelled_distance_kms || 0;\n\n            // Update local storage and state\n            yield _asyncStorage.default.setItem('totalDistance', firebaseDistance.toString());\n            setTotalDistance(firebaseDistance);\n            console.log(`Synced total distance from Firebase: ${firebaseDistance.toFixed(2)} km`);\n          } else {\n            // If no document exists for today, set distance to 0\n            yield _asyncStorage.default.setItem('totalDistance', '0');\n            setTotalDistance(0);\n            console.log('No distance data found for today, reset to 0');\n          }\n        } catch (error) {\n          console.error('Error refreshing distance from Firebase:', error);\n          // Don't change the current value on error, just log it\n        }\n      });\n      return function refreshTotalDistanceFromFirebase() {\n        return _ref11.apply(this, arguments);\n      };\n    }();\n    var calculateTotalDistance = /*#__PURE__*/function () {\n      var _ref12 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user?.id) {\n          setTotalDistance(0);\n          return;\n        }\n        try {\n          // Prefer per-user stored total, then app-wide default, then legacy key\n          var _getStorageKeysForUse2 = getStorageKeysForUser(user.id),\n            totalKey = _getStorageKeysForUse2.total;\n          var totalDistanceStr = (yield _asyncStorage.default.getItem(totalKey)) ?? (yield _asyncStorage.default.getItem(DEFAULT_TOTAL_KEY)) ?? (yield _asyncStorage.default.getItem('totalDistance'));\n          if (totalDistanceStr) {\n            var parsed = parseFloat(totalDistanceStr);\n            setTotalDistance(Number.isFinite(parsed) ? parsed : 0);\n\n            // Also try to sync with Firebase travelled data for today (best-effort)\n            yield refreshTotalDistanceFromFirebase();\n            return;\n          }\n\n          // If no local data, try to get from Firebase\n          yield refreshTotalDistanceFromFirebase();\n        } catch (error) {\n          console.error('Error calculating total distance:', error);\n          setTotalDistance(0);\n        }\n      });\n      return function calculateTotalDistance() {\n        return _ref12.apply(this, arguments);\n      };\n    }();\n    var refreshTotalDistance = /*#__PURE__*/function () {\n      var _ref13 = (0, _asyncToGenerator2.default)(function* () {\n        yield refreshTotalDistanceFromFirebase();\n      });\n      return function refreshTotalDistance() {\n        return _ref13.apply(this, arguments);\n      };\n    }();\n    var startTracking = /*#__PURE__*/function () {\n      var _ref14 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user) return;\n        try {\n          var _yield$Location$reque2 = yield Location.requestForegroundPermissionsAsync(),\n            foregroundStatus = _yield$Location$reque2.status;\n          if (foregroundStatus !== 'granted') {\n            throw new Error('Foreground location permission not granted');\n          }\n          var _yield$Location$reque3 = yield Location.requestBackgroundPermissionsAsync(),\n            backgroundStatus = _yield$Location$reque3.status;\n          if (backgroundStatus !== 'granted') {\n            console.warn('Background location permission not granted, tracking may be limited');\n          }\n          yield Location.startLocationUpdatesAsync(LOCATION_TASK_NAME, {\n            accuracy: Location.Accuracy.High,\n            timeInterval: 15000,\n            // 15 seconds (more frequent)\n            distanceInterval: 10,\n            // 10 meters (more sensitive)\n            foregroundService: {\n              notificationTitle: 'Location Tracking Active',\n              notificationBody: 'Tracking your location for distance calculation',\n              notificationColor: '#4CAF50'\n            }\n          });\n          yield _asyncStorage.default.setItem(`tracking_${user.id}`, 'true');\n          setIsTracking(true);\n        } catch (error) {\n          console.error('Error starting location tracking:', error);\n          throw error;\n        }\n      });\n      return function startTracking() {\n        return _ref14.apply(this, arguments);\n      };\n    }();\n    var stopTracking = /*#__PURE__*/function () {\n      var _ref15 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user) return;\n        try {\n          var hasStarted = yield Location.hasStartedLocationUpdatesAsync(LOCATION_TASK_NAME);\n          if (hasStarted) {\n            yield Location.stopLocationUpdatesAsync(LOCATION_TASK_NAME);\n          }\n          yield _asyncStorage.default.setItem(`tracking_${user.id}`, 'false');\n          setIsTracking(false);\n        } catch (error) {\n          console.error('Error stopping location tracking:', error);\n          throw error;\n        }\n      });\n      return function stopTracking() {\n        return _ref15.apply(this, arguments);\n      };\n    }();\n    var getLocationHistory = /*#__PURE__*/function () {\n      var _ref16 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user?.id) {\n          return [];\n        }\n        try {\n          var _getStorageKeysForUse3 = getStorageKeysForUser(user.id),\n            historyKey = _getStorageKeysForUse3.history;\n          var historyData = (yield _asyncStorage.default.getItem(historyKey)) ?? (yield _asyncStorage.default.getItem(DEFAULT_HISTORY_KEY));\n          return historyData ? JSON.parse(historyData) : [];\n        } catch (error) {\n          console.error('Error getting location history:', error);\n          return [];\n        }\n      });\n      return function getLocationHistory() {\n        return _ref16.apply(this, arguments);\n      };\n    }();\n\n    // Unified tracking function that combines both regular and live tracking\n    var startUnifiedTracking = /*#__PURE__*/function () {\n      var _ref17 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user) return;\n        try {\n          var _yield$Location$reque4 = yield Location.requestForegroundPermissionsAsync(),\n            status = _yield$Location$reque4.status;\n          if (status !== 'granted') {\n            throw new Error('Location permission not granted');\n          }\n          var _yield$Location$reque5 = yield Location.requestBackgroundPermissionsAsync(),\n            backgroundStatus = _yield$Location$reque5.status;\n          if (backgroundStatus !== 'granted') {\n            console.warn('Background location permission not granted, tracking may be limited');\n          }\n\n          // Start background location tracking for distance calculation\n          yield Location.startLocationUpdatesAsync(LOCATION_TASK_NAME, {\n            accuracy: Location.Accuracy.High,\n            // Use high accuracy for better distance calculation\n            timeInterval: 15000,\n            // 15 seconds (more frequent updates)\n            distanceInterval: 10,\n            // 10 meters (capture smaller movements)\n            foregroundService: {\n              notificationTitle: 'Location Tracking Active',\n              notificationBody: 'Your location is being tracked for distance calculation',\n              notificationColor: '#4CAF50'\n            }\n          });\n\n          // Mark live tracking active in Firestore for admin visibility\n          yield (0, _firestore.setDoc)((0, _firestore.doc)(_firebase.db, 'live_tracking', user.id), {\n            user_id: user.id,\n            name: user.name,\n            is_active: true,\n            started_at: (0, _firestore.serverTimestamp)(),\n            last_update: (0, _firestore.serverTimestamp)(),\n            latitude: null,\n            longitude: null,\n            accuracy: null\n          }, {\n            merge: true\n          });\n\n          // Start sending location updates every 60 seconds for live tracking\n          var interval = setInterval(/*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n            try {\n              var location = yield Location.getCurrentPositionAsync({\n                accuracy: Location.Accuracy.High\n              });\n              var locationData = {\n                latitude: location.coords.latitude,\n                longitude: location.coords.longitude,\n                timestamp: location.timestamp,\n                accuracy: location.coords.accuracy || undefined\n              };\n              yield processLocationForDistance(locationData, user?.id ?? null);\n              setCurrentLocation(locationData);\n\n              // Update live tracking doc and save to locations collection\n              try {\n                yield (0, _firestore.setDoc)((0, _firestore.doc)(_firebase.db, 'live_tracking', user.id), {\n                  latitude: locationData.latitude,\n                  longitude: locationData.longitude,\n                  accuracy: locationData.accuracy ?? null,\n                  last_update: (0, _firestore.serverTimestamp)(),\n                  timestamp: locationData.timestamp\n                }, {\n                  merge: true\n                });\n\n                // Store in new Firebase structure\n                if (user.id) {\n                  yield storeLiveTrackingData(user.id, locationData);\n                }\n\n                // Keep legacy collection for backward compatibility\n                yield (0, _firestore.addDoc)((0, _firestore.collection)(_firebase.db, 'locations'), {\n                  user_id: user.id,\n                  latitude: locationData.latitude,\n                  longitude: locationData.longitude,\n                  timestamp: locationData.timestamp,\n                  accuracy: locationData.accuracy ?? null,\n                  created_at: (0, _firestore.serverTimestamp)(),\n                  is_live_tracking: true\n                });\n              } catch (err) {\n                console.error('Failed to update Firestore live location:', err);\n              }\n            } catch (error) {\n              console.error('Error getting live location:', error);\n            }\n          }), 60000); // Update every 60 seconds (1 minute)\n\n          setLiveTrackingInterval(interval);\n          setIsTracking(true);\n          setIsLiveTracking(true);\n          yield _asyncStorage.default.setItem(`tracking_${user.id}`, 'true');\n          yield _asyncStorage.default.setItem(`liveTracking_${user.id}`, 'true');\n        } catch (error) {\n          console.error('Error starting unified tracking:', error);\n          throw error;\n        }\n      });\n      return function startUnifiedTracking() {\n        return _ref17.apply(this, arguments);\n      };\n    }();\n    var stopUnifiedTracking = /*#__PURE__*/function () {\n      var _ref19 = (0, _asyncToGenerator2.default)(function* () {\n        if (!user) return;\n        try {\n          // Stop background location tracking\n          var hasStarted = yield Location.hasStartedLocationUpdatesAsync(LOCATION_TASK_NAME);\n          if (hasStarted) {\n            yield Location.stopLocationUpdatesAsync(LOCATION_TASK_NAME);\n          }\n\n          // Mark live tracking inactive in Firestore\n          yield (0, _firestore.setDoc)((0, _firestore.doc)(_firebase.db, 'live_tracking', user.id), {\n            is_active: false,\n            stopped_at: (0, _firestore.serverTimestamp)()\n          }, {\n            merge: true\n          });\n\n          // Clear interval\n          if (liveTrackingInterval) {\n            clearInterval(liveTrackingInterval);\n            setLiveTrackingInterval(null);\n          }\n          setIsTracking(false);\n          setIsLiveTracking(false);\n          yield _asyncStorage.default.setItem(`tracking_${user.id}`, 'false');\n          yield _asyncStorage.default.setItem(`liveTracking_${user.id}`, 'false');\n        } catch (error) {\n          console.error('Error stopping unified tracking:', error);\n          throw error;\n        }\n      });\n      return function stopUnifiedTracking() {\n        return _ref19.apply(this, arguments);\n      };\n    }();\n\n    // Legacy functions for backward compatibility\n    var startLiveTracking = /*#__PURE__*/function () {\n      var _ref20 = (0, _asyncToGenerator2.default)(function* () {\n        return startUnifiedTracking();\n      });\n      return function startLiveTracking() {\n        return _ref20.apply(this, arguments);\n      };\n    }();\n    var stopLiveTracking = /*#__PURE__*/function () {\n      var _ref21 = (0, _asyncToGenerator2.default)(function* () {\n        return stopUnifiedTracking();\n      });\n      return function stopLiveTracking() {\n        return _ref21.apply(this, arguments);\n      };\n    }();\n    var getLiveTrackingUsers = (0, _react.useCallback)(/*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n      if (!user || user.role !== 'admin') return;\n      try {\n        // Try to get all live tracking documents without complex queries first\n        var snap = yield (0, _firestore.getDocs)((0, _firestore.collection)(_firebase.db, 'live_tracking'));\n        var allUsers = snap.docs.map(d => d.data());\n\n        // Filter for active users with recent updates\n        var twoMinutesAgo = Date.now() - 120000;\n        var activeUsers = allUsers.filter(u => {\n          if (!u.is_active || !u.latitude || !u.longitude) return false;\n          var lastUpdate = u.last_update instanceof _firestore.Timestamp ? u.last_update.toMillis() : u.last_update ? new Date(u.last_update).getTime() : 0;\n          return lastUpdate > twoMinutesAgo;\n        });\n        var users = activeUsers.map(u => ({\n          userId: u.user_id,\n          name: u.name,\n          location: {\n            latitude: u.latitude,\n            longitude: u.longitude,\n            timestamp: u.timestamp,\n            accuracy: u.accuracy ?? undefined\n          },\n          lastUpdate: u.last_update instanceof _firestore.Timestamp ? u.last_update.toMillis() : u.last_update ? new Date(u.last_update).getTime() : Date.now()\n        }));\n        setLiveUsers(users);\n      } catch (error) {\n        console.error('Error getting live tracking users:', error);\n        // Set empty array on error to prevent UI issues\n        setLiveUsers([]);\n      }\n    }), [user]);\n\n    // Check live tracking status on app start\n    (0, _react.useEffect)(() => {\n      var checkLiveTrackingStatus = /*#__PURE__*/function () {\n        var _ref23 = (0, _asyncToGenerator2.default)(function* () {\n          if (!user) return;\n          try {\n            var liveTrackingStatus = yield _asyncStorage.default.getItem(`liveTracking_${user.id}`);\n            if (liveTrackingStatus === 'true') {\n              // Restart unified tracking if it was active\n              yield startUnifiedTracking();\n            }\n          } catch (error) {\n            console.error('Error checking live tracking status:', error);\n          }\n        });\n        return function checkLiveTrackingStatus() {\n          return _ref23.apply(this, arguments);\n        };\n      }();\n      checkLiveTrackingStatus();\n\n      // For admin, start polling for live users\n      if (user?.role === 'admin') {\n        getLiveTrackingUsers();\n        var adminInterval = setInterval(getLiveTrackingUsers, 15000); // Poll every 15 seconds\n        return () => clearInterval(adminInterval);\n      }\n    }, [user, getLiveTrackingUsers]);\n\n    // Cleanup on unmount\n    (0, _react.useEffect)(() => {\n      return () => {\n        if (liveTrackingInterval) {\n          clearInterval(liveTrackingInterval);\n        }\n      };\n    }, [liveTrackingInterval]);\n\n    // Refresh total distance periodically\n    (0, _react.useEffect)(() => {\n      if (!user) return;\n      var distanceRefreshInterval = setInterval(() => {\n        refreshTotalDistanceFromFirebase();\n      }, 60000); // Refresh every minute\n\n      return () => clearInterval(distanceRefreshInterval);\n    }, [user]);\n    return /*#__PURE__*/(0, _jsxRuntime.jsx)(LocationContext.Provider, {\n      value: {\n        currentLocation,\n        isTracking,\n        totalDistance,\n        startTracking,\n        stopTracking,\n        getLocationHistory,\n        // Unified tracking (replaces both regular and live tracking)\n        startUnifiedTracking,\n        stopUnifiedTracking,\n        // Legacy live tracking (for backward compatibility)\n        startLiveTracking,\n        stopLiveTracking,\n        isLiveTracking,\n        liveUsers,\n        getLiveTrackingUsers,\n        refreshTotalDistance\n      },\n      children: children\n    });\n  };\n  exports.LocationProvider = LocationProvider;\n  var _default = exports.default = LocationProvider;\n});","lineCount":849,"map":[[9,2,1,0],[9,6,1,0,"_react"],[9,12,1,0],[9,15,1,0,"_interopRequireWildcard"],[9,38,1,0],[9,39,1,0,"require"],[9,46,1,0],[9,47,1,0,"_dependencyMap"],[9,61,1,0],[10,2,2,0],[10,6,2,0,"Location"],[10,14,2,0],[10,17,2,0,"_interopRequireWildcard"],[10,40,2,0],[10,41,2,0,"require"],[10,48,2,0],[10,49,2,0,"_dependencyMap"],[10,63,2,0],[11,2,3,0],[11,6,3,0,"TaskManager"],[11,17,3,0],[11,20,3,0,"_interopRequireWildcard"],[11,43,3,0],[11,44,3,0,"require"],[11,51,3,0],[11,52,3,0,"_dependencyMap"],[11,66,3,0],[12,2,4,0],[12,6,4,0,"_asyncStorage"],[12,19,4,0],[12,22,4,0,"_interopRequireDefault"],[12,44,4,0],[12,45,4,0,"require"],[12,52,4,0],[12,53,4,0,"_dependencyMap"],[12,67,4,0],[13,2,5,0],[13,6,5,0,"_AuthContext"],[13,18,5,0],[13,21,5,0,"require"],[13,28,5,0],[13,29,5,0,"_dependencyMap"],[13,43,5,0],[14,2,6,0],[14,6,6,0,"_firebase"],[14,15,6,0],[14,18,6,0,"require"],[14,25,6,0],[14,26,6,0,"_dependencyMap"],[14,40,6,0],[15,2,7,0],[15,6,7,0,"_firestore"],[15,16,7,0],[15,19,7,0,"require"],[15,26,7,0],[15,27,7,0,"_dependencyMap"],[15,41,7,0],[16,2,19,0],[16,6,19,0,"_env"],[16,10,19,0],[16,13,19,0,"require"],[16,20,19,0],[16,21,19,0,"_dependencyMap"],[16,35,19,0],[17,2,19,83],[17,6,19,83,"_jsxRuntime"],[17,17,19,83],[17,20,19,83,"require"],[17,27,19,83],[17,28,19,83,"_dependencyMap"],[17,42,19,83],[18,2,19,83],[18,11,19,83,"_interopRequireWildcard"],[18,35,19,83,"e"],[18,36,19,83],[18,38,19,83,"t"],[18,39,19,83],[18,68,19,83,"WeakMap"],[18,75,19,83],[18,81,19,83,"r"],[18,82,19,83],[18,89,19,83,"WeakMap"],[18,96,19,83],[18,100,19,83,"n"],[18,101,19,83],[18,108,19,83,"WeakMap"],[18,115,19,83],[18,127,19,83,"_interopRequireWildcard"],[18,150,19,83],[18,162,19,83,"_interopRequireWildcard"],[18,163,19,83,"e"],[18,164,19,83],[18,166,19,83,"t"],[18,167,19,83],[18,176,19,83,"t"],[18,177,19,83],[18,181,19,83,"e"],[18,182,19,83],[18,186,19,83,"e"],[18,187,19,83],[18,188,19,83,"__esModule"],[18,198,19,83],[18,207,19,83,"e"],[18,208,19,83],[18,214,19,83,"o"],[18,215,19,83],[18,217,19,83,"i"],[18,218,19,83],[18,220,19,83,"f"],[18,221,19,83],[18,226,19,83,"__proto__"],[18,235,19,83],[18,243,19,83,"default"],[18,250,19,83],[18,252,19,83,"e"],[18,253,19,83],[18,270,19,83,"e"],[18,271,19,83],[18,294,19,83,"e"],[18,295,19,83],[18,320,19,83,"e"],[18,321,19,83],[18,330,19,83,"f"],[18,331,19,83],[18,337,19,83,"o"],[18,338,19,83],[18,341,19,83,"t"],[18,342,19,83],[18,345,19,83,"n"],[18,346,19,83],[18,349,19,83,"r"],[18,350,19,83],[18,358,19,83,"o"],[18,359,19,83],[18,360,19,83,"has"],[18,363,19,83],[18,364,19,83,"e"],[18,365,19,83],[18,375,19,83,"o"],[18,376,19,83],[18,377,19,83,"get"],[18,380,19,83],[18,381,19,83,"e"],[18,382,19,83],[18,385,19,83,"o"],[18,386,19,83],[18,387,19,83,"set"],[18,390,19,83],[18,391,19,83,"e"],[18,392,19,83],[18,394,19,83,"f"],[18,395,19,83],[18,409,19,83,"_t"],[18,411,19,83],[18,415,19,83,"e"],[18,416,19,83],[18,432,19,83,"_t"],[18,434,19,83],[18,441,19,83,"hasOwnProperty"],[18,455,19,83],[18,456,19,83,"call"],[18,460,19,83],[18,461,19,83,"e"],[18,462,19,83],[18,464,19,83,"_t"],[18,466,19,83],[18,473,19,83,"i"],[18,474,19,83],[18,478,19,83,"o"],[18,479,19,83],[18,482,19,83,"Object"],[18,488,19,83],[18,489,19,83,"defineProperty"],[18,503,19,83],[18,508,19,83,"Object"],[18,514,19,83],[18,515,19,83,"getOwnPropertyDescriptor"],[18,539,19,83],[18,540,19,83,"e"],[18,541,19,83],[18,543,19,83,"_t"],[18,545,19,83],[18,552,19,83,"i"],[18,553,19,83],[18,554,19,83,"get"],[18,557,19,83],[18,561,19,83,"i"],[18,562,19,83],[18,563,19,83,"set"],[18,566,19,83],[18,570,19,83,"o"],[18,571,19,83],[18,572,19,83,"f"],[18,573,19,83],[18,575,19,83,"_t"],[18,577,19,83],[18,579,19,83,"i"],[18,580,19,83],[18,584,19,83,"f"],[18,585,19,83],[18,586,19,83,"_t"],[18,588,19,83],[18,592,19,83,"e"],[18,593,19,83],[18,594,19,83,"_t"],[18,596,19,83],[18,607,19,83,"f"],[18,608,19,83],[18,613,19,83,"e"],[18,614,19,83],[18,616,19,83,"t"],[18,617,19,83],[19,2,21,0],[19,6,21,6,"LOCATION_TASK_NAME"],[19,24,21,24],[19,27,21,27],[19,53,21,53],[21,2,23,0],[23,2,37,0],[23,6,37,6,"resolveGoogleApiKey"],[23,25,37,25],[23,28,37,28,"resolveGoogleApiKey"],[23,29,37,28],[23,34,37,54],[24,4,38,2],[24,8,38,8,"envKey"],[24,14,38,14],[24,17,38,17,"undefined"],[24,26,38,17],[24,28,38,86,"trim"],[24,32,38,90],[24,33,38,91],[24,34,38,92],[25,4,39,2],[25,8,39,6,"envKey"],[25,14,39,12],[25,16,39,14],[26,6,40,4],[26,13,40,11,"envKey"],[26,19,40,17],[27,4,41,2],[28,4,43,2],[28,8,43,8,"fallbackKey"],[28,19,43,19],[28,22,43,22,"DEFAULT_GOOGLE_MAPS_API_KEY"],[28,46,43,49],[28,48,43,51,"trim"],[28,52,43,55],[28,53,43,56],[28,54,43,57],[29,4,44,2],[29,11,44,9,"fallbackKey"],[29,22,44,20],[29,26,44,24,"undefined"],[29,35,44,33],[30,2,45,0],[30,3,45,1],[32,2,47,0],[33,2,48,0],[33,6,48,6,"GOOGLE_API_KEY"],[33,20,48,20],[33,23,48,23,"resolveGoogleApiKey"],[33,42,48,42],[33,43,48,43],[33,44,48,44],[34,2,50,0],[34,6,50,4],[34,7,50,5,"GOOGLE_API_KEY"],[34,21,50,19],[34,23,50,21],[35,4,51,2,"console"],[35,11,51,9],[35,12,51,10,"warn"],[35,16,51,14],[35,17,51,15],[35,93,51,91],[35,94,51,92],[36,2,52,0],[37,2,54,0],[37,6,54,6,"DEFAULT_HISTORY_KEY"],[37,25,54,25],[37,28,54,28],[37,45,54,45],[38,2,55,0],[38,6,55,6,"DEFAULT_TOTAL_KEY"],[38,23,55,23],[38,26,55,26],[38,41,55,41],[39,2,56,0],[39,6,56,6,"HISTORY_LIMIT"],[39,19,56,19],[39,22,56,22],[39,26,56,26],[40,2,63,0],[40,6,63,6,"getStoredUser"],[40,19,63,19],[41,4,63,19],[41,8,63,19,"_ref"],[41,12,63,19],[41,19,63,19,"_asyncToGenerator2"],[41,37,63,19],[41,38,63,19,"default"],[41,45,63,19],[41,47,63,22],[41,60,63,62],[42,6,64,2],[42,10,64,6],[43,8,65,4],[43,12,65,10,"userStr"],[43,19,65,17],[43,28,65,26,"AsyncStorage"],[43,49,65,38],[43,50,65,39,"getItem"],[43,57,65,46],[43,58,65,47],[43,64,65,53],[43,65,65,54],[44,8,66,4],[44,15,66,11,"userStr"],[44,22,66,18],[44,25,66,22,"JSON"],[44,29,66,26],[44,30,66,27,"parse"],[44,35,66,32],[44,36,66,33,"userStr"],[44,43,66,40],[44,44,66,41],[44,47,66,59],[44,51,66,63],[45,6,67,2],[45,7,67,3],[45,8,67,4],[45,15,67,11,"error"],[45,20,67,16],[45,22,67,18],[46,8,68,4,"console"],[46,15,68,11],[46,16,68,12,"warn"],[46,20,68,16],[46,21,68,17],[46,72,68,68],[46,74,68,70,"error"],[46,79,68,75],[46,80,68,76],[47,8,69,4],[47,15,69,11],[47,19,69,15],[48,6,70,2],[49,4,71,0],[49,5,71,1],[50,4,71,1],[50,20,63,6,"getStoredUser"],[50,33,63,19,"getStoredUser"],[50,34,63,19],[51,6,63,19],[51,13,63,19,"_ref"],[51,17,63,19],[51,18,63,19,"apply"],[51,23,63,19],[51,30,63,19,"arguments"],[51,39,63,19],[52,4,63,19],[53,2,63,19],[53,5,71,1],[54,2,73,0],[54,6,73,6,"getStorageKeysForUser"],[54,27,73,27],[54,30,73,31,"userId"],[54,36,73,52],[54,41,73,58],[55,4,74,2,"history"],[55,11,74,9],[55,13,74,11,"userId"],[55,19,74,17],[55,22,74,20],[55,25,74,23,"DEFAULT_HISTORY_KEY"],[55,44,74,42],[55,48,74,46,"userId"],[55,54,74,52],[55,56,74,54],[55,59,74,57,"DEFAULT_HISTORY_KEY"],[55,78,74,76],[56,4,75,2,"total"],[56,9,75,7],[56,11,75,9,"userId"],[56,17,75,15],[56,20,75,18],[56,23,75,21,"DEFAULT_TOTAL_KEY"],[56,40,75,38],[56,44,75,42,"userId"],[56,50,75,48],[56,52,75,50],[56,55,75,53,"DEFAULT_TOTAL_KEY"],[57,2,76,0],[57,3,76,1],[57,4,76,2],[58,2,78,0],[58,6,78,6,"getDrivingDistanceKm"],[58,26,78,26],[59,4,78,26],[59,8,78,26,"_ref2"],[59,13,78,26],[59,20,78,26,"_asyncToGenerator2"],[59,38,78,26],[59,39,78,26,"default"],[59,46,78,26],[59,48,78,29],[59,59,79,2,"originLat"],[59,68,79,19],[59,70,80,2,"originLng"],[59,79,80,19],[59,81,81,2,"destLat"],[59,88,81,17],[59,90,82,2,"destLng"],[59,97,82,17],[59,99,83,29],[60,6,84,2],[60,10,84,6],[60,11,84,7,"GOOGLE_API_KEY"],[60,25,84,21],[60,27,84,23],[61,8,85,4,"console"],[61,15,85,11],[61,16,85,12,"warn"],[61,20,85,16],[61,21,85,17],[61,92,85,88],[61,93,85,89],[62,8,86,4],[62,15,86,11],[62,19,86,15],[63,6,87,2],[64,6,89,2],[64,10,89,8,"url"],[64,13,89,11],[64,16,89,14],[64,97,89,95,"encodeURIComponent"],[64,115,89,113],[64,116,90,4],[64,119,90,7,"originLat"],[64,128,90,16],[64,132,90,20,"originLng"],[64,141,90,29],[64,143,91,2],[64,144,91,3],[64,161,91,20,"encodeURIComponent"],[64,179,91,38],[64,180,91,39],[64,183,91,42,"destLat"],[64,190,91,49],[64,194,91,53,"destLng"],[64,201,91,60],[64,203,91,62],[64,204,91,63],[64,225,91,84,"GOOGLE_API_KEY"],[64,239,91,98],[64,241,91,100],[65,6,93,2],[65,10,93,6],[66,8,94,4],[66,12,94,10,"res"],[66,15,94,13],[66,24,94,22,"fetch"],[66,29,94,27],[66,30,94,28,"url"],[66,33,94,31],[66,34,94,32],[67,8,95,4],[67,12,95,8],[67,13,95,9,"res"],[67,16,95,12],[67,17,95,13,"ok"],[67,19,95,15],[67,21,95,17],[68,10,96,6,"console"],[68,17,96,13],[68,18,96,14,"warn"],[68,22,96,18],[68,23,96,19],[68,62,96,58,"res"],[68,65,96,61],[68,66,96,62,"status"],[68,72,96,68],[68,76,96,72,"res"],[68,79,96,75],[68,80,96,76,"statusText"],[68,90,96,86],[68,92,96,88],[68,93,96,89],[69,10,97,6],[69,17,97,13],[69,21,97,17],[70,8,98,4],[71,8,100,4],[71,12,100,10,"data"],[71,16,100,14],[71,25,100,23,"res"],[71,28,100,26],[71,29,100,27,"json"],[71,33,100,31],[71,34,100,32],[71,35,100,33],[72,8,101,4],[72,12,101,10,"el"],[72,14,101,12],[72,17,101,15,"data"],[72,21,101,19],[72,23,101,21,"rows"],[72,27,101,25],[72,30,101,28],[72,31,101,29],[72,32,101,30],[72,34,101,32,"elements"],[72,42,101,40],[72,45,101,43],[72,46,101,44],[72,47,101,45],[73,8,103,4],[73,12,103,8,"el"],[73,14,103,10],[73,16,103,12,"status"],[73,22,103,18],[73,27,103,23],[73,31,103,27],[73,35,103,31,"el"],[73,37,103,33],[73,39,103,35,"distance"],[73,47,103,43],[73,49,103,45,"value"],[73,54,103,50],[73,58,103,54],[73,62,103,58],[73,64,103,60],[74,10,104,6],[74,14,104,12,"distanceKm"],[74,24,104,22],[74,27,104,25,"el"],[74,29,104,27],[74,30,104,28,"distance"],[74,38,104,36],[74,39,104,37,"value"],[74,44,104,42],[74,47,104,45],[74,51,104,49],[74,52,104,50],[74,53,104,51],[75,10,105,6,"console"],[75,17,105,13],[75,18,105,14,"log"],[75,21,105,17],[75,22,105,18],[75,46,105,42,"distanceKm"],[75,56,105,52],[75,57,105,53,"toFixed"],[75,64,105,60],[75,65,105,61],[75,66,105,62],[75,67,105,63],[75,85,105,81],[75,86,105,82],[76,10,106,6],[76,17,106,13,"distanceKm"],[76,27,106,23],[77,8,107,4],[77,9,107,5],[77,15,107,11],[78,10,108,6,"console"],[78,17,108,13],[78,18,108,14,"warn"],[78,22,108,18],[78,23,108,19],[78,53,108,49,"el"],[78,55,108,51],[78,57,108,53,"status"],[78,63,108,59],[78,67,108,63],[78,82,108,78],[78,84,108,80],[78,85,108,81],[79,10,109,6],[79,17,109,13],[79,21,109,17],[80,8,110,4],[81,6,111,2],[81,7,111,3],[81,8,111,4],[81,15,111,11,"error"],[81,20,111,16],[81,22,111,18],[82,8,112,4,"console"],[82,15,112,11],[82,16,112,12,"warn"],[82,20,112,16],[82,21,112,17],[82,58,112,54],[82,60,112,56,"error"],[82,65,112,61],[82,66,112,62],[83,8,113,4],[83,15,113,11],[83,19,113,15],[84,6,114,2],[85,4,115,0],[85,5,115,1],[86,4,115,1],[86,20,78,6,"getDrivingDistanceKm"],[86,40,78,26,"getDrivingDistanceKm"],[86,41,78,26,"_x"],[86,43,78,26],[86,45,78,26,"_x2"],[86,48,78,26],[86,50,78,26,"_x3"],[86,53,78,26],[86,55,78,26,"_x4"],[86,58,78,26],[87,6,78,26],[87,13,78,26,"_ref2"],[87,18,78,26],[87,19,78,26,"apply"],[87,24,78,26],[87,31,78,26,"arguments"],[87,40,78,26],[88,4,78,26],[89,2,78,26],[89,5,115,1],[91,2,117,0],[92,2,118,0],[92,6,118,6,"getCurrentDateString"],[92,26,118,26],[92,29,118,29,"getCurrentDateString"],[92,30,118,29],[92,35,118,43],[93,4,119,2],[93,8,119,8,"now"],[93,11,119,11],[93,14,119,14],[93,18,119,18,"Date"],[93,22,119,22],[93,23,119,23],[93,24,119,24],[94,4,120,2],[94,11,120,9,"now"],[94,14,120,12],[94,15,120,13,"toISOString"],[94,26,120,24],[94,27,120,25],[94,28,120,26],[94,29,120,27,"split"],[94,34,120,32],[94,35,120,33],[94,38,120,36],[94,39,120,37],[94,40,120,38],[94,41,120,39],[94,42,120,40],[95,2,121,0],[95,3,121,1],[97,2,123,0],[98,2,124,0],[98,6,124,6,"storeTravelledDistance"],[98,28,124,28],[99,4,124,28],[99,8,124,28,"_ref3"],[99,13,124,28],[99,20,124,28,"_asyncToGenerator2"],[99,38,124,28],[99,39,124,28,"default"],[99,46,124,28],[99,48,124,31],[99,59,124,38,"userId"],[99,65,124,52],[99,67,124,54,"distanceKm"],[99,77,124,72],[99,79,124,77],[100,6,125,2],[100,10,125,8,"currentDate"],[100,21,125,19],[100,24,125,22,"getCurrentDateString"],[100,44,125,42],[100,45,125,43],[100,46,125,44],[101,6,126,2],[101,10,126,8,"docId"],[101,15,126,13],[101,18,126,16],[101,21,126,19,"currentDate"],[101,32,126,30],[101,36,126,34,"userId"],[101,42,126,40],[101,44,126,42],[102,6,128,2],[102,10,128,6],[103,8,129,4],[103,12,129,10,"travelledRef"],[103,24,129,22],[103,27,129,25],[103,31,129,25,"fsDoc"],[103,45,129,30],[103,47,129,31,"db"],[103,59,129,33],[103,61,129,35],[103,72,129,46],[103,74,129,48,"docId"],[103,79,129,53],[103,80,129,54],[105,8,131,4],[106,8,132,4],[106,12,132,8],[107,10,133,6],[107,14,133,12,"existingSnapshot"],[107,30,133,28],[107,39,133,37],[107,43,133,37,"getDocs"],[107,61,133,44],[107,63,133,45],[107,67,133,45,"query"],[107,83,133,50],[107,85,134,8],[107,89,134,8,"collection"],[107,110,134,18],[107,112,134,19,"db"],[107,124,134,21],[107,126,134,23],[107,137,134,34],[107,138,134,35],[107,140,135,8],[107,144,135,8,"where"],[107,160,135,13],[107,162,135,14],[107,176,135,28],[107,178,135,30],[107,182,135,34],[107,184,135,36,"currentDate"],[107,195,135,47],[107,196,135,48],[107,198,136,8],[107,202,136,8,"where"],[107,218,136,13],[107,220,136,14],[107,229,136,23],[107,231,136,25],[107,235,136,29],[107,237,136,31,"userId"],[107,243,136,37],[107,244,137,6],[107,245,137,7],[107,246,137,8],[108,10,139,6],[108,14,139,10],[108,15,139,11,"existingSnapshot"],[108,31,139,27],[108,32,139,28,"empty"],[108,37,139,33],[108,39,139,35],[109,12,140,8],[110,12,141,8],[110,16,141,14,"existingData"],[110,28,141,26],[110,31,141,29,"existingSnapshot"],[110,47,141,45],[110,48,141,46,"docs"],[110,52,141,50],[110,53,141,51],[110,54,141,52],[110,55,141,53],[110,56,141,54,"data"],[110,60,141,58],[110,61,141,59],[110,62,141,60],[111,12,142,8],[111,16,142,14,"newTotalDistance"],[111,32,142,30],[111,35,142,33],[111,36,142,34,"existingData"],[111,48,142,46],[111,49,142,47,"travelled_distance_kms"],[111,71,142,69],[111,75,142,73],[111,76,142,74],[111,80,142,78,"distanceKm"],[111,90,142,88],[112,12,144,8],[112,18,144,14],[112,22,144,14,"updateDoc"],[112,42,144,23],[112,44,144,24,"existingSnapshot"],[112,60,144,40],[112,61,144,41,"docs"],[112,65,144,45],[112,66,144,46],[112,67,144,47],[112,68,144,48],[112,69,144,49,"ref"],[112,72,144,52],[112,74,144,54],[113,14,145,10,"travelled_distance_kms"],[113,36,145,32],[113,38,145,34,"newTotalDistance"],[113,54,145,50],[114,14,146,10,"updated_at"],[114,24,146,20],[114,26,146,22],[114,30,146,22,"serverTimestamp"],[114,56,146,37],[114,58,146,38],[115,12,147,8],[115,13,147,9],[115,14,147,10],[116,12,149,8,"console"],[116,19,149,15],[116,20,149,16,"log"],[116,23,149,19],[116,24,149,20],[116,54,149,50,"userId"],[116,60,149,56],[116,65,149,61,"newTotalDistance"],[116,81,149,77],[116,82,149,78,"toFixed"],[116,89,149,85],[116,90,149,86],[116,91,149,87],[116,92,149,88],[116,97,149,93],[116,98,149,94],[117,10,150,6],[117,11,150,7],[117,17,150,13],[118,12,151,8],[119,12,152,8],[119,18,152,14],[119,22,152,14,"setDoc"],[119,39,152,20],[119,41,152,21,"travelledRef"],[119,53,152,33],[119,55,152,35],[120,14,153,10,"current_date"],[120,26,153,22],[120,28,153,24,"currentDate"],[120,39,153,35],[121,14,154,10,"user_id"],[121,21,154,17],[121,23,154,19,"userId"],[121,29,154,25],[122,14,155,10,"travelled_distance_kms"],[122,36,155,32],[122,38,155,34,"distanceKm"],[122,48,155,44],[123,14,156,10,"created_at"],[123,24,156,20],[123,26,156,22],[123,30,156,22,"serverTimestamp"],[123,56,156,37],[123,58,156,38],[123,59,156,39],[124,14,157,10,"updated_at"],[124,24,157,20],[124,26,157,22],[124,30,157,22,"serverTimestamp"],[124,56,157,37],[124,58,157,38],[125,12,158,8],[125,13,158,9],[125,14,158,10],[126,12,160,8,"console"],[126,19,160,15],[126,20,160,16,"log"],[126,23,160,19],[126,24,160,20],[126,65,160,61,"userId"],[126,71,160,67],[126,76,160,72,"distanceKm"],[126,86,160,82],[126,87,160,83,"toFixed"],[126,94,160,90],[126,95,160,91],[126,96,160,92],[126,97,160,93],[126,102,160,98],[126,103,160,99],[127,10,161,6],[128,8,162,4],[128,9,162,5],[128,10,162,6],[128,17,162,13,"queryError"],[128,27,162,23],[128,29,162,25],[129,10,163,6,"console"],[129,17,163,13],[129,18,163,14,"log"],[129,21,163,17],[129,22,163,18],[129,70,163,66],[129,72,163,68,"queryError"],[129,82,163,78],[129,83,163,79],[130,10,164,6],[131,10,165,6],[131,16,165,12],[131,20,165,12,"setDoc"],[131,37,165,18],[131,39,165,19,"travelledRef"],[131,51,165,31],[131,53,165,33],[132,12,166,8,"current_date"],[132,24,166,20],[132,26,166,22,"currentDate"],[132,37,166,33],[133,12,167,8,"user_id"],[133,19,167,15],[133,21,167,17,"userId"],[133,27,167,23],[134,12,168,8,"travelled_distance_kms"],[134,34,168,30],[134,36,168,32,"distanceKm"],[134,46,168,42],[135,12,169,8,"created_at"],[135,22,169,18],[135,24,169,20],[135,28,169,20,"serverTimestamp"],[135,54,169,35],[135,56,169,36],[135,57,169,37],[136,12,170,8,"updated_at"],[136,22,170,18],[136,24,170,20],[136,28,170,20,"serverTimestamp"],[136,54,170,35],[136,56,170,36],[137,10,171,6],[137,11,171,7],[137,13,171,9],[138,12,171,11,"merge"],[138,17,171,16],[138,19,171,18],[139,10,171,23],[139,11,171,24],[139,12,171,25],[140,10,173,6,"console"],[140,17,173,13],[140,18,173,14,"log"],[140,21,173,17],[140,22,173,18],[140,66,173,62,"userId"],[140,72,173,68],[140,77,173,73,"distanceKm"],[140,87,173,83],[140,88,173,84,"toFixed"],[140,95,173,91],[140,96,173,92],[140,97,173,93],[140,98,173,94],[140,103,173,99],[140,104,173,100],[141,8,174,4],[142,6,175,2],[142,7,175,3],[142,8,175,4],[142,15,175,11,"error"],[142,20,175,16],[142,22,175,18],[143,8,176,4,"console"],[143,15,176,11],[143,16,176,12,"error"],[143,21,176,17],[143,22,176,18],[143,57,176,53],[143,59,176,55,"error"],[143,64,176,60],[143,65,176,61],[144,6,177,2],[145,4,178,0],[145,5,178,1],[146,4,178,1],[146,20,124,6,"storeTravelledDistance"],[146,42,124,28,"storeTravelledDistance"],[146,43,124,28,"_x5"],[146,46,124,28],[146,48,124,28,"_x6"],[146,51,124,28],[147,6,124,28],[147,13,124,28,"_ref3"],[147,18,124,28],[147,19,124,28,"apply"],[147,24,124,28],[147,31,124,28,"arguments"],[147,40,124,28],[148,4,124,28],[149,2,124,28],[149,5,178,1],[151,2,180,0],[152,2,181,0],[152,6,181,6,"storeLiveTrackingData"],[152,27,181,27],[153,4,181,27],[153,8,181,27,"_ref4"],[153,13,181,27],[153,20,181,27,"_asyncToGenerator2"],[153,38,181,27],[153,39,181,27,"default"],[153,46,181,27],[153,48,181,30],[153,59,181,37,"userId"],[153,65,181,51],[153,67,181,53,"locationData"],[153,79,181,79],[153,81,181,84],[154,6,182,2],[154,10,182,8,"currentDate"],[154,21,182,19],[154,24,182,22,"getCurrentDateString"],[154,44,182,42],[154,45,182,43],[154,46,182,44],[155,6,183,2],[155,10,183,8,"docId"],[155,15,183,13],[155,18,183,16],[155,21,183,19,"currentDate"],[155,32,183,30],[155,36,183,34,"userId"],[155,42,183,40],[155,44,183,42],[156,6,185,2],[156,10,185,6],[157,8,186,4],[157,12,186,10,"liveTrackingRef"],[157,27,186,25],[157,30,186,28],[157,34,186,28,"fsDoc"],[157,48,186,33],[157,50,186,34,"db"],[157,62,186,36],[157,64,186,38],[157,85,186,59],[157,87,186,61,"docId"],[157,92,186,66],[157,93,186,67],[158,8,187,4],[158,12,187,10,"timestamp"],[158,21,187,19],[158,24,187,22,"Date"],[158,28,187,26],[158,29,187,27,"now"],[158,32,187,30],[158,33,187,31],[158,34,187,32],[159,8,189,4],[159,12,189,10,"locationPoint"],[159,25,189,23],[159,28,189,26],[160,10,190,6,"lat"],[160,13,190,9],[160,15,190,11,"locationData"],[160,27,190,23],[160,28,190,24,"latitude"],[160,36,190,32],[161,10,191,6,"lng"],[161,13,191,9],[161,15,191,11,"locationData"],[161,27,191,23],[161,28,191,24,"longitude"],[161,37,191,33],[162,10,192,6,"timestamp"],[162,19,192,15],[162,21,192,17,"timestamp"],[162,30,192,26],[163,10,193,6,"accuracy"],[163,18,193,14],[163,20,193,16,"locationData"],[163,32,193,28],[163,33,193,29,"accuracy"],[163,41,193,37],[163,45,193,41],[164,8,194,4],[164,9,194,5],[166,8,196,4],[167,8,197,4],[167,12,197,8],[168,10,198,6],[168,14,198,12,"existingSnapshot"],[168,30,198,28],[168,39,198,37],[168,43,198,37,"getDocs"],[168,61,198,44],[168,63,198,45],[168,67,198,45,"query"],[168,83,198,50],[168,85,199,8],[168,89,199,8,"collection"],[168,110,199,18],[168,112,199,19,"db"],[168,124,199,21],[168,126,199,23],[168,147,199,44],[168,148,199,45],[168,150,200,8],[168,154,200,8,"where"],[168,170,200,13],[168,172,200,14],[168,186,200,28],[168,188,200,30],[168,192,200,34],[168,194,200,36,"currentDate"],[168,205,200,47],[168,206,200,48],[168,208,201,8],[168,212,201,8,"where"],[168,228,201,13],[168,230,201,14],[168,239,201,23],[168,241,201,25],[168,245,201,29],[168,247,201,31,"userId"],[168,253,201,37],[168,254,202,6],[168,255,202,7],[168,256,202,8],[169,10,204,6],[169,14,204,10],[169,15,204,11,"existingSnapshot"],[169,31,204,27],[169,32,204,28,"empty"],[169,37,204,33],[169,39,204,35],[170,12,205,8],[171,12,206,8],[171,16,206,14,"existingData"],[171,28,206,26],[171,31,206,29,"existingSnapshot"],[171,47,206,45],[171,48,206,46,"docs"],[171,52,206,50],[171,53,206,51],[171,54,206,52],[171,55,206,53],[171,56,206,54,"data"],[171,60,206,58],[171,61,206,59],[171,62,206,60],[172,12,207,8],[172,16,207,14,"existingLocations"],[172,33,207,31],[172,36,207,34,"existingData"],[172,48,207,46],[172,49,207,47,"locations"],[172,58,207,56],[172,62,207,60],[172,64,207,62],[173,12,209,8],[173,18,209,14],[173,22,209,14,"updateDoc"],[173,42,209,23],[173,44,209,24,"existingSnapshot"],[173,60,209,40],[173,61,209,41,"docs"],[173,65,209,45],[173,66,209,46],[173,67,209,47],[173,68,209,48],[173,69,209,49,"ref"],[173,72,209,52],[173,74,209,54],[174,14,210,10,"locations"],[174,23,210,19],[174,25,210,21],[174,26,210,22],[174,29,210,25,"existingLocations"],[174,46,210,42],[174,48,210,44,"locationPoint"],[174,61,210,57],[174,62,210,58],[175,14,211,10,"last_updated"],[175,26,211,22],[175,28,211,24],[175,32,211,24,"serverTimestamp"],[175,58,211,39],[175,60,211,40],[176,12,212,8],[176,13,212,9],[176,14,212,10],[177,12,214,8,"console"],[177,19,214,15],[177,20,214,16,"log"],[177,23,214,19],[177,24,214,20],[177,58,214,54,"userId"],[177,64,214,60],[177,71,214,67,"currentDate"],[177,82,214,78],[177,87,214,83,"existingLocations"],[177,104,214,100],[177,105,214,101,"length"],[177,111,214,107],[177,114,214,110],[177,115,214,111],[177,125,214,121],[177,126,214,122],[178,10,215,6],[178,11,215,7],[178,17,215,13],[179,12,216,8],[180,12,217,8],[180,18,217,14],[180,22,217,14,"setDoc"],[180,39,217,20],[180,41,217,21,"liveTrackingRef"],[180,56,217,36],[180,58,217,38],[181,14,218,10,"current_date"],[181,26,218,22],[181,28,218,24,"currentDate"],[181,39,218,35],[182,14,219,10,"user_id"],[182,21,219,17],[182,23,219,19,"userId"],[182,29,219,25],[183,14,220,10,"locations"],[183,23,220,19],[183,25,220,21],[183,26,220,22,"locationPoint"],[183,39,220,35],[183,40,220,36],[184,14,221,10,"created_at"],[184,24,221,20],[184,26,221,22],[184,30,221,22,"serverTimestamp"],[184,56,221,37],[184,58,221,38],[184,59,221,39],[185,14,222,10,"last_updated"],[185,26,222,22],[185,28,222,24],[185,32,222,24,"serverTimestamp"],[185,58,222,39],[185,60,222,40],[186,12,223,8],[186,13,223,9],[186,14,223,10],[187,12,225,8,"console"],[187,19,225,15],[187,20,225,16,"log"],[187,23,225,19],[187,24,225,20],[187,64,225,60,"userId"],[187,70,225,66],[187,77,225,73,"currentDate"],[187,88,225,84],[187,90,225,86],[187,91,225,87],[188,10,226,6],[189,8,227,4],[189,9,227,5],[189,10,227,6],[189,17,227,13,"queryError"],[189,27,227,23],[189,29,227,25],[190,10,228,6,"console"],[190,17,228,13],[190,18,228,14,"log"],[190,21,228,17],[190,22,228,18],[190,70,228,66],[190,72,228,68,"queryError"],[190,82,228,78],[190,83,228,79],[191,10,229,6],[192,10,230,6],[192,16,230,12],[192,20,230,12,"setDoc"],[192,37,230,18],[192,39,230,19,"liveTrackingRef"],[192,54,230,34],[192,56,230,36],[193,12,231,8,"current_date"],[193,24,231,20],[193,26,231,22,"currentDate"],[193,37,231,33],[194,12,232,8,"user_id"],[194,19,232,15],[194,21,232,17,"userId"],[194,27,232,23],[195,12,233,8,"locations"],[195,21,233,17],[195,23,233,19],[195,24,233,20,"locationPoint"],[195,37,233,33],[195,38,233,34],[196,12,234,8,"created_at"],[196,22,234,18],[196,24,234,20],[196,28,234,20,"serverTimestamp"],[196,54,234,35],[196,56,234,36],[196,57,234,37],[197,12,235,8,"last_updated"],[197,24,235,20],[197,26,235,22],[197,30,235,22,"serverTimestamp"],[197,56,235,37],[197,58,235,38],[198,10,236,6],[198,11,236,7],[198,13,236,9],[199,12,236,11,"merge"],[199,17,236,16],[199,19,236,18],[200,10,236,23],[200,11,236,24],[200,12,236,25],[201,10,238,6,"console"],[201,17,238,13],[201,18,238,14,"log"],[201,21,238,17],[201,22,238,18],[201,63,238,59,"userId"],[201,69,238,65],[201,76,238,72,"currentDate"],[201,87,238,83],[201,89,238,85],[201,90,238,86],[202,8,239,4],[203,6,240,2],[203,7,240,3],[203,8,240,4],[203,15,240,11,"error"],[203,20,240,16],[203,22,240,18],[204,8,241,4,"console"],[204,15,241,11],[204,16,241,12,"error"],[204,21,241,17],[204,22,241,18],[204,57,241,53],[204,59,241,55,"error"],[204,64,241,60],[204,65,241,61],[205,6,242,2],[206,4,243,0],[206,5,243,1],[207,4,243,1],[207,20,181,6,"storeLiveTrackingData"],[207,41,181,27,"storeLiveTrackingData"],[207,42,181,27,"_x7"],[207,45,181,27],[207,47,181,27,"_x8"],[207,50,181,27],[208,6,181,27],[208,13,181,27,"_ref4"],[208,18,181,27],[208,19,181,27,"apply"],[208,24,181,27],[208,31,181,27,"arguments"],[208,40,181,27],[209,4,181,27],[210,2,181,27],[210,5,243,1],[211,2,254,0],[211,6,254,4,"distanceUpdateListener"],[211,28,254,57],[211,31,254,60],[211,35,254,64],[212,2,256,0],[212,6,256,6,"setDistanceUpdateListener"],[212,31,256,31],[212,34,256,35,"listener"],[212,42,256,74],[212,46,256,79],[213,4,257,2,"distanceUpdateListener"],[213,26,257,24],[213,29,257,27,"listener"],[213,37,257,35],[214,2,258,0],[214,3,258,1],[215,2,260,0],[215,6,260,6,"notifyDistanceUpdate"],[215,26,260,26],[215,29,260,30,"newTotal"],[215,37,260,46],[215,41,260,51],[216,4,261,2],[216,8,261,6],[217,6,262,4,"distanceUpdateListener"],[217,28,262,26],[217,31,262,29,"newTotal"],[217,39,262,37],[217,40,262,38],[218,4,263,2],[218,5,263,3],[218,6,263,4],[218,13,263,11,"listenerError"],[218,26,263,24],[218,28,263,26],[219,6,264,4,"console"],[219,13,264,11],[219,14,264,12,"error"],[219,19,264,17],[219,20,264,18],[219,64,264,62],[219,66,264,64,"listenerError"],[219,79,264,77],[219,80,264,78],[220,4,265,2],[221,2,266,0],[221,3,266,1],[222,2,268,0],[222,6,268,6,"processLocationForDistance"],[222,32,268,32],[223,4,268,32],[223,8,268,32,"_ref5"],[223,13,268,32],[223,20,268,32,"_asyncToGenerator2"],[223,38,268,32],[223,39,268,32,"default"],[223,46,268,32],[223,48,268,35],[223,59,269,2,"locationData"],[223,71,269,28],[223,73,270,2,"userIdHint"],[223,83,270,28],[223,85,271,20],[224,6,272,2],[224,10,272,6],[225,8,273,4],[225,12,273,10,"storedUserId"],[225,24,273,22],[225,27,273,25,"userIdHint"],[225,37,273,35],[225,48,273,46],[225,52,273,46,"_asyncToGenerator2"],[225,70,273,46],[225,71,273,46,"default"],[225,78,273,46],[225,80,273,47],[225,93,273,59],[226,10,274,6],[226,14,274,12,"storedUser"],[226,24,274,22],[226,33,274,31,"getStoredUser"],[226,46,274,44],[226,47,274,45],[226,48,274,46],[227,10,275,6],[227,17,275,13,"storedUser"],[227,27,275,23],[227,29,275,25,"id"],[227,31,275,27],[227,35,275,31],[227,39,275,35],[228,8,276,4],[228,9,276,5],[228,11,276,7],[228,12,276,8],[228,13,276,9],[229,8,278,4],[229,12,278,4,"_getStorageKeysForUse"],[229,33,278,4],[229,36,278,53,"getStorageKeysForUser"],[229,57,278,74],[229,58,278,75,"storedUserId"],[229,70,278,87],[229,71,278,88],[230,10,278,21,"historyKey"],[230,20,278,31],[230,23,278,31,"_getStorageKeysForUse"],[230,44,278,31],[230,45,278,12,"history"],[230,52,278,19],[231,10,278,40,"totalKey"],[231,18,278,48],[231,21,278,48,"_getStorageKeysForUse"],[231,42,278,48],[231,43,278,33,"total"],[231,48,278,38],[232,8,280,4],[232,12,280,10,"existingData"],[232,24,280,22],[232,33,280,31,"AsyncStorage"],[232,54,280,43],[232,55,280,44,"getItem"],[232,62,280,51],[232,63,280,52,"historyKey"],[232,73,280,62],[232,74,280,63],[233,8,281,4],[233,12,281,8,"locationHistory"],[233,27,281,39],[233,30,281,42],[233,32,281,44],[234,8,283,4],[234,12,283,8,"existingData"],[234,24,283,20],[234,26,283,22],[235,10,284,6],[235,14,284,10],[236,12,285,8,"locationHistory"],[236,27,285,23],[236,30,285,26,"JSON"],[236,34,285,30],[236,35,285,31,"parse"],[236,40,285,36],[236,41,285,37,"existingData"],[236,53,285,49],[236,54,285,68],[237,10,286,6],[237,11,286,7],[237,12,286,8],[237,19,286,15,"parseError"],[237,29,286,25],[237,31,286,27],[238,12,287,8,"console"],[238,19,287,15],[238,20,287,16,"warn"],[238,24,287,20],[238,25,287,21],[238,84,287,80],[238,86,287,82,"parseError"],[238,96,287,92],[238,97,287,93],[239,12,288,8,"locationHistory"],[239,27,288,23],[239,30,288,26],[239,32,288,28],[240,10,289,6],[241,8,290,4],[242,8,292,4],[242,12,292,8,"locationHistory"],[242,27,292,23],[242,28,292,24,"length"],[242,34,292,30],[242,37,292,33],[242,38,292,34],[242,40,292,36],[243,10,293,6],[243,14,293,12,"prevLocation"],[243,26,293,24],[243,29,293,27,"locationHistory"],[243,44,293,42],[243,45,293,43,"locationHistory"],[243,60,293,58],[243,61,293,59,"length"],[243,67,293,65],[243,70,293,68],[243,71,293,69],[243,72,293,70],[244,10,294,6],[244,14,294,12,"hasMeaningfulMovement"],[244,35,294,33],[244,38,295,8,"Math"],[244,42,295,12],[244,43,295,13,"abs"],[244,46,295,16],[244,47,295,17,"prevLocation"],[244,59,295,29],[244,60,295,30,"latitude"],[244,68,295,38],[244,71,295,41,"locationData"],[244,83,295,53],[244,84,295,54,"latitude"],[244,92,295,62],[244,93,295,63],[244,96,295,66],[244,100,295,70],[244,104,296,8,"Math"],[244,108,296,12],[244,109,296,13,"abs"],[244,112,296,16],[244,113,296,17,"prevLocation"],[244,125,296,29],[244,126,296,30,"longitude"],[244,135,296,39],[244,138,296,42,"locationData"],[244,150,296,54],[244,151,296,55,"longitude"],[244,160,296,64],[244,161,296,65],[244,164,296,68],[244,168,296,72],[245,10,298,6],[245,14,298,10,"hasMeaningfulMovement"],[245,35,298,31],[245,37,298,33],[246,12,299,8],[246,16,299,14,"distanceKm"],[246,26,299,24],[246,35,299,33,"getDrivingDistanceKm"],[246,55,299,53],[246,56,300,10,"prevLocation"],[246,68,300,22],[246,69,300,23,"latitude"],[246,77,300,31],[246,79,301,10,"prevLocation"],[246,91,301,22],[246,92,301,23,"longitude"],[246,101,301,32],[246,103,302,10,"locationData"],[246,115,302,22],[246,116,302,23,"latitude"],[246,124,302,31],[246,126,303,10,"locationData"],[246,138,303,22],[246,139,303,23,"longitude"],[246,148,304,8],[246,149,304,9],[247,12,306,8],[247,16,306,12,"distanceKm"],[247,26,306,22],[247,30,306,26],[247,34,306,30],[247,38,306,34,"Number"],[247,44,306,40],[247,45,306,41,"isFinite"],[247,53,306,49],[247,54,306,50,"distanceKm"],[247,64,306,60],[247,65,306,61],[247,67,306,63],[248,14,307,10],[248,18,307,16,"currentTotalStr"],[248,33,307,31],[248,42,307,40,"AsyncStorage"],[248,63,307,52],[248,64,307,53,"getItem"],[248,71,307,60],[248,72,307,61,"totalKey"],[248,80,307,69],[248,81,307,70],[249,14,308,10],[249,18,308,16,"currentTotal"],[249,30,308,28],[249,33,308,31,"currentTotalStr"],[249,48,308,46],[249,51,308,49,"parseFloat"],[249,61,308,59],[249,62,308,60,"currentTotalStr"],[249,77,308,75],[249,78,308,76],[249,81,308,79],[249,82,308,80],[250,14,309,10],[250,18,309,16,"newTotal"],[250,27,309,24],[250,30,309,27,"currentTotal"],[250,42,309,39],[250,45,309,42,"distanceKm"],[250,55,309,52],[251,14,310,10],[251,20,310,16,"AsyncStorage"],[251,41,310,28],[251,42,310,29,"setItem"],[251,49,310,36],[251,50,310,37,"totalKey"],[251,58,310,45],[251,60,310,47,"newTotal"],[251,69,310,55],[251,70,310,56,"toString"],[251,78,310,64],[251,79,310,65],[251,80,310,66],[251,81,310,67],[252,14,311,10,"notifyDistanceUpdate"],[252,34,311,30],[252,35,311,31,"newTotal"],[252,44,311,39],[252,45,311,40],[253,12,312,8],[253,13,312,9],[253,19,312,15],[254,14,313,10,"console"],[254,21,313,17],[254,22,313,18,"warn"],[254,26,313,22],[254,27,313,23],[254,106,313,102],[254,107,313,103],[255,12,314,8],[256,10,315,6],[257,8,316,4],[258,8,318,4,"locationHistory"],[258,23,318,19],[258,24,318,20,"push"],[258,28,318,24],[258,29,318,25,"locationData"],[258,41,318,37],[258,42,318,38],[259,8,320,4],[259,12,320,8,"locationHistory"],[259,27,320,23],[259,28,320,24,"length"],[259,34,320,30],[259,37,320,33,"HISTORY_LIMIT"],[259,50,320,46],[259,52,320,48],[260,10,321,6,"locationHistory"],[260,25,321,21],[260,26,321,22,"splice"],[260,32,321,28],[260,33,321,29],[260,34,321,30],[260,36,321,32,"locationHistory"],[260,51,321,47],[260,52,321,48,"length"],[260,58,321,54],[260,61,321,57,"HISTORY_LIMIT"],[260,74,321,70],[260,75,321,71],[261,8,322,4],[262,8,324,4],[262,14,324,10,"AsyncStorage"],[262,35,324,22],[262,36,324,23,"setItem"],[262,43,324,30],[262,44,324,31,"historyKey"],[262,54,324,41],[262,56,324,43,"JSON"],[262,60,324,47],[262,61,324,48,"stringify"],[262,70,324,57],[262,71,324,58,"locationHistory"],[262,86,324,73],[262,87,324,74],[262,88,324,75],[263,6,325,2],[263,7,325,3],[263,8,325,4],[263,15,325,11,"error"],[263,20,325,16],[263,22,325,18],[264,8,326,4,"console"],[264,15,326,11],[264,16,326,12,"error"],[264,21,326,17],[264,22,326,18],[264,63,326,59],[264,65,326,61,"error"],[264,70,326,66],[264,71,326,67],[265,6,327,2],[266,4,328,0],[266,5,328,1],[267,4,328,1],[267,20,268,6,"processLocationForDistance"],[267,46,268,32,"processLocationForDistance"],[267,47,268,32,"_x9"],[267,50,268,32],[267,52,268,32,"_x0"],[267,55,268,32],[268,6,268,32],[268,13,268,32,"_ref5"],[268,18,268,32],[268,19,268,32,"apply"],[268,24,268,32],[268,31,268,32,"arguments"],[268,40,268,32],[269,4,268,32],[270,2,268,32],[270,5,328,1],[271,2,356,0],[271,6,356,6,"LocationContext"],[271,21,356,21],[271,37,356,24],[271,41,356,24,"createContext"],[271,61,356,37],[271,63,356,71,"undefined"],[271,72,356,80],[271,73,356,81],[272,2,358,7],[272,6,358,13,"useLocation"],[272,17,358,24],[272,20,358,27,"useLocation"],[272,21,358,27],[272,26,358,33],[273,4,359,2],[273,8,359,8,"context"],[273,15,359,15],[273,18,359,18],[273,22,359,18,"useContext"],[273,39,359,28],[273,41,359,29,"LocationContext"],[273,56,359,44],[273,57,359,45],[274,4,360,2],[274,8,360,6],[274,9,360,7,"context"],[274,16,360,14],[274,18,360,16],[275,6,361,4],[275,12,361,10],[275,16,361,14,"Error"],[275,21,361,19],[275,22,361,20],[275,74,361,72],[275,75,361,73],[276,4,362,2],[277,4,363,2],[277,11,363,9,"context"],[277,18,363,16],[278,2,364,0],[278,3,364,1],[279,2,364,2,"exports"],[279,9,364,2],[279,10,364,2,"useLocation"],[279,21,364,2],[279,24,364,2,"useLocation"],[279,35,364,2],[280,2,366,0,"TaskManager"],[280,13,366,11],[280,14,366,12,"defineTask"],[280,24,366,22],[280,25,366,23,"LOCATION_TASK_NAME"],[280,43,366,41],[281,4,366,41],[281,8,366,41,"_ref8"],[281,13,366,41],[281,20,366,41,"_asyncToGenerator2"],[281,38,366,41],[281,39,366,41,"default"],[281,46,366,41],[281,48,366,43],[281,59,366,43,"_ref7"],[281,64,366,43],[281,66,366,70],[282,6,366,70],[282,10,366,52,"data"],[282,14,366,56],[282,17,366,56,"_ref7"],[282,22,366,56],[282,23,366,52,"data"],[282,27,366,56],[283,8,366,58,"error"],[283,13,366,63],[283,16,366,63,"_ref7"],[283,21,366,63],[283,22,366,58,"error"],[283,27,366,63],[284,6,367,2],[284,10,367,6,"error"],[284,15,367,11],[284,17,367,13],[285,8,368,4,"console"],[285,15,368,11],[285,16,368,12,"error"],[285,21,368,17],[285,22,368,18],[285,55,368,51],[285,57,368,53,"error"],[285,62,368,58],[285,63,368,59],[286,8,369,4],[287,6,370,2],[288,6,372,2],[288,10,372,6,"data"],[288,14,372,10],[288,16,372,12],[289,8,373,4],[289,12,373,4,"_ref9"],[289,17,373,4],[289,20,373,26,"data"],[289,24,373,30],[290,10,373,12,"locations"],[290,19,373,21],[290,22,373,21,"_ref9"],[290,27,373,21],[290,28,373,12,"locations"],[290,37,373,21],[291,8,374,4,"console"],[291,15,374,11],[291,16,374,12,"log"],[291,19,374,15],[291,20,374,16],[291,44,374,40],[291,46,374,42,"locations"],[291,55,374,51],[291,56,374,52],[292,8,376,4],[292,13,376,9],[292,17,376,15,"location"],[292,25,376,23],[292,29,376,27,"locations"],[292,38,376,36],[292,40,376,38],[293,10,377,6],[293,14,377,12,"locationData"],[293,26,377,38],[293,29,377,41],[294,12,378,8,"latitude"],[294,20,378,16],[294,22,378,18,"location"],[294,30,378,26],[294,31,378,27,"coords"],[294,37,378,33],[294,38,378,34,"latitude"],[294,46,378,42],[295,12,379,8,"longitude"],[295,21,379,17],[295,23,379,19,"location"],[295,31,379,27],[295,32,379,28,"coords"],[295,38,379,34],[295,39,379,35,"longitude"],[295,48,379,44],[296,12,380,8,"timestamp"],[296,21,380,17],[296,23,380,19,"location"],[296,31,380,27],[296,32,380,28,"timestamp"],[296,41,380,37],[297,12,381,8,"accuracy"],[297,20,381,16],[297,22,381,18,"location"],[297,30,381,26],[297,31,381,27,"coords"],[297,37,381,33],[297,38,381,34,"accuracy"],[297,46,381,42],[297,50,381,46,"undefined"],[298,10,382,6],[298,11,382,7],[299,10,384,6],[299,14,384,10],[300,12,385,8],[300,16,385,14,"storedUser"],[300,26,385,24],[300,35,385,33,"getStoredUser"],[300,48,385,46],[300,49,385,47],[300,50,385,48],[301,12,386,8],[301,18,386,14,"processLocationForDistance"],[301,44,386,40],[301,45,386,41,"locationData"],[301,57,386,53],[301,59,386,55,"storedUser"],[301,69,386,65],[301,71,386,67,"id"],[301,73,386,69],[301,77,386,73],[301,81,386,77],[301,82,386,78],[302,12,388,8],[302,16,388,12],[302,17,388,13,"storedUser"],[302,27,388,23],[302,29,388,25,"id"],[302,31,388,27],[302,33,388,29],[303,14,389,10],[304,12,390,8],[306,12,392,8],[307,12,393,8],[307,16,393,12],[308,14,394,10],[308,18,394,16,"historyDoc"],[308,28,394,26],[308,31,394,29],[309,16,395,12,"user_id"],[309,23,395,19],[309,25,395,21,"storedUser"],[309,35,395,31],[309,36,395,32,"id"],[309,38,395,34],[310,16,396,12,"latitude"],[310,24,396,20],[310,26,396,22,"locationData"],[310,38,396,34],[310,39,396,35,"latitude"],[310,47,396,43],[311,16,397,12,"longitude"],[311,25,397,21],[311,27,397,23,"locationData"],[311,39,397,35],[311,40,397,36,"longitude"],[311,49,397,45],[312,16,398,12,"timestamp"],[312,25,398,21],[312,27,398,23,"locationData"],[312,39,398,35],[312,40,398,36,"timestamp"],[312,49,398,45],[313,16,399,12,"accuracy"],[313,24,399,20],[313,26,399,22,"locationData"],[313,38,399,34],[313,39,399,35,"accuracy"],[313,47,399,43],[313,51,399,47],[313,55,399,51],[314,16,400,12,"created_at"],[314,26,400,22],[314,28,400,24],[314,32,400,24,"serverTimestamp"],[314,58,400,39],[314,60,400,40],[314,61,400,41],[315,16,401,12,"is_live_tracking"],[315,32,401,28],[315,34,401,30],[316,14,402,10],[316,15,402,11],[317,14,404,10],[317,20,404,16],[317,24,404,16,"addDoc"],[317,41,404,22],[317,43,404,23],[317,47,404,23,"collection"],[317,68,404,33],[317,70,404,34,"db"],[317,82,404,36],[317,84,404,38],[317,95,404,49],[317,96,404,50],[317,98,404,52,"historyDoc"],[317,108,404,62],[317,109,404,63],[319,14,406,10],[320,14,407,10],[320,18,407,16,"liveStatus"],[320,28,407,26],[320,37,407,35,"AsyncStorage"],[320,58,407,47],[320,59,407,48,"getItem"],[320,66,407,55],[320,67,407,56],[320,83,407,72,"storedUser"],[320,93,407,82],[320,94,407,83,"id"],[320,96,407,85],[320,98,407,87],[320,99,407,88],[321,14,408,10],[321,18,408,14,"liveStatus"],[321,28,408,24],[321,33,408,29],[321,39,408,35],[321,41,408,37],[322,16,409,12],[322,22,409,18],[322,26,409,18,"setDoc"],[322,43,409,24],[322,45,410,14],[322,49,410,14,"fsDoc"],[322,63,410,19],[322,65,410,20,"db"],[322,77,410,22],[322,79,410,24],[322,94,410,39],[322,96,410,41,"storedUser"],[322,106,410,51],[322,107,410,52,"id"],[322,109,410,54],[322,110,410,55],[322,112,411,14],[323,18,412,16,"user_id"],[323,25,412,23],[323,27,412,25,"storedUser"],[323,37,412,35],[323,38,412,36,"id"],[323,40,412,38],[324,18,413,16,"name"],[324,22,413,20],[324,24,413,22,"storedUser"],[324,34,413,32],[324,35,413,33,"name"],[324,39,413,37],[325,18,414,16,"latitude"],[325,26,414,24],[325,28,414,26,"locationData"],[325,40,414,38],[325,41,414,39,"latitude"],[325,49,414,47],[326,18,415,16,"longitude"],[326,27,415,25],[326,29,415,27,"locationData"],[326,41,415,39],[326,42,415,40,"longitude"],[326,51,415,49],[327,18,416,16,"accuracy"],[327,26,416,24],[327,28,416,26,"locationData"],[327,40,416,38],[327,41,416,39,"accuracy"],[327,49,416,47],[327,53,416,51],[327,57,416,55],[328,18,417,16,"last_update"],[328,29,417,27],[328,31,417,29],[328,35,417,29,"serverTimestamp"],[328,61,417,44],[328,63,417,45],[328,64,417,46],[329,18,418,16,"timestamp"],[329,27,418,25],[329,29,418,27,"locationData"],[329,41,418,39],[329,42,418,40,"timestamp"],[330,16,419,14],[330,17,419,15],[330,19,420,14],[331,18,420,16,"merge"],[331,23,420,21],[331,25,420,23],[332,16,420,28],[332,17,421,12],[332,18,421,13],[333,14,422,10],[334,12,423,8],[334,13,423,9],[334,14,423,10],[334,21,423,17,"persistErr"],[334,31,423,27],[334,33,423,29],[335,14,424,10,"console"],[335,21,424,17],[335,22,424,18,"error"],[335,27,424,23],[335,28,424,24],[335,70,424,66],[335,72,424,68,"persistErr"],[335,82,424,78],[335,83,424,79],[336,12,425,8],[337,10,426,6],[337,11,426,7],[337,12,426,8],[337,19,426,15,"err"],[337,22,426,18],[337,24,426,20],[338,12,427,8,"console"],[338,19,427,15],[338,20,427,16,"error"],[338,25,427,21],[338,26,427,22],[338,54,427,50],[338,56,427,52,"err"],[338,59,427,55],[338,60,427,56],[339,10,428,6],[340,8,429,4],[341,6,430,2],[342,4,431,0],[342,5,431,1],[343,4,431,1],[343,21,431,1,"_x1"],[343,24,431,1],[344,6,431,1],[344,13,431,1,"_ref8"],[344,18,431,1],[344,19,431,1,"apply"],[344,24,431,1],[344,31,431,1,"arguments"],[344,40,431,1],[345,4,431,1],[346,2,431,1],[346,6,431,2],[347,2,438,7],[347,6,438,13,"LocationProvider"],[347,22,438,62],[347,25,438,65,"_ref0"],[347,30,438,65],[347,34,438,83],[348,4,438,83],[348,8,438,68,"children"],[348,16,438,76],[348,19,438,76,"_ref0"],[348,24,438,76],[348,25,438,68,"children"],[348,33,438,76],[349,4,439,2],[349,8,439,2,"_useState"],[349,17,439,2],[349,20,439,48],[349,24,439,48,"useState"],[349,39,439,56],[349,41,439,78],[349,45,439,82],[349,46,439,83],[350,6,439,83,"_useState2"],[350,16,439,83],[350,23,439,83,"_slicedToArray2"],[350,38,439,83],[350,39,439,83,"default"],[350,46,439,83],[350,48,439,83,"_useState"],[350,57,439,83],[351,6,439,9,"currentLocation"],[351,21,439,24],[351,24,439,24,"_useState2"],[351,34,439,24],[352,6,439,26,"setCurrentLocation"],[352,24,439,44],[352,27,439,44,"_useState2"],[352,37,439,44],[353,4,440,2],[353,8,440,2,"_useState3"],[353,18,440,2],[353,21,440,38],[353,25,440,38,"useState"],[353,40,440,46],[353,42,440,47],[353,47,440,52],[353,48,440,53],[354,6,440,53,"_useState4"],[354,16,440,53],[354,23,440,53,"_slicedToArray2"],[354,38,440,53],[354,39,440,53,"default"],[354,46,440,53],[354,48,440,53,"_useState3"],[354,58,440,53],[355,6,440,9,"isTracking"],[355,16,440,19],[355,19,440,19,"_useState4"],[355,29,440,19],[356,6,440,21,"setIsTracking"],[356,19,440,34],[356,22,440,34,"_useState4"],[356,32,440,34],[357,4,441,2],[357,8,441,2,"_useState5"],[357,18,441,2],[357,21,441,44],[357,25,441,44,"useState"],[357,40,441,52],[357,42,441,53],[357,43,441,54],[357,44,441,55],[358,6,441,55,"_useState6"],[358,16,441,55],[358,23,441,55,"_slicedToArray2"],[358,38,441,55],[358,39,441,55,"default"],[358,46,441,55],[358,48,441,55,"_useState5"],[358,58,441,55],[359,6,441,9,"totalDistance"],[359,19,441,22],[359,22,441,22,"_useState6"],[359,32,441,22],[360,6,441,24,"setTotalDistance"],[360,22,441,40],[360,25,441,40,"_useState6"],[360,35,441,40],[361,4,442,2],[362,4,443,2],[362,8,443,2,"_useState7"],[362,18,443,2],[362,21,443,46],[362,25,443,46,"useState"],[362,40,443,54],[362,42,443,55],[362,47,443,60],[362,48,443,61],[363,6,443,61,"_useState8"],[363,16,443,61],[363,23,443,61,"_slicedToArray2"],[363,38,443,61],[363,39,443,61,"default"],[363,46,443,61],[363,48,443,61,"_useState7"],[363,58,443,61],[364,6,443,9,"isLiveTracking"],[364,20,443,23],[364,23,443,23,"_useState8"],[364,33,443,23],[365,6,443,25,"setIsLiveTracking"],[365,23,443,42],[365,26,443,42,"_useState8"],[365,36,443,42],[366,4,444,2],[366,8,444,2,"_useState9"],[366,18,444,2],[366,21,444,36],[366,25,444,36,"useState"],[366,40,444,44],[366,42,449,6],[366,44,449,8],[366,45,449,9],[367,6,449,9,"_useState0"],[367,16,449,9],[367,23,449,9,"_slicedToArray2"],[367,38,449,9],[367,39,449,9,"default"],[367,46,449,9],[367,48,449,9,"_useState9"],[367,58,449,9],[368,6,444,9,"liveUsers"],[368,15,444,18],[368,18,444,18,"_useState0"],[368,28,444,18],[369,6,444,20,"setLiveUsers"],[369,18,444,32],[369,21,444,32,"_useState0"],[369,31,444,32],[370,4,450,2],[370,8,450,2,"_useState1"],[370,18,450,2],[370,21,450,58],[370,25,450,58,"useState"],[370,40,450,66],[370,42,450,106],[370,46,450,110],[370,47,450,111],[371,6,450,111,"_useState10"],[371,17,450,111],[371,24,450,111,"_slicedToArray2"],[371,39,450,111],[371,40,450,111,"default"],[371,47,450,111],[371,49,450,111,"_useState1"],[371,59,450,111],[372,6,450,9,"liveTrackingInterval"],[372,26,450,29],[372,29,450,29,"_useState10"],[372,40,450,29],[373,6,450,31,"setLiveTrackingInterval"],[373,29,450,54],[373,32,450,54,"_useState10"],[373,43,450,54],[374,4,452,2],[374,8,452,2,"_useAuth"],[374,16,452,2],[374,19,452,19],[374,23,452,19,"useAuth"],[374,43,452,26],[374,45,452,27],[374,46,452,28],[375,6,452,10,"user"],[375,10,452,14],[375,13,452,14,"_useAuth"],[375,21,452,14],[375,22,452,10,"user"],[375,26,452,14],[376,4,454,2],[376,8,454,2,"useEffect"],[376,24,454,11],[376,26,454,12],[376,32,454,18],[377,6,455,4],[377,10,455,10,"listener"],[377,18,455,42],[377,21,455,46,"newTotal"],[377,29,455,62],[377,33,455,67],[378,8,456,6,"setTotalDistance"],[378,24,456,22],[378,25,456,23,"newTotal"],[378,33,456,31],[378,34,456,32],[379,6,457,4],[379,7,457,5],[380,6,458,4,"setDistanceUpdateListener"],[380,31,458,29],[380,32,458,30,"listener"],[380,40,458,38],[380,41,458,39],[381,6,459,4],[381,13,459,11],[381,19,459,17,"setDistanceUpdateListener"],[381,44,459,42],[381,45,459,43],[381,49,459,47],[381,50,459,48],[382,4,460,2],[382,5,460,3],[382,7,460,5],[382,9,460,7],[382,10,460,8],[383,4,462,2],[383,8,462,2,"useEffect"],[383,24,462,11],[383,26,462,12],[383,32,462,18],[384,6,463,4,"checkTrackingStatus"],[384,25,463,23],[384,26,463,24],[384,27,463,25],[385,6,464,4,"getCurrentLocation"],[385,24,464,22],[385,25,464,23],[385,26,464,24],[386,6,465,4,"calculateTotalDistance"],[386,28,465,26],[386,29,465,27],[386,30,465,28],[387,4,466,2],[387,5,466,3],[387,7,466,5],[387,8,466,6,"user"],[387,12,466,10],[387,13,466,11],[387,14,466,12],[388,4,468,2],[388,8,468,8,"checkTrackingStatus"],[388,27,468,27],[389,6,468,27],[389,10,468,27,"_ref1"],[389,15,468,27],[389,22,468,27,"_asyncToGenerator2"],[389,40,468,27],[389,41,468,27,"default"],[389,48,468,27],[389,50,468,30],[389,63,468,42],[390,8,469,4],[390,12,469,8],[390,13,469,9,"user"],[390,17,469,13],[390,19,469,15],[391,8,471,4],[391,12,471,8],[392,10,472,6],[392,14,472,12,"trackingStatus"],[392,28,472,26],[392,37,472,35,"AsyncStorage"],[392,58,472,47],[392,59,472,48,"getItem"],[392,66,472,55],[392,67,472,56],[392,79,472,68,"user"],[392,83,472,72],[392,84,472,73,"id"],[392,86,472,75],[392,88,472,77],[392,89,472,78],[393,10,473,6],[393,14,473,10,"trackingStatus"],[393,28,473,24],[393,33,473,29],[393,39,473,35],[393,41,473,37],[394,12,474,8],[394,16,474,14,"isTaskRunning"],[394,29,474,27],[394,38,474,36,"Location"],[394,46,474,44],[394,47,474,45,"hasStartedLocationUpdatesAsync"],[394,77,474,75],[394,78,474,76,"LOCATION_TASK_NAME"],[394,96,474,94],[394,97,474,95],[395,12,475,8,"setIsTracking"],[395,25,475,21],[395,26,475,22,"isTaskRunning"],[395,39,475,35],[395,40,475,36],[397,12,477,8],[398,12,478,8],[398,16,478,14,"liveStatus"],[398,26,478,24],[398,35,478,33,"AsyncStorage"],[398,56,478,45],[398,57,478,46,"getItem"],[398,64,478,53],[398,65,478,54],[398,81,478,70,"user"],[398,85,478,74],[398,86,478,75,"id"],[398,88,478,77],[398,90,478,79],[398,91,478,80],[399,12,479,8,"setIsLiveTracking"],[399,29,479,25],[399,30,479,26,"liveStatus"],[399,40,479,36],[399,45,479,41],[399,51,479,47],[399,55,479,51,"isTaskRunning"],[399,68,479,64],[399,69,479,65],[400,10,480,6],[401,8,481,4],[401,9,481,5],[401,10,481,6],[401,17,481,13,"error"],[401,22,481,18],[401,24,481,20],[402,10,482,6,"console"],[402,17,482,13],[402,18,482,14,"error"],[402,23,482,19],[402,24,482,20],[402,57,482,53],[402,59,482,55,"error"],[402,64,482,60],[402,65,482,61],[403,8,483,4],[404,6,484,2],[404,7,484,3],[405,6,484,3],[405,22,468,8,"checkTrackingStatus"],[405,41,468,27,"checkTrackingStatus"],[405,42,468,27],[406,8,468,27],[406,15,468,27,"_ref1"],[406,20,468,27],[406,21,468,27,"apply"],[406,26,468,27],[406,33,468,27,"arguments"],[406,42,468,27],[407,6,468,27],[408,4,468,27],[408,7,484,3],[409,4,486,2],[409,8,486,8,"getCurrentLocation"],[409,26,486,26],[410,6,486,26],[410,10,486,26,"_ref10"],[410,16,486,26],[410,23,486,26,"_asyncToGenerator2"],[410,41,486,26],[410,42,486,26,"default"],[410,49,486,26],[410,51,486,29],[410,64,486,41],[411,8,487,4],[411,12,487,8],[412,10,488,6],[412,14,488,6,"_yield$Location$reque"],[412,35,488,6],[412,44,488,31,"Location"],[412,52,488,39],[412,53,488,40,"requestForegroundPermissionsAsync"],[412,86,488,73],[412,87,488,74],[412,88,488,75],[413,12,488,14,"status"],[413,18,488,20],[413,21,488,20,"_yield$Location$reque"],[413,42,488,20],[413,43,488,14,"status"],[413,49,488,20],[414,10,489,6],[414,14,489,10,"status"],[414,20,489,16],[414,25,489,21],[414,34,489,30],[414,36,489,32],[415,12,490,8,"console"],[415,19,490,15],[415,20,490,16,"log"],[415,23,490,19],[415,24,490,20],[415,57,490,53],[415,58,490,54],[416,12,491,8],[417,10,492,6],[418,10,494,6],[418,14,494,12,"location"],[418,22,494,20],[418,31,494,29,"Location"],[418,39,494,37],[418,40,494,38,"getCurrentPositionAsync"],[418,63,494,61],[418,64,494,62],[418,65,494,63],[418,66,494,64],[418,67,494,65],[419,10,495,6],[419,14,495,12,"locationData"],[419,26,495,38],[419,29,495,41],[420,12,496,8,"latitude"],[420,20,496,16],[420,22,496,18,"location"],[420,30,496,26],[420,31,496,27,"coords"],[420,37,496,33],[420,38,496,34,"latitude"],[420,46,496,42],[421,12,497,8,"longitude"],[421,21,497,17],[421,23,497,19,"location"],[421,31,497,27],[421,32,497,28,"coords"],[421,38,497,34],[421,39,497,35,"longitude"],[421,48,497,44],[422,12,498,8,"timestamp"],[422,21,498,17],[422,23,498,19,"location"],[422,31,498,27],[422,32,498,28,"timestamp"],[422,41,498,37],[423,12,499,8,"accuracy"],[423,20,499,16],[423,22,499,18,"location"],[423,30,499,26],[423,31,499,27,"coords"],[423,37,499,33],[423,38,499,34,"accuracy"],[423,46,499,42],[423,50,499,46,"undefined"],[424,10,500,6],[424,11,500,7],[425,10,502,6,"setCurrentLocation"],[425,28,502,24],[425,29,502,25,"locationData"],[425,41,502,37],[425,42,502,38],[426,8,503,4],[426,9,503,5],[426,10,503,6],[426,17,503,13,"error"],[426,22,503,18],[426,24,503,20],[427,10,504,6,"console"],[427,17,504,13],[427,18,504,14,"error"],[427,23,504,19],[427,24,504,20],[427,57,504,53],[427,59,504,55,"error"],[427,64,504,60],[427,65,504,61],[428,8,505,4],[429,6,506,2],[429,7,506,3],[430,6,506,3],[430,22,486,8,"getCurrentLocation"],[430,40,486,26,"getCurrentLocation"],[430,41,486,26],[431,8,486,26],[431,15,486,26,"_ref10"],[431,21,486,26],[431,22,486,26,"apply"],[431,27,486,26],[431,34,486,26,"arguments"],[431,43,486,26],[432,6,486,26],[433,4,486,26],[433,7,506,3],[434,4,508,2],[434,8,508,8,"refreshTotalDistanceFromFirebase"],[434,40,508,40],[435,6,508,40],[435,10,508,40,"_ref11"],[435,16,508,40],[435,23,508,40,"_asyncToGenerator2"],[435,41,508,40],[435,42,508,40,"default"],[435,49,508,40],[435,51,508,43],[435,64,508,55],[436,8,509,4],[436,12,509,8],[436,13,509,9,"user"],[436,17,509,13],[436,19,509,15,"id"],[436,21,509,17],[436,23,509,19],[437,8,511,4],[437,12,511,8],[438,10,512,6],[438,14,512,12,"currentDate"],[438,25,512,23],[438,28,512,26,"getCurrentDateString"],[438,48,512,46],[438,49,512,47],[438,50,512,48],[439,10,513,6],[439,14,513,12,"docId"],[439,19,513,17],[439,22,513,20],[439,25,513,23,"currentDate"],[439,36,513,34],[439,40,513,38,"user"],[439,44,513,42],[439,45,513,43,"id"],[439,47,513,45],[439,49,513,47],[441,10,515,6],[442,10,516,6],[442,14,516,12,"travelledDocRef"],[442,29,516,27],[442,32,516,30],[442,36,516,30,"fsDoc"],[442,50,516,35],[442,52,516,36,"db"],[442,64,516,38],[442,66,516,40],[442,77,516,51],[442,79,516,53,"docId"],[442,84,516,58],[442,85,516,59],[443,10,517,6],[443,14,517,12,"travelledSnapshot"],[443,31,517,29],[443,40,517,38],[443,44,517,38,"getDocs"],[443,62,517,45],[443,64,517,46],[443,68,517,46,"query"],[443,84,517,51],[443,86,517,52],[443,90,517,52,"collection"],[443,111,517,62],[443,113,517,63,"db"],[443,125,517,65],[443,127,517,67],[443,138,517,78],[443,139,517,79],[443,141,517,81],[443,145,517,81,"where"],[443,161,517,86],[443,163,517,87],[443,177,517,101],[443,179,517,103],[443,183,517,107],[443,185,517,109,"currentDate"],[443,196,517,120],[443,197,517,121],[443,199,517,123],[443,203,517,123,"where"],[443,219,517,128],[443,221,517,129],[443,230,517,138],[443,232,517,140],[443,236,517,144],[443,238,517,146,"user"],[443,242,517,150],[443,243,517,151,"id"],[443,245,517,153],[443,246,517,154],[443,247,517,155],[443,248,517,156],[444,10,519,6],[444,14,519,10],[444,15,519,11,"travelledSnapshot"],[444,32,519,28],[444,33,519,29,"empty"],[444,38,519,34],[444,40,519,36],[445,12,520,8],[445,16,520,14,"data"],[445,20,520,18],[445,23,520,21,"travelledSnapshot"],[445,40,520,38],[445,41,520,39,"docs"],[445,45,520,43],[445,46,520,44],[445,47,520,45],[445,48,520,46],[445,49,520,47,"data"],[445,53,520,51],[445,54,520,52],[445,55,520,53],[446,12,521,8],[446,16,521,14,"firebaseDistance"],[446,32,521,30],[446,35,521,33,"data"],[446,39,521,37],[446,40,521,38,"travelled_distance_kms"],[446,62,521,60],[446,66,521,64],[446,67,521,65],[448,12,523,8],[449,12,524,8],[449,18,524,14,"AsyncStorage"],[449,39,524,26],[449,40,524,27,"setItem"],[449,47,524,34],[449,48,524,35],[449,63,524,50],[449,65,524,52,"firebaseDistance"],[449,81,524,68],[449,82,524,69,"toString"],[449,90,524,77],[449,91,524,78],[449,92,524,79],[449,93,524,80],[450,12,525,8,"setTotalDistance"],[450,28,525,24],[450,29,525,25,"firebaseDistance"],[450,45,525,41],[450,46,525,42],[451,12,527,8,"console"],[451,19,527,15],[451,20,527,16,"log"],[451,23,527,19],[451,24,527,20],[451,64,527,60,"firebaseDistance"],[451,80,527,76],[451,81,527,77,"toFixed"],[451,88,527,84],[451,89,527,85],[451,90,527,86],[451,91,527,87],[451,96,527,92],[451,97,527,93],[452,10,528,6],[452,11,528,7],[452,17,528,13],[453,12,529,8],[454,12,530,8],[454,18,530,14,"AsyncStorage"],[454,39,530,26],[454,40,530,27,"setItem"],[454,47,530,34],[454,48,530,35],[454,63,530,50],[454,65,530,52],[454,68,530,55],[454,69,530,56],[455,12,531,8,"setTotalDistance"],[455,28,531,24],[455,29,531,25],[455,30,531,26],[455,31,531,27],[456,12,532,8,"console"],[456,19,532,15],[456,20,532,16,"log"],[456,23,532,19],[456,24,532,20],[456,70,532,66],[456,71,532,67],[457,10,533,6],[458,8,534,4],[458,9,534,5],[458,10,534,6],[458,17,534,13,"error"],[458,22,534,18],[458,24,534,20],[459,10,535,6,"console"],[459,17,535,13],[459,18,535,14,"error"],[459,23,535,19],[459,24,535,20],[459,66,535,62],[459,68,535,64,"error"],[459,73,535,69],[459,74,535,70],[460,10,536,6],[461,8,537,4],[462,6,538,2],[462,7,538,3],[463,6,538,3],[463,22,508,8,"refreshTotalDistanceFromFirebase"],[463,54,508,40,"refreshTotalDistanceFromFirebase"],[463,55,508,40],[464,8,508,40],[464,15,508,40,"_ref11"],[464,21,508,40],[464,22,508,40,"apply"],[464,27,508,40],[464,34,508,40,"arguments"],[464,43,508,40],[465,6,508,40],[466,4,508,40],[466,7,538,3],[467,4,540,2],[467,8,540,8,"calculateTotalDistance"],[467,30,540,30],[468,6,540,30],[468,10,540,30,"_ref12"],[468,16,540,30],[468,23,540,30,"_asyncToGenerator2"],[468,41,540,30],[468,42,540,30,"default"],[468,49,540,30],[468,51,540,33],[468,64,540,45],[469,8,541,4],[469,12,541,8],[469,13,541,9,"user"],[469,17,541,13],[469,19,541,15,"id"],[469,21,541,17],[469,23,541,19],[470,10,542,6,"setTotalDistance"],[470,26,542,22],[470,27,542,23],[470,28,542,24],[470,29,542,25],[471,10,543,6],[472,8,544,4],[473,8,546,4],[473,12,546,8],[474,10,547,6],[475,10,548,6],[475,14,548,6,"_getStorageKeysForUse2"],[475,36,548,6],[475,39,548,34,"getStorageKeysForUser"],[475,60,548,55],[475,61,548,56,"user"],[475,65,548,60],[475,66,548,61,"id"],[475,68,548,63],[475,69,548,64],[476,12,548,21,"totalKey"],[476,20,548,29],[476,23,548,29,"_getStorageKeysForUse2"],[476,45,548,29],[476,46,548,14,"total"],[476,51,548,19],[477,10,549,6],[477,14,549,12,"totalDistanceStr"],[477,30,549,28],[477,33,550,8],[477,40,550,15,"AsyncStorage"],[477,61,550,27],[477,62,550,28,"getItem"],[477,69,550,35],[477,70,550,36,"totalKey"],[477,78,550,44],[477,79,550,45],[477,91,551,15,"AsyncStorage"],[477,112,551,27],[477,113,551,28,"getItem"],[477,120,551,35],[477,121,551,36,"DEFAULT_TOTAL_KEY"],[477,138,551,53],[477,139,551,54],[477,140,551,55],[477,151,552,15,"AsyncStorage"],[477,172,552,27],[477,173,552,28,"getItem"],[477,180,552,35],[477,181,552,36],[477,196,552,51],[477,197,552,52],[477,198,552,53],[478,10,554,6],[478,14,554,10,"totalDistanceStr"],[478,30,554,26],[478,32,554,28],[479,12,555,8],[479,16,555,14,"parsed"],[479,22,555,20],[479,25,555,23,"parseFloat"],[479,35,555,33],[479,36,555,34,"totalDistanceStr"],[479,52,555,50],[479,53,555,51],[480,12,556,8,"setTotalDistance"],[480,28,556,24],[480,29,556,25,"Number"],[480,35,556,31],[480,36,556,32,"isFinite"],[480,44,556,40],[480,45,556,41,"parsed"],[480,51,556,47],[480,52,556,48],[480,55,556,51,"parsed"],[480,61,556,57],[480,64,556,60],[480,65,556,61],[480,66,556,62],[482,12,558,8],[483,12,559,8],[483,18,559,14,"refreshTotalDistanceFromFirebase"],[483,50,559,46],[483,51,559,47],[483,52,559,48],[484,12,560,8],[485,10,561,6],[487,10,563,6],[488,10,564,6],[488,16,564,12,"refreshTotalDistanceFromFirebase"],[488,48,564,44],[488,49,564,45],[488,50,564,46],[489,8,565,4],[489,9,565,5],[489,10,565,6],[489,17,565,13,"error"],[489,22,565,18],[489,24,565,20],[490,10,566,6,"console"],[490,17,566,13],[490,18,566,14,"error"],[490,23,566,19],[490,24,566,20],[490,59,566,55],[490,61,566,57,"error"],[490,66,566,62],[490,67,566,63],[491,10,567,6,"setTotalDistance"],[491,26,567,22],[491,27,567,23],[491,28,567,24],[491,29,567,25],[492,8,568,4],[493,6,569,2],[493,7,569,3],[494,6,569,3],[494,22,540,8,"calculateTotalDistance"],[494,44,540,30,"calculateTotalDistance"],[494,45,540,30],[495,8,540,30],[495,15,540,30,"_ref12"],[495,21,540,30],[495,22,540,30,"apply"],[495,27,540,30],[495,34,540,30,"arguments"],[495,43,540,30],[496,6,540,30],[497,4,540,30],[497,7,569,3],[498,4,571,2],[498,8,571,8,"refreshTotalDistance"],[498,28,571,28],[499,6,571,28],[499,10,571,28,"_ref13"],[499,16,571,28],[499,23,571,28,"_asyncToGenerator2"],[499,41,571,28],[499,42,571,28,"default"],[499,49,571,28],[499,51,571,31],[499,64,571,58],[500,8,572,4],[500,14,572,10,"refreshTotalDistanceFromFirebase"],[500,46,572,42],[500,47,572,43],[500,48,572,44],[501,6,573,2],[501,7,573,3],[502,6,573,3],[502,22,571,8,"refreshTotalDistance"],[502,42,571,28,"refreshTotalDistance"],[502,43,571,28],[503,8,571,28],[503,15,571,28,"_ref13"],[503,21,571,28],[503,22,571,28,"apply"],[503,27,571,28],[503,34,571,28,"arguments"],[503,43,571,28],[504,6,571,28],[505,4,571,28],[505,7,573,3],[506,4,575,2],[506,8,575,8,"startTracking"],[506,21,575,21],[507,6,575,21],[507,10,575,21,"_ref14"],[507,16,575,21],[507,23,575,21,"_asyncToGenerator2"],[507,41,575,21],[507,42,575,21,"default"],[507,49,575,21],[507,51,575,24],[507,64,575,51],[508,8,576,4],[508,12,576,8],[508,13,576,9,"user"],[508,17,576,13],[508,19,576,15],[509,8,578,4],[509,12,578,8],[510,10,579,6],[510,14,579,6,"_yield$Location$reque2"],[510,36,579,6],[510,45,579,49,"Location"],[510,53,579,57],[510,54,579,58,"requestForegroundPermissionsAsync"],[510,87,579,91],[510,88,579,92],[510,89,579,93],[511,12,579,22,"foregroundStatus"],[511,28,579,38],[511,31,579,38,"_yield$Location$reque2"],[511,53,579,38],[511,54,579,14,"status"],[511,60,579,20],[512,10,580,6],[512,14,580,10,"foregroundStatus"],[512,30,580,26],[512,35,580,31],[512,44,580,40],[512,46,580,42],[513,12,581,8],[513,18,581,14],[513,22,581,18,"Error"],[513,27,581,23],[513,28,581,24],[513,72,581,68],[513,73,581,69],[514,10,582,6],[515,10,584,6],[515,14,584,6,"_yield$Location$reque3"],[515,36,584,6],[515,45,584,49,"Location"],[515,53,584,57],[515,54,584,58,"requestBackgroundPermissionsAsync"],[515,87,584,91],[515,88,584,92],[515,89,584,93],[516,12,584,22,"backgroundStatus"],[516,28,584,38],[516,31,584,38,"_yield$Location$reque3"],[516,53,584,38],[516,54,584,14,"status"],[516,60,584,20],[517,10,585,6],[517,14,585,10,"backgroundStatus"],[517,30,585,26],[517,35,585,31],[517,44,585,40],[517,46,585,42],[518,12,586,8,"console"],[518,19,586,15],[518,20,586,16,"warn"],[518,24,586,20],[518,25,586,21],[518,94,586,90],[518,95,586,91],[519,10,587,6],[520,10,589,6],[520,16,589,12,"Location"],[520,24,589,20],[520,25,589,21,"startLocationUpdatesAsync"],[520,50,589,46],[520,51,589,47,"LOCATION_TASK_NAME"],[520,69,589,65],[520,71,589,67],[521,12,590,8,"accuracy"],[521,20,590,16],[521,22,590,18,"Location"],[521,30,590,26],[521,31,590,27,"Accuracy"],[521,39,590,35],[521,40,590,36,"High"],[521,44,590,40],[522,12,591,8,"timeInterval"],[522,24,591,20],[522,26,591,22],[522,31,591,27],[523,12,591,29],[524,12,592,8,"distanceInterval"],[524,28,592,24],[524,30,592,26],[524,32,592,28],[525,12,592,30],[526,12,593,8,"foregroundService"],[526,29,593,25],[526,31,593,27],[527,14,594,10,"notificationTitle"],[527,31,594,27],[527,33,594,29],[527,59,594,55],[528,14,595,10,"notificationBody"],[528,30,595,26],[528,32,595,28],[528,81,595,77],[529,14,596,10,"notificationColor"],[529,31,596,27],[529,33,596,29],[530,12,597,8],[531,10,598,6],[531,11,598,7],[531,12,598,8],[532,10,600,6],[532,16,600,12,"AsyncStorage"],[532,37,600,24],[532,38,600,25,"setItem"],[532,45,600,32],[532,46,600,33],[532,58,600,45,"user"],[532,62,600,49],[532,63,600,50,"id"],[532,65,600,52],[532,67,600,54],[532,69,600,56],[532,75,600,62],[532,76,600,63],[533,10,601,6,"setIsTracking"],[533,23,601,19],[533,24,601,20],[533,28,601,24],[533,29,601,25],[534,8,602,4],[534,9,602,5],[534,10,602,6],[534,17,602,13,"error"],[534,22,602,18],[534,24,602,20],[535,10,603,6,"console"],[535,17,603,13],[535,18,603,14,"error"],[535,23,603,19],[535,24,603,20],[535,59,603,55],[535,61,603,57,"error"],[535,66,603,62],[535,67,603,63],[536,10,604,6],[536,16,604,12,"error"],[536,21,604,17],[537,8,605,4],[538,6,606,2],[538,7,606,3],[539,6,606,3],[539,22,575,8,"startTracking"],[539,35,575,21,"startTracking"],[539,36,575,21],[540,8,575,21],[540,15,575,21,"_ref14"],[540,21,575,21],[540,22,575,21,"apply"],[540,27,575,21],[540,34,575,21,"arguments"],[540,43,575,21],[541,6,575,21],[542,4,575,21],[542,7,606,3],[543,4,608,2],[543,8,608,8,"stopTracking"],[543,20,608,20],[544,6,608,20],[544,10,608,20,"_ref15"],[544,16,608,20],[544,23,608,20,"_asyncToGenerator2"],[544,41,608,20],[544,42,608,20,"default"],[544,49,608,20],[544,51,608,23],[544,64,608,50],[545,8,609,4],[545,12,609,8],[545,13,609,9,"user"],[545,17,609,13],[545,19,609,15],[546,8,611,4],[546,12,611,8],[547,10,612,6],[547,14,612,12,"hasStarted"],[547,24,612,22],[547,33,612,31,"Location"],[547,41,612,39],[547,42,612,40,"hasStartedLocationUpdatesAsync"],[547,72,612,70],[547,73,612,71,"LOCATION_TASK_NAME"],[547,91,612,89],[547,92,612,90],[548,10,613,6],[548,14,613,10,"hasStarted"],[548,24,613,20],[548,26,613,22],[549,12,614,8],[549,18,614,14,"Location"],[549,26,614,22],[549,27,614,23,"stopLocationUpdatesAsync"],[549,51,614,47],[549,52,614,48,"LOCATION_TASK_NAME"],[549,70,614,66],[549,71,614,67],[550,10,615,6],[551,10,617,6],[551,16,617,12,"AsyncStorage"],[551,37,617,24],[551,38,617,25,"setItem"],[551,45,617,32],[551,46,617,33],[551,58,617,45,"user"],[551,62,617,49],[551,63,617,50,"id"],[551,65,617,52],[551,67,617,54],[551,69,617,56],[551,76,617,63],[551,77,617,64],[552,10,618,6,"setIsTracking"],[552,23,618,19],[552,24,618,20],[552,29,618,25],[552,30,618,26],[553,8,619,4],[553,9,619,5],[553,10,619,6],[553,17,619,13,"error"],[553,22,619,18],[553,24,619,20],[554,10,620,6,"console"],[554,17,620,13],[554,18,620,14,"error"],[554,23,620,19],[554,24,620,20],[554,59,620,55],[554,61,620,57,"error"],[554,66,620,62],[554,67,620,63],[555,10,621,6],[555,16,621,12,"error"],[555,21,621,17],[556,8,622,4],[557,6,623,2],[557,7,623,3],[558,6,623,3],[558,22,608,8,"stopTracking"],[558,34,608,20,"stopTracking"],[558,35,608,20],[559,8,608,20],[559,15,608,20,"_ref15"],[559,21,608,20],[559,22,608,20,"apply"],[559,27,608,20],[559,34,608,20,"arguments"],[559,43,608,20],[560,6,608,20],[561,4,608,20],[561,7,623,3],[562,4,625,2],[562,8,625,8,"getLocationHistory"],[562,26,625,26],[563,6,625,26],[563,10,625,26,"_ref16"],[563,16,625,26],[563,23,625,26,"_asyncToGenerator2"],[563,41,625,26],[563,42,625,26,"default"],[563,49,625,26],[563,51,625,29],[563,64,625,66],[564,8,626,4],[564,12,626,8],[564,13,626,9,"user"],[564,17,626,13],[564,19,626,15,"id"],[564,21,626,17],[564,23,626,19],[565,10,627,6],[565,17,627,13],[565,19,627,15],[566,8,628,4],[567,8,630,4],[567,12,630,8],[568,10,631,6],[568,14,631,6,"_getStorageKeysForUse3"],[568,36,631,6],[568,39,631,38,"getStorageKeysForUser"],[568,60,631,59],[568,61,631,60,"user"],[568,65,631,64],[568,66,631,65,"id"],[568,68,631,67],[568,69,631,68],[569,12,631,23,"historyKey"],[569,22,631,33],[569,25,631,33,"_getStorageKeysForUse3"],[569,47,631,33],[569,48,631,14,"history"],[569,55,631,21],[570,10,632,6],[570,14,632,12,"historyData"],[570,25,632,23],[570,28,633,8],[570,35,633,15,"AsyncStorage"],[570,56,633,27],[570,57,633,28,"getItem"],[570,64,633,35],[570,65,633,36,"historyKey"],[570,75,633,46],[570,76,633,47],[570,88,634,15,"AsyncStorage"],[570,109,634,27],[570,110,634,28,"getItem"],[570,117,634,35],[570,118,634,36,"DEFAULT_HISTORY_KEY"],[570,137,634,55],[570,138,634,56],[570,139,634,57],[571,10,635,6],[571,17,635,13,"historyData"],[571,28,635,24],[571,31,635,28,"JSON"],[571,35,635,32],[571,36,635,33,"parse"],[571,41,635,38],[571,42,635,39,"historyData"],[571,53,635,50],[571,54,635,51],[571,57,635,73],[571,59,635,75],[572,8,636,4],[572,9,636,5],[572,10,636,6],[572,17,636,13,"error"],[572,22,636,18],[572,24,636,20],[573,10,637,6,"console"],[573,17,637,13],[573,18,637,14,"error"],[573,23,637,19],[573,24,637,20],[573,57,637,53],[573,59,637,55,"error"],[573,64,637,60],[573,65,637,61],[574,10,638,6],[574,17,638,13],[574,19,638,15],[575,8,639,4],[576,6,640,2],[576,7,640,3],[577,6,640,3],[577,22,625,8,"getLocationHistory"],[577,40,625,26,"getLocationHistory"],[577,41,625,26],[578,8,625,26],[578,15,625,26,"_ref16"],[578,21,625,26],[578,22,625,26,"apply"],[578,27,625,26],[578,34,625,26,"arguments"],[578,43,625,26],[579,6,625,26],[580,4,625,26],[580,7,640,3],[582,4,642,2],[583,4,643,2],[583,8,643,8,"startUnifiedTracking"],[583,28,643,28],[584,6,643,28],[584,10,643,28,"_ref17"],[584,16,643,28],[584,23,643,28,"_asyncToGenerator2"],[584,41,643,28],[584,42,643,28,"default"],[584,49,643,28],[584,51,643,31],[584,64,643,58],[585,8,644,4],[585,12,644,8],[585,13,644,9,"user"],[585,17,644,13],[585,19,644,15],[586,8,646,4],[586,12,646,8],[587,10,647,6],[587,14,647,6,"_yield$Location$reque4"],[587,36,647,6],[587,45,647,31,"Location"],[587,53,647,39],[587,54,647,40,"requestForegroundPermissionsAsync"],[587,87,647,73],[587,88,647,74],[587,89,647,75],[588,12,647,14,"status"],[588,18,647,20],[588,21,647,20,"_yield$Location$reque4"],[588,43,647,20],[588,44,647,14,"status"],[588,50,647,20],[589,10,648,6],[589,14,648,10,"status"],[589,20,648,16],[589,25,648,21],[589,34,648,30],[589,36,648,32],[590,12,649,8],[590,18,649,14],[590,22,649,18,"Error"],[590,27,649,23],[590,28,649,24],[590,61,649,57],[590,62,649,58],[591,10,650,6],[592,10,652,6],[592,14,652,6,"_yield$Location$reque5"],[592,36,652,6],[592,45,652,49,"Location"],[592,53,652,57],[592,54,652,58,"requestBackgroundPermissionsAsync"],[592,87,652,91],[592,88,652,92],[592,89,652,93],[593,12,652,22,"backgroundStatus"],[593,28,652,38],[593,31,652,38,"_yield$Location$reque5"],[593,53,652,38],[593,54,652,14,"status"],[593,60,652,20],[594,10,653,6],[594,14,653,10,"backgroundStatus"],[594,30,653,26],[594,35,653,31],[594,44,653,40],[594,46,653,42],[595,12,654,8,"console"],[595,19,654,15],[595,20,654,16,"warn"],[595,24,654,20],[595,25,654,21],[595,94,654,90],[595,95,654,91],[596,10,655,6],[598,10,657,6],[599,10,658,6],[599,16,658,12,"Location"],[599,24,658,20],[599,25,658,21,"startLocationUpdatesAsync"],[599,50,658,46],[599,51,658,47,"LOCATION_TASK_NAME"],[599,69,658,65],[599,71,658,67],[600,12,659,8,"accuracy"],[600,20,659,16],[600,22,659,18,"Location"],[600,30,659,26],[600,31,659,27,"Accuracy"],[600,39,659,35],[600,40,659,36,"High"],[600,44,659,40],[601,12,659,42],[602,12,660,8,"timeInterval"],[602,24,660,20],[602,26,660,22],[602,31,660,27],[603,12,660,29],[604,12,661,8,"distanceInterval"],[604,28,661,24],[604,30,661,26],[604,32,661,28],[605,12,661,30],[606,12,662,8,"foregroundService"],[606,29,662,25],[606,31,662,27],[607,14,663,10,"notificationTitle"],[607,31,663,27],[607,33,663,29],[607,59,663,55],[608,14,664,10,"notificationBody"],[608,30,664,26],[608,32,664,28],[608,89,664,85],[609,14,665,10,"notificationColor"],[609,31,665,27],[609,33,665,29],[610,12,666,8],[611,10,667,6],[611,11,667,7],[611,12,667,8],[613,10,669,6],[614,10,670,6],[614,16,670,12],[614,20,670,12,"setDoc"],[614,37,670,18],[614,39,671,8],[614,43,671,8,"fsDoc"],[614,57,671,13],[614,59,671,14,"db"],[614,71,671,16],[614,73,671,18],[614,88,671,33],[614,90,671,35,"user"],[614,94,671,39],[614,95,671,40,"id"],[614,97,671,43],[614,98,671,44],[614,100,672,8],[615,12,673,10,"user_id"],[615,19,673,17],[615,21,673,19,"user"],[615,25,673,23],[615,26,673,24,"id"],[615,28,673,26],[616,12,674,10,"name"],[616,16,674,14],[616,18,674,16,"user"],[616,22,674,20],[616,23,674,21,"name"],[616,27,674,25],[617,12,675,10,"is_active"],[617,21,675,19],[617,23,675,21],[617,27,675,25],[618,12,676,10,"started_at"],[618,22,676,20],[618,24,676,22],[618,28,676,22,"serverTimestamp"],[618,54,676,37],[618,56,676,38],[618,57,676,39],[619,12,677,10,"last_update"],[619,23,677,21],[619,25,677,23],[619,29,677,23,"serverTimestamp"],[619,55,677,38],[619,57,677,39],[619,58,677,40],[620,12,678,10,"latitude"],[620,20,678,18],[620,22,678,20],[620,26,678,24],[621,12,679,10,"longitude"],[621,21,679,19],[621,23,679,21],[621,27,679,25],[622,12,680,10,"accuracy"],[622,20,680,18],[622,22,680,20],[623,10,681,8],[623,11,681,9],[623,13,682,8],[624,12,682,10,"merge"],[624,17,682,15],[624,19,682,17],[625,10,682,22],[625,11,683,6],[625,12,683,7],[627,10,685,6],[628,10,686,6],[628,14,686,12,"interval"],[628,22,686,20],[628,25,686,23,"setInterval"],[628,36,686,34],[628,54,686,34,"_asyncToGenerator2"],[628,72,686,34],[628,73,686,34,"default"],[628,80,686,34],[628,82,686,35],[628,95,686,47],[629,12,687,8],[629,16,687,12],[630,14,688,10],[630,18,688,16,"location"],[630,26,688,24],[630,35,688,33,"Location"],[630,43,688,41],[630,44,688,42,"getCurrentPositionAsync"],[630,67,688,65],[630,68,688,66],[631,16,689,12,"accuracy"],[631,24,689,20],[631,26,689,22,"Location"],[631,34,689,30],[631,35,689,31,"Accuracy"],[631,43,689,39],[631,44,689,40,"High"],[632,14,690,10],[632,15,690,11],[632,16,690,12],[633,14,692,10],[633,18,692,16,"locationData"],[633,30,692,42],[633,33,692,45],[634,16,693,12,"latitude"],[634,24,693,20],[634,26,693,22,"location"],[634,34,693,30],[634,35,693,31,"coords"],[634,41,693,37],[634,42,693,38,"latitude"],[634,50,693,46],[635,16,694,12,"longitude"],[635,25,694,21],[635,27,694,23,"location"],[635,35,694,31],[635,36,694,32,"coords"],[635,42,694,38],[635,43,694,39,"longitude"],[635,52,694,48],[636,16,695,12,"timestamp"],[636,25,695,21],[636,27,695,23,"location"],[636,35,695,31],[636,36,695,32,"timestamp"],[636,45,695,41],[637,16,696,12,"accuracy"],[637,24,696,20],[637,26,696,22,"location"],[637,34,696,30],[637,35,696,31,"coords"],[637,41,696,37],[637,42,696,38,"accuracy"],[637,50,696,46],[637,54,696,50,"undefined"],[638,14,697,10],[638,15,697,11],[639,14,699,10],[639,20,699,16,"processLocationForDistance"],[639,46,699,42],[639,47,699,43,"locationData"],[639,59,699,55],[639,61,699,57,"user"],[639,65,699,61],[639,67,699,63,"id"],[639,69,699,65],[639,73,699,69],[639,77,699,73],[639,78,699,74],[640,14,701,10,"setCurrentLocation"],[640,32,701,28],[640,33,701,29,"locationData"],[640,45,701,41],[640,46,701,42],[642,14,703,10],[643,14,704,10],[643,18,704,14],[644,16,706,12],[644,22,706,18],[644,26,706,18,"setDoc"],[644,43,706,24],[644,45,707,14],[644,49,707,14,"fsDoc"],[644,63,707,19],[644,65,707,20,"db"],[644,77,707,22],[644,79,707,24],[644,94,707,39],[644,96,707,41,"user"],[644,100,707,45],[644,101,707,46,"id"],[644,103,707,49],[644,104,707,50],[644,106,708,14],[645,18,709,16,"latitude"],[645,26,709,24],[645,28,709,26,"locationData"],[645,40,709,38],[645,41,709,39,"latitude"],[645,49,709,47],[646,18,710,16,"longitude"],[646,27,710,25],[646,29,710,27,"locationData"],[646,41,710,39],[646,42,710,40,"longitude"],[646,51,710,49],[647,18,711,16,"accuracy"],[647,26,711,24],[647,28,711,26,"locationData"],[647,40,711,38],[647,41,711,39,"accuracy"],[647,49,711,47],[647,53,711,51],[647,57,711,55],[648,18,712,16,"last_update"],[648,29,712,27],[648,31,712,29],[648,35,712,29,"serverTimestamp"],[648,61,712,44],[648,63,712,45],[648,64,712,46],[649,18,713,16,"timestamp"],[649,27,713,25],[649,29,713,27,"locationData"],[649,41,713,39],[649,42,713,40,"timestamp"],[650,16,714,14],[650,17,714,15],[650,19,715,14],[651,18,715,16,"merge"],[651,23,715,21],[651,25,715,23],[652,16,715,28],[652,17,716,12],[652,18,716,13],[654,16,718,12],[655,16,719,12],[655,20,719,16,"user"],[655,24,719,20],[655,25,719,21,"id"],[655,27,719,23],[655,29,719,25],[656,18,720,14],[656,24,720,20,"storeLiveTrackingData"],[656,45,720,41],[656,46,720,42,"user"],[656,50,720,46],[656,51,720,47,"id"],[656,53,720,49],[656,55,720,51,"locationData"],[656,67,720,63],[656,68,720,64],[657,16,721,12],[659,16,723,12],[660,16,724,12],[660,22,724,18],[660,26,724,18,"addDoc"],[660,43,724,24],[660,45,724,25],[660,49,724,25,"collection"],[660,70,724,35],[660,72,724,36,"db"],[660,84,724,38],[660,86,724,40],[660,97,724,51],[660,98,724,52],[660,100,724,54],[661,18,725,14,"user_id"],[661,25,725,21],[661,27,725,23,"user"],[661,31,725,27],[661,32,725,28,"id"],[661,34,725,30],[662,18,726,14,"latitude"],[662,26,726,22],[662,28,726,24,"locationData"],[662,40,726,36],[662,41,726,37,"latitude"],[662,49,726,45],[663,18,727,14,"longitude"],[663,27,727,23],[663,29,727,25,"locationData"],[663,41,727,37],[663,42,727,38,"longitude"],[663,51,727,47],[664,18,728,14,"timestamp"],[664,27,728,23],[664,29,728,25,"locationData"],[664,41,728,37],[664,42,728,38,"timestamp"],[664,51,728,47],[665,18,729,14,"accuracy"],[665,26,729,22],[665,28,729,24,"locationData"],[665,40,729,36],[665,41,729,37,"accuracy"],[665,49,729,45],[665,53,729,49],[665,57,729,53],[666,18,730,14,"created_at"],[666,28,730,24],[666,30,730,26],[666,34,730,26,"serverTimestamp"],[666,60,730,41],[666,62,730,42],[666,63,730,43],[667,18,731,14,"is_live_tracking"],[667,34,731,30],[667,36,731,32],[668,16,732,12],[668,17,732,13],[668,18,732,14],[669,14,733,10],[669,15,733,11],[669,16,733,12],[669,23,733,19,"err"],[669,26,733,22],[669,28,733,24],[670,16,734,12,"console"],[670,23,734,19],[670,24,734,20,"error"],[670,29,734,25],[670,30,734,26],[670,73,734,69],[670,75,734,71,"err"],[670,78,734,74],[670,79,734,75],[671,14,735,10],[672,12,737,8],[672,13,737,9],[672,14,737,10],[672,21,737,17,"error"],[672,26,737,22],[672,28,737,24],[673,14,738,10,"console"],[673,21,738,17],[673,22,738,18,"error"],[673,27,738,23],[673,28,738,24],[673,58,738,54],[673,60,738,56,"error"],[673,65,738,61],[673,66,738,62],[674,12,739,8],[675,10,740,6],[675,11,740,7],[675,14,740,9],[675,19,740,14],[675,20,740,15],[675,21,740,16],[675,22,740,17],[677,10,742,6,"setLiveTrackingInterval"],[677,33,742,29],[677,34,742,30,"interval"],[677,42,742,38],[677,43,742,39],[678,10,743,6,"setIsTracking"],[678,23,743,19],[678,24,743,20],[678,28,743,24],[678,29,743,25],[679,10,744,6,"setIsLiveTracking"],[679,27,744,23],[679,28,744,24],[679,32,744,28],[679,33,744,29],[680,10,745,6],[680,16,745,12,"AsyncStorage"],[680,37,745,24],[680,38,745,25,"setItem"],[680,45,745,32],[680,46,745,33],[680,58,745,45,"user"],[680,62,745,49],[680,63,745,50,"id"],[680,65,745,52],[680,67,745,54],[680,69,745,56],[680,75,745,62],[680,76,745,63],[681,10,746,6],[681,16,746,12,"AsyncStorage"],[681,37,746,24],[681,38,746,25,"setItem"],[681,45,746,32],[681,46,746,33],[681,62,746,49,"user"],[681,66,746,53],[681,67,746,54,"id"],[681,69,746,56],[681,71,746,58],[681,73,746,60],[681,79,746,66],[681,80,746,67],[682,8,748,4],[682,9,748,5],[682,10,748,6],[682,17,748,13,"error"],[682,22,748,18],[682,24,748,20],[683,10,749,6,"console"],[683,17,749,13],[683,18,749,14,"error"],[683,23,749,19],[683,24,749,20],[683,58,749,54],[683,60,749,56,"error"],[683,65,749,61],[683,66,749,62],[684,10,750,6],[684,16,750,12,"error"],[684,21,750,17],[685,8,751,4],[686,6,752,2],[686,7,752,3],[687,6,752,3],[687,22,643,8,"startUnifiedTracking"],[687,42,643,28,"startUnifiedTracking"],[687,43,643,28],[688,8,643,28],[688,15,643,28,"_ref17"],[688,21,643,28],[688,22,643,28,"apply"],[688,27,643,28],[688,34,643,28,"arguments"],[688,43,643,28],[689,6,643,28],[690,4,643,28],[690,7,752,3],[691,4,754,2],[691,8,754,8,"stopUnifiedTracking"],[691,27,754,27],[692,6,754,27],[692,10,754,27,"_ref19"],[692,16,754,27],[692,23,754,27,"_asyncToGenerator2"],[692,41,754,27],[692,42,754,27,"default"],[692,49,754,27],[692,51,754,30],[692,64,754,57],[693,8,755,4],[693,12,755,8],[693,13,755,9,"user"],[693,17,755,13],[693,19,755,15],[694,8,757,4],[694,12,757,8],[695,10,758,6],[696,10,759,6],[696,14,759,12,"hasStarted"],[696,24,759,22],[696,33,759,31,"Location"],[696,41,759,39],[696,42,759,40,"hasStartedLocationUpdatesAsync"],[696,72,759,70],[696,73,759,71,"LOCATION_TASK_NAME"],[696,91,759,89],[696,92,759,90],[697,10,760,6],[697,14,760,10,"hasStarted"],[697,24,760,20],[697,26,760,22],[698,12,761,8],[698,18,761,14,"Location"],[698,26,761,22],[698,27,761,23,"stopLocationUpdatesAsync"],[698,51,761,47],[698,52,761,48,"LOCATION_TASK_NAME"],[698,70,761,66],[698,71,761,67],[699,10,762,6],[701,10,764,6],[702,10,765,6],[702,16,765,12],[702,20,765,12,"setDoc"],[702,37,765,18],[702,39,766,8],[702,43,766,8,"fsDoc"],[702,57,766,13],[702,59,766,14,"db"],[702,71,766,16],[702,73,766,18],[702,88,766,33],[702,90,766,35,"user"],[702,94,766,39],[702,95,766,40,"id"],[702,97,766,43],[702,98,766,44],[702,100,767,8],[703,12,767,10,"is_active"],[703,21,767,19],[703,23,767,21],[703,28,767,26],[704,12,767,28,"stopped_at"],[704,22,767,38],[704,24,767,40],[704,28,767,40,"serverTimestamp"],[704,54,767,55],[704,56,767,56],[705,10,767,58],[705,11,767,59],[705,13,768,8],[706,12,768,10,"merge"],[706,17,768,15],[706,19,768,17],[707,10,768,22],[707,11,769,6],[707,12,769,7],[709,10,771,6],[710,10,772,6],[710,14,772,10,"liveTrackingInterval"],[710,34,772,30],[710,36,772,32],[711,12,773,8,"clearInterval"],[711,25,773,21],[711,26,773,22,"liveTrackingInterval"],[711,46,773,42],[711,47,773,43],[712,12,774,8,"setLiveTrackingInterval"],[712,35,774,31],[712,36,774,32],[712,40,774,36],[712,41,774,37],[713,10,775,6],[714,10,777,6,"setIsTracking"],[714,23,777,19],[714,24,777,20],[714,29,777,25],[714,30,777,26],[715,10,778,6,"setIsLiveTracking"],[715,27,778,23],[715,28,778,24],[715,33,778,29],[715,34,778,30],[716,10,779,6],[716,16,779,12,"AsyncStorage"],[716,37,779,24],[716,38,779,25,"setItem"],[716,45,779,32],[716,46,779,33],[716,58,779,45,"user"],[716,62,779,49],[716,63,779,50,"id"],[716,65,779,52],[716,67,779,54],[716,69,779,56],[716,76,779,63],[716,77,779,64],[717,10,780,6],[717,16,780,12,"AsyncStorage"],[717,37,780,24],[717,38,780,25,"setItem"],[717,45,780,32],[717,46,780,33],[717,62,780,49,"user"],[717,66,780,53],[717,67,780,54,"id"],[717,69,780,56],[717,71,780,58],[717,73,780,60],[717,80,780,67],[717,81,780,68],[718,8,782,4],[718,9,782,5],[718,10,782,6],[718,17,782,13,"error"],[718,22,782,18],[718,24,782,20],[719,10,783,6,"console"],[719,17,783,13],[719,18,783,14,"error"],[719,23,783,19],[719,24,783,20],[719,58,783,54],[719,60,783,56,"error"],[719,65,783,61],[719,66,783,62],[720,10,784,6],[720,16,784,12,"error"],[720,21,784,17],[721,8,785,4],[722,6,786,2],[722,7,786,3],[723,6,786,3],[723,22,754,8,"stopUnifiedTracking"],[723,41,754,27,"stopUnifiedTracking"],[723,42,754,27],[724,8,754,27],[724,15,754,27,"_ref19"],[724,21,754,27],[724,22,754,27,"apply"],[724,27,754,27],[724,34,754,27,"arguments"],[724,43,754,27],[725,6,754,27],[726,4,754,27],[726,7,786,3],[728,4,788,2],[729,4,789,2],[729,8,789,8,"startLiveTracking"],[729,25,789,25],[730,6,789,25],[730,10,789,25,"_ref20"],[730,16,789,25],[730,23,789,25,"_asyncToGenerator2"],[730,41,789,25],[730,42,789,25,"default"],[730,49,789,25],[730,51,789,28],[730,64,789,55],[731,8,790,4],[731,15,790,11,"startUnifiedTracking"],[731,35,790,31],[731,36,790,32],[731,37,790,33],[732,6,791,2],[732,7,791,3],[733,6,791,3],[733,22,789,8,"startLiveTracking"],[733,39,789,25,"startLiveTracking"],[733,40,789,25],[734,8,789,25],[734,15,789,25,"_ref20"],[734,21,789,25],[734,22,789,25,"apply"],[734,27,789,25],[734,34,789,25,"arguments"],[734,43,789,25],[735,6,789,25],[736,4,789,25],[736,7,791,3],[737,4,793,2],[737,8,793,8,"stopLiveTracking"],[737,24,793,24],[738,6,793,24],[738,10,793,24,"_ref21"],[738,16,793,24],[738,23,793,24,"_asyncToGenerator2"],[738,41,793,24],[738,42,793,24,"default"],[738,49,793,24],[738,51,793,27],[738,64,793,54],[739,8,794,4],[739,15,794,11,"stopUnifiedTracking"],[739,34,794,30],[739,35,794,31],[739,36,794,32],[740,6,795,2],[740,7,795,3],[741,6,795,3],[741,22,793,8,"stopLiveTracking"],[741,38,793,24,"stopLiveTracking"],[741,39,793,24],[742,8,793,24],[742,15,793,24,"_ref21"],[742,21,793,24],[742,22,793,24,"apply"],[742,27,793,24],[742,34,793,24,"arguments"],[742,43,793,24],[743,6,793,24],[744,4,793,24],[744,7,795,3],[745,4,797,2],[745,8,797,8,"getLiveTrackingUsers"],[745,28,797,28],[745,31,797,31],[745,35,797,31,"useCallback"],[745,53,797,42],[745,72,797,42,"_asyncToGenerator2"],[745,90,797,42],[745,91,797,42,"default"],[745,98,797,42],[745,100,797,43],[745,113,797,70],[746,6,798,4],[746,10,798,8],[746,11,798,9,"user"],[746,15,798,13],[746,19,798,17,"user"],[746,23,798,21],[746,24,798,22,"role"],[746,28,798,26],[746,33,798,31],[746,40,798,38],[746,42,798,40],[747,6,800,4],[747,10,800,8],[748,8,801,6],[749,8,802,6],[749,12,802,12,"snap"],[749,16,802,16],[749,25,802,25],[749,29,802,25,"getDocs"],[749,47,802,32],[749,49,802,33],[749,53,802,33,"collection"],[749,74,802,43],[749,76,802,44,"db"],[749,88,802,46],[749,90,802,48],[749,105,802,63],[749,106,802,64],[749,107,802,65],[750,8,803,6],[750,12,803,12,"allUsers"],[750,20,803,20],[750,23,803,23,"snap"],[750,27,803,27],[750,28,803,28,"docs"],[750,32,803,32],[750,33,803,33,"map"],[750,36,803,36],[750,37,803,37,"d"],[750,38,803,38],[750,42,803,42,"d"],[750,43,803,43],[750,44,803,44,"data"],[750,48,803,48],[750,49,803,49],[750,50,803,57],[750,51,803,58],[752,8,805,6],[753,8,806,6],[753,12,806,12,"twoMinutesAgo"],[753,25,806,25],[753,28,806,28,"Date"],[753,32,806,32],[753,33,806,33,"now"],[753,36,806,36],[753,37,806,37],[753,38,806,38],[753,47,806,54],[754,8,807,6],[754,12,807,12,"activeUsers"],[754,23,807,23],[754,26,807,26,"allUsers"],[754,34,807,34],[754,35,807,35,"filter"],[754,41,807,41],[754,42,807,42,"u"],[754,43,807,43],[754,47,807,47],[755,10,808,8],[755,14,808,12],[755,15,808,13,"u"],[755,16,808,14],[755,17,808,15,"is_active"],[755,26,808,24],[755,30,808,28],[755,31,808,29,"u"],[755,32,808,30],[755,33,808,31,"latitude"],[755,41,808,39],[755,45,808,43],[755,46,808,44,"u"],[755,47,808,45],[755,48,808,46,"longitude"],[755,57,808,55],[755,59,808,57],[755,66,808,64],[755,71,808,69],[756,10,810,8],[756,14,810,14,"lastUpdate"],[756,24,810,24],[756,27,810,27,"u"],[756,28,810,28],[756,29,810,29,"last_update"],[756,40,810,40],[756,52,810,52,"Timestamp"],[756,72,810,61],[756,75,811,12,"u"],[756,76,811,13],[756,77,811,14,"last_update"],[756,88,811,25],[756,89,811,26,"toMillis"],[756,97,811,34],[756,98,811,35],[756,99,811,36],[756,102,812,13,"u"],[756,103,812,14],[756,104,812,15,"last_update"],[756,115,812,26],[756,118,812,29],[756,122,812,33,"Date"],[756,126,812,37],[756,127,812,38,"u"],[756,128,812,39],[756,129,812,40,"last_update"],[756,140,812,51],[756,141,812,52],[756,142,812,53,"getTime"],[756,149,812,60],[756,150,812,61],[756,151,812,62],[756,154,812,65],[756,155,812,67],[757,10,814,8],[757,17,814,15,"lastUpdate"],[757,27,814,25],[757,30,814,28,"twoMinutesAgo"],[757,43,814,41],[758,8,815,6],[758,9,815,7],[758,10,815,8],[759,8,817,6],[759,12,817,12,"users"],[759,17,817,17],[759,20,817,20,"activeUsers"],[759,31,817,31],[759,32,817,32,"map"],[759,35,817,35],[759,36,817,36,"u"],[759,37,817,37],[759,42,817,42],[760,10,818,8,"userId"],[760,16,818,14],[760,18,818,16,"u"],[760,19,818,17],[760,20,818,18,"user_id"],[760,27,818,25],[761,10,819,8,"name"],[761,14,819,12],[761,16,819,14,"u"],[761,17,819,15],[761,18,819,16,"name"],[761,22,819,20],[762,10,820,8,"location"],[762,18,820,16],[762,20,820,18],[763,12,821,10,"latitude"],[763,20,821,18],[763,22,821,20,"u"],[763,23,821,21],[763,24,821,22,"latitude"],[763,32,821,30],[764,12,822,10,"longitude"],[764,21,822,19],[764,23,822,21,"u"],[764,24,822,22],[764,25,822,23,"longitude"],[764,34,822,32],[765,12,823,10,"timestamp"],[765,21,823,19],[765,23,823,21,"u"],[765,24,823,22],[765,25,823,23,"timestamp"],[765,34,823,32],[766,12,824,10,"accuracy"],[766,20,824,18],[766,22,824,20,"u"],[766,23,824,21],[766,24,824,22,"accuracy"],[766,32,824,30],[766,36,824,34,"undefined"],[767,10,825,8],[767,11,825,9],[768,10,826,8,"lastUpdate"],[768,20,826,18],[768,22,826,20,"u"],[768,23,826,21],[768,24,826,22,"last_update"],[768,35,826,33],[768,47,826,45,"Timestamp"],[768,67,826,54],[768,70,827,12,"u"],[768,71,827,13],[768,72,827,14,"last_update"],[768,83,827,25],[768,84,827,26,"toMillis"],[768,92,827,34],[768,93,827,35],[768,94,827,36],[768,97,828,13,"u"],[768,98,828,14],[768,99,828,15,"last_update"],[768,110,828,26],[768,113,828,29],[768,117,828,33,"Date"],[768,121,828,37],[768,122,828,38,"u"],[768,123,828,39],[768,124,828,40,"last_update"],[768,135,828,51],[768,136,828,52],[768,137,828,53,"getTime"],[768,144,828,60],[768,145,828,61],[768,146,828,62],[768,149,828,65,"Date"],[768,153,828,69],[768,154,828,70,"now"],[768,157,828,73],[768,158,828,74],[769,8,829,6],[769,9,829,7],[769,10,829,8],[769,11,829,9],[770,8,831,6,"setLiveUsers"],[770,20,831,18],[770,21,831,19,"users"],[770,26,831,24],[770,27,831,25],[771,6,832,4],[771,7,832,5],[771,8,832,6],[771,15,832,13,"error"],[771,20,832,18],[771,22,832,20],[772,8,833,6,"console"],[772,15,833,13],[772,16,833,14,"error"],[772,21,833,19],[772,22,833,20],[772,58,833,56],[772,60,833,58,"error"],[772,65,833,63],[772,66,833,64],[773,8,834,6],[774,8,835,6,"setLiveUsers"],[774,20,835,18],[774,21,835,19],[774,23,835,21],[774,24,835,22],[775,6,836,4],[776,4,837,2],[776,5,837,3],[776,8,837,5],[776,9,837,6,"user"],[776,13,837,10],[776,14,837,11],[776,15,837,12],[778,4,839,2],[779,4,840,2],[779,8,840,2,"useEffect"],[779,24,840,11],[779,26,840,12],[779,32,840,18],[780,6,841,4],[780,10,841,10,"checkLiveTrackingStatus"],[780,33,841,33],[781,8,841,33],[781,12,841,33,"_ref23"],[781,18,841,33],[781,25,841,33,"_asyncToGenerator2"],[781,43,841,33],[781,44,841,33,"default"],[781,51,841,33],[781,53,841,36],[781,66,841,48],[782,10,842,6],[782,14,842,10],[782,15,842,11,"user"],[782,19,842,15],[782,21,842,17],[783,10,844,6],[783,14,844,10],[784,12,845,8],[784,16,845,14,"liveTrackingStatus"],[784,34,845,32],[784,43,845,41,"AsyncStorage"],[784,64,845,53],[784,65,845,54,"getItem"],[784,72,845,61],[784,73,845,62],[784,89,845,78,"user"],[784,93,845,82],[784,94,845,83,"id"],[784,96,845,85],[784,98,845,87],[784,99,845,88],[785,12,846,8],[785,16,846,12,"liveTrackingStatus"],[785,34,846,30],[785,39,846,35],[785,45,846,41],[785,47,846,43],[786,14,847,10],[787,14,848,10],[787,20,848,16,"startUnifiedTracking"],[787,40,848,36],[787,41,848,37],[787,42,848,38],[788,12,849,8],[789,10,850,6],[789,11,850,7],[789,12,850,8],[789,19,850,15,"error"],[789,24,850,20],[789,26,850,22],[790,12,851,8,"console"],[790,19,851,15],[790,20,851,16,"error"],[790,25,851,21],[790,26,851,22],[790,64,851,60],[790,66,851,62,"error"],[790,71,851,67],[790,72,851,68],[791,10,852,6],[792,8,853,4],[792,9,853,5],[793,8,853,5],[793,24,841,10,"checkLiveTrackingStatus"],[793,47,841,33,"checkLiveTrackingStatus"],[793,48,841,33],[794,10,841,33],[794,17,841,33,"_ref23"],[794,23,841,33],[794,24,841,33,"apply"],[794,29,841,33],[794,36,841,33,"arguments"],[794,45,841,33],[795,8,841,33],[796,6,841,33],[796,9,853,5],[797,6,855,4,"checkLiveTrackingStatus"],[797,29,855,27],[797,30,855,28],[797,31,855,29],[799,6,857,4],[800,6,858,4],[800,10,858,8,"user"],[800,14,858,12],[800,16,858,14,"role"],[800,20,858,18],[800,25,858,23],[800,32,858,30],[800,34,858,32],[801,8,859,6,"getLiveTrackingUsers"],[801,28,859,26],[801,29,859,27],[801,30,859,28],[802,8,860,6],[802,12,860,12,"adminInterval"],[802,25,860,25],[802,28,860,28,"setInterval"],[802,39,860,39],[802,40,860,40,"getLiveTrackingUsers"],[802,60,860,60],[802,62,860,62],[802,67,860,67],[802,68,860,68],[802,69,860,69],[802,70,860,70],[803,8,861,6],[803,15,861,13],[803,21,861,19,"clearInterval"],[803,34,861,32],[803,35,861,33,"adminInterval"],[803,48,861,46],[803,49,861,47],[804,6,862,4],[805,4,863,2],[805,5,863,3],[805,7,863,5],[805,8,863,6,"user"],[805,12,863,10],[805,14,863,12,"getLiveTrackingUsers"],[805,34,863,32],[805,35,863,33],[805,36,863,34],[807,4,865,2],[808,4,866,2],[808,8,866,2,"useEffect"],[808,24,866,11],[808,26,866,12],[808,32,866,18],[809,6,867,4],[809,13,867,11],[809,19,867,17],[810,8,868,6],[810,12,868,10,"liveTrackingInterval"],[810,32,868,30],[810,34,868,32],[811,10,869,8,"clearInterval"],[811,23,869,21],[811,24,869,22,"liveTrackingInterval"],[811,44,869,42],[811,45,869,43],[812,8,870,6],[813,6,871,4],[813,7,871,5],[814,4,872,2],[814,5,872,3],[814,7,872,5],[814,8,872,6,"liveTrackingInterval"],[814,28,872,26],[814,29,872,27],[814,30,872,28],[816,4,874,2],[817,4,875,2],[817,8,875,2,"useEffect"],[817,24,875,11],[817,26,875,12],[817,32,875,18],[818,6,876,4],[818,10,876,8],[818,11,876,9,"user"],[818,15,876,13],[818,17,876,15],[819,6,878,4],[819,10,878,10,"distanceRefreshInterval"],[819,33,878,33],[819,36,878,36,"setInterval"],[819,47,878,47],[819,48,878,48],[819,54,878,54],[820,8,879,6,"refreshTotalDistanceFromFirebase"],[820,40,879,38],[820,41,879,39],[820,42,879,40],[821,6,880,4],[821,7,880,5],[821,9,880,7],[821,14,880,12],[821,15,880,13],[821,16,880,14],[821,17,880,15],[823,6,882,4],[823,13,882,11],[823,19,882,17,"clearInterval"],[823,32,882,30],[823,33,882,31,"distanceRefreshInterval"],[823,56,882,54],[823,57,882,55],[824,4,883,2],[824,5,883,3],[824,7,883,5],[824,8,883,6,"user"],[824,12,883,10],[824,13,883,11],[824,14,883,12],[825,4,885,2],[825,24,886,4],[825,28,886,4,"_jsxRuntime"],[825,39,886,4],[825,40,886,4,"jsx"],[825,43,886,4],[825,45,886,5,"LocationContext"],[825,60,886,20],[825,61,886,21,"Provider"],[825,69,886,29],[826,6,887,6,"value"],[826,11,887,11],[826,13,887,13],[827,8,888,8,"currentLocation"],[827,23,888,23],[828,8,889,8,"isTracking"],[828,18,889,18],[829,8,890,8,"totalDistance"],[829,21,890,21],[830,8,891,8,"startTracking"],[830,21,891,21],[831,8,892,8,"stopTracking"],[831,20,892,20],[832,8,893,8,"getLocationHistory"],[832,26,893,26],[833,8,894,8],[834,8,895,8,"startUnifiedTracking"],[834,28,895,28],[835,8,896,8,"stopUnifiedTracking"],[835,27,896,27],[836,8,897,8],[837,8,898,8,"startLiveTracking"],[837,25,898,25],[838,8,899,8,"stopLiveTracking"],[838,24,899,24],[839,8,900,8,"isLiveTracking"],[839,22,900,22],[840,8,901,8,"liveUsers"],[840,17,901,17],[841,8,902,8,"getLiveTrackingUsers"],[841,28,902,28],[842,8,903,8,"refreshTotalDistance"],[843,6,904,6],[843,7,904,8],[844,6,904,8,"children"],[844,14,904,8],[844,16,906,7,"children"],[845,4,906,15],[845,5,907,30],[845,6,907,31],[846,2,909,0],[846,3,909,1],[847,2,909,2,"exports"],[847,9,909,2],[847,10,909,2,"LocationProvider"],[847,26,909,2],[847,29,909,2,"LocationProvider"],[847,45,909,2],[848,2,909,2],[848,6,909,2,"_default"],[848,14,909,2],[848,17,909,2,"exports"],[848,24,909,2],[848,25,909,2,"default"],[848,32,909,2],[848,35,910,15,"LocationProvider"],[848,51,910,31],[849,0,910,31],[849,3]],"functionMap":{"names":["<global>","calculateStraightLineDistance","resolveGoogleApiKey","getStoredUser","getStorageKeysForUser","getDrivingDistanceKm","getCurrentDateString","storeTravelledDistance","storeLiveTrackingData","setDistanceUpdateListener","notifyDistanceUpdate","processLocationForDistance","<anonymous>","useLocation","TaskManager.defineTask$argument_1","LocationProvider","useEffect$argument_0","listener","checkTrackingStatus","getCurrentLocation","refreshTotalDistanceFromFirebase","calculateTotalDistance","refreshTotalDistance","startTracking","stopTracking","getLocationHistory","startUnifiedTracking","setInterval$argument_0","stopUnifiedTracking","startLiveTracking","stopLiveTracking","getLiveTrackingUsers","snap.docs.map$argument_0","allUsers.filter$argument_0","activeUsers.map$argument_0","checkLiveTrackingStatus"],"mappings":"AAA;sCCuB;CDW;4BEE;CFQ;sBGkB;CHQ;8BIE;EJG;6BKE;CLqC;6BMG;CNG;+BOG;CPsD;8BQG;CR8D;kCSa;CTE;6BUE;CVM;mCWE;+CCK;KDG;CXoD;2Ba8B;CbM;2CcE;CdiE;iEeO;YCgB;6CCC;KDE;WJE,qCI;GDC;YCE;GDI;8BGE;GHgB;6BIE;GJoB;2CKE;GL8B;iCME;GN6B;+BOE;GPE;wBQE;GR+B;uBSE;GTe;6BUE;GVe;+BWG;mCC2C;ODsD;GXY;8BaE;GbgC;4BcG;GdE;2BeE;GfE;2CgBE;qCCM,oBD;0CEI;OFQ;oCGE;QHY;GhBQ;YCG;oCmBC;KnBY;aJQ,kCI;GDE;YCG;WJC;KII;GDC;YCG;gDWG;KXE;WJE,4CI;GDC;Cf0B"}},"type":"js/module"}]}